begin_compilation
  name " HotSpotCompilation-10052[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  method "HotSpotCompilation-10052[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  date 1527005233154
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2006 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2027 ?231 ?6 ?107 v2028 ?132 v2029 v2034 ?347 v2032 ?124 ?158 v2033 ?72 ?50 ?139 ?88 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2006 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2034 
=== Succesors ===
next: i2007 
=== Usages ===
j1350 i82 v715 v610 v511 v732 v2043 i146 v762 j2003 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2034 #next: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2007 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2032 
=== Succesors ===
next: a2008 
=== Usages ===
v53 v267 i731 i79 i58 j1377 ?50 i51 i737 i609 i615 v142 i153 v726 i131 j1999 v2000 
=== Predecessor ===
i2006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2032 #next: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2033 
=== Succesors ===
next: a2009 
=== Usages ===
v2108 a708 a2004 a2005 v2036 
=== Predecessor ===
i2007 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2033 #next: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2009 a2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
=== Succesors ===
next: i2010 
=== Usages ===
a457 v2109 v2030 v2031 v2041 v2042 
=== Predecessor ===
a2008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2027 #next: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2010 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2029 
=== Succesors ===
next: i2011 
=== Usages ===
i450 v109 i510 i451 v29 i516 i167 v35 i82 v267 v53 i58 i119 j1359 i983 i79 ?72 v96 i169 
=== Predecessor ===
a2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2029 #next: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2011 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2028 
=== Succesors ===
next: v19 
=== Usages ===
i461 
=== Predecessor ===
i2010 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2028 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2011 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 v16 v726 i359 v109 v245 v255 v1550 v1447 i360 v470 v561 a1474 v2000 v550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i461 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i461 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 v29 i64 i70 i319 i366 i146 i155 i311 i167 i181 v241 a1520 i360 a1411 i1450 i364 i434 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i14 
=== Succesors ===
=== Usages ===
v32 v389 v163 v93 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a457 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2009 
=== Succesors ===
=== Usages ===
?107 v2048 ?1141 ?347 ?88 ?132 ?50 v632 v2046 j1381 v2035 ?124 ?139 ?175 ?72 ?158 v2045 j1392 v2039 v2040 j1375 j1366 j1354 v2037 v2038 v2047 v2044 v2051 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2009 
=== Succesors ===
=== Usages ===
i2012 i2014 i2015 i2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2008 
=== Succesors ===
=== Usages ===
i2013 i2016 i2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2006 
y: i9 
=== Succesors ===
=== Usages ===
v718 v596 v497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2006 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j1813 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1814 j1875 j1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1119 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1903 v1865 j1856 v1916 v1815 j1848 j1769 j1909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 v1567 v1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j986 j1878 j1929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 i310 i318 i370 i372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1166 j1902 j1847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1149 j1166 j1163 j1769 j1839 j1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1155 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1157 j1159 j1167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1158 j1914 j1863 j1167 j1157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 i217 i218 i372 i227 i228 i324 i334 i364 i370 i366 a1411 a1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 v675 v686 v1943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 109]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 i210 i2105 i214 i199 i182 i2104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 v644 v666 v694 v784 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?1141 ?347 ?107 ?50 ?139 ?124 ?158 ?72 ?132 ?175 ?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 v908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 v1294 v1320 v1330 v1273 v1249 a1282 a1282 v1302 v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i2011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605594473996886165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595511370136858776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2012 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2012  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v1241 i2012 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v2030 
=== Succesors ===
next: v1005 
=== Usages ===
v470 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v2030 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2012 
y: i9 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2012 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v1004 
falseSuccessor: v1002 
=== Usages ===
=== Predecessor ===
i2012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v1004 #falseSuccessor: v1002  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236059
stableDimension: 0
stamp: i32 [-236059] ⇊00000000fffc65e5 ⇈00000000fffc65e5
stampKind: i32
value: int[-236059|0xfffffffffffc65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1243 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1243 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
v479 
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2009 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v2031 
value: i924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v2031 value: i924 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1149 j1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B51" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i14 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2010 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B50" 
    xhandlers
    flags 
    probability 4595512854586415624
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1163 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1147 j1140 
=== Succesors ===
=== Usages ===
j1149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1147 j1140  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v345 
values: i14 i9 
=== Succesors ===
=== Usages ===
v2058 v616 ?50 i51 i360 ?347 v517 v2054 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i14 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v345 
values: i141 i14 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i141 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v345 
values: i229 i141 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i229 i141  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v345 
values: i450 i2010 
=== Succesors ===
=== Usages ===
v2035 i70 v537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i450 i2010  <|@  <|@
f <@~|@floating>@ <|@
tid j1167 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1155 j475 
=== Succesors ===
=== Usages ===
j1157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1155 j475  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 4] ⇈0000000000000006
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1165 j1140 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1165 j1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v346 v348 
=== Succesors ===
next: v41 
=== Usages ===
j1163 i359 i366 i372 i451 j1167 j1166 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v346 v348 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i34 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9952842720510096
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482934073994829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2109  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i359 - - 
=== Succesors ===
=== Usages ===
v1330 v2109 i2013 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i359 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
object: a2009 
=== Succesors ===
next: i2013 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?347 object: a2009 #next: i2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2013 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?347 
guard: - 
address: v2036 
=== Succesors ===
next: i2014 
=== Usages ===
i566 i510 i609 
=== Predecessor ===
v2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?347 guard: - address: v2036 #next: i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2014 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2030 
=== Succesors ===
next: v270 
=== Usages ===
v659 v668 i516 v537 i615 v637 v646 i572 
=== Predecessor ===
i2013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2030 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i2007 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid a2005 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1349 j1361 j1373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid j1350 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v2057 v2053 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.446653665387163
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v268 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i2014 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i451 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v1014 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v1014 #falseSuccessor: v1016  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
v545 
=== Predecessor ===
v1017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i1336 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133729
stableDimension: 0
stamp: i32 [-133729] ⇊00000000fffdf59f ⇈00000000fffdf59f
stampKind: i32
value: int[-133729|0xfffffffffffdf59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 i1328 i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560359906504815777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590249167851377328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i2010 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i2006 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i510 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v514 #falseSuccessor: v512  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560287699672483334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1340 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590193320379495204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i2010 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i359 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i359  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v520 #falseSuccessor: v518  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560216214908474216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590138031382331901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1349 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1354 
=== Usages ===
v2053 
=== Predecessor ===
v518 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1360 
=== Usages ===
v2054 
=== Predecessor ===
j1349 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1349 
index: j1350 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1349 index: j1350  <|@  <|@
f <@~|@floating>@ <|@
tid v2054 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1354 
index: i359 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2010 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2053 v2054 j1359 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
j1354 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2053 v2054 j1359 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i451 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1014 
address: v2035 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1014 address: v2035 value: i928 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i451 
y: i14 
=== Succesors ===
=== Usages ===
?72 i85 v573 j1367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i451 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2006 
y: i2010 
=== Succesors ===
=== Usages ===
j1362 v550 v567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2006 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i9 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v550 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v550 #trueSuccessor: v552 #falseSuccessor: v551  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560145444992105188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590083295275140231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2007 
y: i2010 
=== Succesors ===
=== Usages ===
j1371 i572 i85 v561 i566 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2007 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i9 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560075382774899850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590029106529020478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i79 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i566 
y: i82 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i566 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v567 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v567 #trueSuccessor: v570 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560006021179866566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589975459670361922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i79 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i572 
y: i70 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i572 y: i70  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v576 #falseSuccessor: v574  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559937353200783614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569048249791654796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v563 v569 v575 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v563 v569 v575 #next: v578  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i70 i2010 - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i70 i2010 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?72 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B116" 
    xhandlers
    flags 
    probability 4589922349280289952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1361 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1366 
=== Usages ===
v2055 
=== Predecessor ===
v574 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1372 
=== Usages ===
v2056 
=== Predecessor ===
j1361 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid j1362 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1361 
index: j1362 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1361 index: j1362  <|@  <|@
f <@~|@floating>@ <|@
tid j1367 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1366 
index: j1367 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1366 index: j1367  <|@  <|@
f <@~|@floating>@ <|@
tid j1371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2055 v2056 j1371 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
j1366 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2055 v2056 j1371 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i70 
y: i79 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i70 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid i1334 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137755
stableDimension: 0
stamp: i32 [-137755] ⇊00000000fffde5e5 ⇈00000000fffde5e5
stampKind: i32
value: int[-137755|0xfffffffffffde5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591653089454111617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid i1338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159073
stableDimension: 0
stamp: i32 [-159073] ⇊00000000fffd929f ⇈00000000fffd929f
stampKind: i32
value: int[-159073|0xfffffffffffd929f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 i1328 i1328 i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v595 #falseSuccessor: v594  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B37" 
    xhandlers
    flags 
    probability 4562084719323983226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@*|@fixed>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591583202766202150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i9 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2000 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2000 #trueSuccessor: v607 #falseSuccessor: v605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561995264363459108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591514014945171778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i2007 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i2006 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i609 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v613 #falseSuccessor: v611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561906703952540232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4591445519002351709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i2007 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i615 
y: i359 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i615 y: i359  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v616 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v616 #trueSuccessor: v619 #falseSuccessor: v617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561819029145730543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B28" "B13" "B30" "B17" "B15" "B36" "B34" "B32" 
    successors 
    xhandlers
    flags 
    probability 4573736894024993724
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1328 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-248075 - -133729] ⇊00000000fffc0085 ⇈00000000fffdf7ff
valueDescription: i32
=== Inputs ===
merge: v1325 
values: i1334 i1336 i1338 i1336 i1336 i1338 i1338 i1338 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: i1334 i1336 i1338 i1336 i1336 i1338 i1338 i1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1333 v1335 v1337 v1339 v1340 v1342 v1343 v1344 
=== Succesors ===
next: v1330 
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1333 v1335 v1337 v1339 v1340 v1342 v1343 v1344 #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
actionAndReason: i1328 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?347 actionAndReason: i1328 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B44" 
    xhandlers
    flags 
    probability 4591377708018959841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1373 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1375 
=== Usages ===
v2057 
=== Predecessor ===
v617 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1378 
=== Usages ===
v2058 
=== Predecessor ===
j1373 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1373 
index: j1350 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1350  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1375 
index: i359 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1375 index: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2007 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2057 v2058 j1377 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
j1375 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2057 v2058 j1377 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i359 
y: i2007 
=== Succesors ===
=== Usages ===
?1141 i218 i59 v632 i434 v2039 v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i359 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i2010 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.3347570742128223E-4
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 97]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i2007 
=== Succesors ===
=== Usages ===
i59 ?1141 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2010 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 108]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i58 
=== Succesors ===
=== Usages ===
v632 i64 v2037 i217 v637 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i2014 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1018 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
v644 
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i59 
y: i14 
=== Succesors ===
=== Usages ===
v646 v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i2014 
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i64 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1024 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v1022 #falseSuccessor: v1024  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B116" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
v654 
=== Predecessor ===
v1025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3d3be5a9
stamp: void
targetMethod: HotSpotMethod<Arrays.fill(char[], int, int, char)>
=== Inputs ===
arguments: a457 i51 i59 i60 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a457 i51 i59 i60  <|@  <|@
tid ?1141 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 919
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: - a457 i51 i58 - 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - a457 i51 i58 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
bci: 111
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.fill
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?1141 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?1141 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v2037 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i59 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1018 
address: v2037 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1018 address: v2037 value: i928 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i64 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1022 
address: v2038 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1022 address: v2038 value: i931 stateAfter: - lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 128]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i59 
y: i141 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165659
stableDimension: 0
stamp: i32 [-165659] ⇊00000000fffd78e5 ⇈00000000fffd78e5
stampKind: i32
value: int[-165659|0xfffffffffffd78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1257 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid i1258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163355
stableDimension: 0
stamp: i32 [-163355] ⇊00000000fffd81e5 ⇈00000000fffd81e5
stampKind: i32
value: int[-163355|0xfffffffffffd81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 137]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2014 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v659 
=== Succesors ===
trueSuccessor: v1026 
falseSuccessor: v1028 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v659 #trueSuccessor: v1026 #falseSuccessor: v1028  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
v666 
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i14 
=== Succesors ===
=== Usages ===
v668 v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i434 
y: i2014 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i434 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v668 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1032 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v668 #trueSuccessor: v1030 #falseSuccessor: v1032  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B116" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
v675 
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i51 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1026 
address: v2039 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1026 address: v2039 value: i928 stateAfter: - lastLocationAccess: - #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i434 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1030 
address: v2040 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1030 address: v2040 value: i931 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i141 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171291
stableDimension: 0
stamp: i32 [-171291] ⇊00000000fffd62e5 ⇈00000000fffd62e5
stampKind: i32
value: int[-171291|0xfffffffffffd62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168987
stableDimension: 0
stamp: i32 [-168987] ⇊00000000fffd6be5 ⇈00000000fffd6be5
stampKind: i32
value: int[-168987|0xfffffffffffd6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1259 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-171291 - -163355] ⇊00000000fffd00e5 ⇈00000000fffdfbe5
valueDescription: i32
=== Inputs ===
merge: v1256 
values: i1258 i1263 i1265 i1267 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1256 values: i1258 i1263 i1265 i1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1257 v1262 v1264 v1266 
=== Succesors ===
next: v1261 
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1257 v1262 v1264 v1266 #next: v1261  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 85
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 916
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i359 i2007 - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i359 i2007 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i1259 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i1259 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B51" 
    xhandlers
    flags 
    probability 4560798874451295070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1158 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j1166 
y: j475 
=== Succesors ===
=== Usages ===
j1159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1166 y: j475  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B7" "B50" "B2" 
    successors "B52" "B91" 
    xhandlers
    flags 
    probability 4605603690354152557
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1149 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1147 j1163 j1140 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1147 j1163 j1140  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v38 
values: i14 i359 i9 
=== Succesors ===
=== Usages ===
?88 v775 v680 ?132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i14 i359 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i141 i366 i14 
=== Succesors ===
=== Usages ===
v688 v781 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i141 i366 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i229 i372 i141 
=== Succesors ===
=== Usages ===
?107 v304 v2051 v990 i119 i123 ?139 v814 v993 i154 v2062 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i229 i372 i141  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1155 j1167 j475 
=== Succesors ===
=== Usages ===
v2041 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1155 j1167 j475  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v38 
values: j481 j1158 j1155 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j481 j1158 j1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 v390 
=== Succesors ===
next: v93 
=== Usages ===
j1149 i360 i364 i370 j1157 j1159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 v390 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1159 
index: a2009 
=== Succesors ===
=== Usages ===
v694 v784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1159 index: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2041 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1157 
index: a2009 
=== Succesors ===
=== Usages ===
v686 v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1157 index: a2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605596209411378874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i95 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B92" 
    xhandlers
    flags 
    probability 4575429410860470576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B89" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2015 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2015  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i360 - - 
=== Succesors ===
=== Usages ===
v1273 i2015 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i360 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2015 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v2030 
=== Succesors ===
next: v1041 
=== Usages ===
v680 v688 v306 v990 i737 j980 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v2030 #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i360 
y: i2015 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i360 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
i2015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v1038 #falseSuccessor: v1040  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v686 
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i2015 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i364 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v688 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1044 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v688 #trueSuccessor: v1042 #falseSuccessor: v1044  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
v694 
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1038 
address: v2041 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1038 address: v2041 value: i931 stateAfter: - lastLocationAccess: - #next: v694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1042 
address: v2042 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1042 address: v2042 value: i928 stateAfter: - lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i9 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2010 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604199603166572523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B64" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1987 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i370 
y: i2010 
=== Succesors ===
=== Usages ===
i123 v993 v304 v306 i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i370 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i119 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i370 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i2010 
=== Succesors ===
=== Usages ===
j984 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i983 
=== Succesors ===
=== Usages ===
j986 j1814 v1567 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i983  <|@  <|@
f <@~|@floating>@ <|@
tid j986 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j984 
y: j985 
=== Succesors ===
=== Usages ===
j987 v1817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j984 y: j985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v1986 
falseSuccessor: v1983 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v1986 #falseSuccessor: v1983  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B63" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j986 
y: j1149 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j986 y: j1149  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2015 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2015  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j987 
y: j980 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j987 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid a1286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@351564924
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@351564924]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1282 a1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -179227
stableDimension: 0
stamp: i32 [-179227] ⇊00000000fffd43e5 ⇈00000000fffd43e5
stampKind: i32
value: int[-179227|0xfffffffffffd43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v1994 
falseSuccessor: v1991 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v1994 #falseSuccessor: v1991  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1993 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1993  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i2015 
=== Succesors ===
=== Usages ===
v1993 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i370 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v990 
=== Succesors ===
trueSuccessor: v1984 
falseSuccessor: v1992 
=== Usages ===
=== Predecessor ===
v1994 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v990 #trueSuccessor: v1984 #falseSuccessor: v1992  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1982 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1982  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1992 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1981 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1981  <|@  <|@
f <@*|@fixed>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B61" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1981 v1982 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1981 v1982 #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i370 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v1052 #falseSuccessor: v1050  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid i1280 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195] ⇊00000000fffd47ed ⇈00000000fffd47ed
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2015 
y: i119 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2015 y: i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1054 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1056 #falseSuccessor: v1054  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1287 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1287  <|@  <|@
f <@~|@floating>@ <|@
tid i1288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178451
stableDimension: 0
stamp: i32 [-178451] ⇊00000000fffd46ed ⇈00000000fffd46ed
stampKind: i32
value: int[-178451|0xfffffffffffd46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B63" "B68" "B62" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1281 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-179227 - -178195] ⇊00000000fffd42e5 ⇈00000000fffd47ed
valueDescription: i32
=== Inputs ===
merge: v1278 
values: i1280 i1285 i1288 i1285 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1278 values: i1280 i1285 i1288 i1285  <|@  <|@
f <@~|@floating>@ <|@
tid a1282 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1278 
values: a1238 a1286 a1238 a1286 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1278 values: a1238 a1286 a1238 a1286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1279 v1284 v1287 v2106 
=== Succesors ===
next: v1283 
=== Usages ===
i1281 a1282 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1279 v1284 v1287 v2106 #next: v1283  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i370 - - 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i370 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?107 
actionAndReason: i1281 
speculation: a1282 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?107 actionAndReason: i1281 speculation: a1282  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1570 
=== Usages ===
j1768 
=== Predecessor ===
v1054 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j984 
y: j1449 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j984 y: j1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1569 
=== Usages ===
=== Predecessor ===
v1766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v1568 #falseSuccessor: v1569  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i370 
=== Succesors ===
=== Usages ===
j1768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i370  <|@  <|@
f <@~|@floating>@ <|@
tid j1768 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1766 
address: v2051 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1766 address: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1768 
index: - 
=== Succesors ===
=== Usages ===
v1943 v1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1768 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j984 
y: j1813 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j984 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1814 
y: j1119 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1814 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1815 
=== Succesors ===
trueSuccessor: v1617 
falseSuccessor: v1616 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1815 #trueSuccessor: v1617 #falseSuccessor: v1616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1621  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2088 
value: v1972 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2088 value: v1972 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1601 
values: j1140 j1119 
=== Succesors ===
=== Usages ===
v1817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: j1140 j1119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1600 v1621 
=== Succesors ===
next: v1624 
=== Usages ===
j1769 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1600 v1621 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j986 
y: j1769 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j986 y: j1769  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1817 
=== Succesors ===
trueSuccessor: v1623 
falseSuccessor: v1622 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1817 #trueSuccessor: v1623 #falseSuccessor: v1622  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1943 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2088 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1933 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2088 value: i931 stateAfter: - lastLocationAccess: - #next: v1933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B57" "B71" "B76" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605527620437107097
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i370 i119 i119 i119 
=== Succesors ===
=== Usages ===
?124 j1382 v738 i131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i370 i119 i119 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v122 v1932 v1933 
=== Succesors ===
next: v2108 
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v122 v1932 v1933 #next: v2108  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i123 - - 
=== Succesors ===
=== Usages ===
v1294 v2108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i123 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
object: a2008 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?124 object: a2008 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -190305
stableDimension: 0
stamp: i32 [-190305] ⇊00000000fffd189f ⇈00000000fffd189f
stampKind: i32
value: int[-190305|0xfffffffffffd189f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1292 i1292 i1292 i1292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575859158351825080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4605454096428188790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i9 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v726 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v726 #trueSuccessor: v729 #falseSuccessor: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575812102986117363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4605381307659359666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2016 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2036 
=== Succesors ===
next: v736 
=== Usages ===
i731 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2036 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2016 
y: i2007 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2016 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i731 
y: i2006 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i731 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
i2016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v735 #falseSuccessor: v733  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575765518174066724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4605309246778218833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2015 
y: i2007 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2015 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i737 
y: i123 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i737 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v738 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v738 #trueSuccessor: v741 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575719399210136591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B79" "B85" "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4584796243935277432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1292 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-190987 - -190305] ⇊00000000fffd1095 ⇈00000000fffd1dff
valueDescription: i32
=== Inputs ===
merge: v1289 
values: i1296 i1296 i1296 i1296 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1289 values: i1296 i1296 i1296 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1295 v1345 v1346 v1347 
=== Succesors ===
next: v1294 
=== Usages ===
i1292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1295 v1345 v1346 v1347 #next: v1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i1292 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i1292 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B116" 
    xhandlers
    flags 
    probability 4605237906505889409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1379 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1379  <|@  <|@
f <@~|@floating>@ <|@
tid a708 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1379 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a708 
=== Succesors ===
next: j1381 
=== Usages ===
v2059 
=== Predecessor ===
v739 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a708 #next: j1381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1386 
=== Usages ===
v2060 
=== Predecessor ===
j1379 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v2059 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1379 
index: j2003 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: j2003  <|@  <|@
f <@~|@floating>@ <|@
tid j1382 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i123 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1381 
index: j1382 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1381 index: j1382  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2007 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2059 v2060 j1999 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
j1381 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2059 v2060 j1999 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i123 
y: i2007 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i2007  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
f <@~|@floating>@ <|@
tid i1277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176411
stableDimension: 0
stamp: i32 [-176411] ⇊00000000fffd4ee5 ⇈00000000fffd4ee5
stampKind: i32
value: int[-176411|0xfffffffffffd4ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -174363
stableDimension: 0
stamp: i32 [-174363] ⇊00000000fffd56e5 ⇈00000000fffd56e5
stampKind: i32
value: int[-174363|0xfffffffffffd56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
v1040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1271 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-176411 - -173067] ⇊00000000fffd42e5 ⇈00000000fffd5ff5
valueDescription: i32
=== Inputs ===
merge: v1268 
values: i1275 i1277 
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1268 values: i1275 i1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1274 v1276 
=== Succesors ===
next: v1273 
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1274 v1276 #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i1271 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i1271 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B92" 
    xhandlers
    flags 
    probability 4560799708671823203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B53" 
    successors "B93" "B183" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v99 
=== Succesors ===
next: i2017 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v99 #next: i2017  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i360 - - 
=== Succesors ===
=== Usages ===
v1302 i2017 i2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i360 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2017 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?132 
guard: - 
address: v2036 
=== Succesors ===
next: v1069 
=== Usages ===
i807 v762 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?132 guard: - address: v2036 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2006 
y: i2017 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2006 y: i2017  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
i2017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1066 #falseSuccessor: v1068  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B182" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2018 
=== Usages ===
i2019 
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2018 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?132 
guard: - 
address: v2030 
=== Succesors ===
next: v1077 
=== Usages ===
i813 v775 v781 v831 v901 v891 v881 v871 
=== Predecessor ===
v1066 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?132 guard: - address: v2030 #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i360 
y: i2018 
=== Succesors ===
=== Usages ===
v1077 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i360 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1076 
=== Usages ===
=== Predecessor ===
i2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v1074 #falseSuccessor: v1076  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B181" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
v779 
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i2018 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i364 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v1078 #falseSuccessor: v1080  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
v784 
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i141 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v1084 #falseSuccessor: v1082  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201235
stableDimension: 0
stamp: i32 [-201235] ⇊00000000fffceded ⇈00000000fffceded
stampKind: i32
value: int[-201235|0xfffffffffffceded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B180" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2007 
y: i148 
=== Succesors ===
=== Usages ===
i154 j1394 i813 i807 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2007 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i153 
y: i370 
=== Succesors ===
=== Usages ===
i155 v2044 i227 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i370  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i2018 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i154 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1088 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v1086 #falseSuccessor: v1088  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2019 
=== Usages ===
v839 
=== Predecessor ===
v1089 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid a2004 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1387 v2043 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2004 
index: i2006 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2004 index: i2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2019 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1066 
address: v2043 
=== Succesors ===
next: v779 
=== Usages ===
v779 
=== Predecessor ===
v1086 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1066 address: v2043 #next: v779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1074 
address: v2041 
value: i2019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
i2019 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1074 address: v2041 value: i2019 stateAfter: - lastLocationAccess: - #next: v784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1078 
address: v2042 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1078 address: v2042 value: i928 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid i807 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2017 
y: i153 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2017 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2006 
y: i14 
=== Succesors ===
=== Usages ===
j1388 v808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2006 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i807 
y: i146 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i807 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v811 #falseSuccessor: v809  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2018 
y: i153 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2018 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i370 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v817 #falseSuccessor: v815  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v810 v816 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v810 v816 #next: v819  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i370 - - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i370 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1387 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2004 
=== Succesors ===
next: j1392 
=== Usages ===
v2061 
=== Predecessor ===
v815 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2004 #next: j1392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1395 
=== Usages ===
v2062 
=== Predecessor ===
j1387 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid j1388 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1388 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1388  <|@  <|@
f <@~|@floating>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1392 
index: i370 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: i370  <|@  <|@
f <@~|@floating>@ <|@
tid j1394 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i153 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2061 v2062 j1394 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
j1392 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2061 v2062 j1394 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i154 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i154  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1086 
address: v2044 
value: i940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1086 address: v2044 value: i940 stateAfter: - lastLocationAccess: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i154 
y: i14 
=== Succesors ===
=== Usages ===
?158 v2048 i173 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v161 #falseSuccessor: v162  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i2018 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i155 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v1090 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v1090 #falseSuccessor: v1092  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
v908 
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i155 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1090 
address: v2048 
value: i924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1090 address: v2048 value: i924 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i154 
y: i141 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i14 
y: i2010 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1091 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1091  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i155 - - 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i155 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 902
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?158  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i148 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2010 y: i148  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B109" "B178" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v171 
values: i227 i155 
=== Succesors ===
=== Usages ===
?175 i181 i230 v871 v2045 i228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v171 values: i227 i155  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v171 
values: i167 i169 
=== Succesors ===
=== Usages ===
?175 v177 i182 i337 v188 i338 i316 i313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v171 values: i167 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v170 v172 
=== Succesors ===
next: v1097 
=== Usages ===
i173 i174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v170 v172 #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2018 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v871 
=== Succesors ===
trueSuccessor: v1094 
falseSuccessor: v1096 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v871 #trueSuccessor: v1094 #falseSuccessor: v1096  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
v859 v849 v879 
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i14 
=== Succesors ===
=== Usages ===
i234 v2046 v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v2045 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i173 
=== Succesors ===
=== Usages ===
v879 v859 v849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i176 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i174 y: i176  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i174 
y: i60 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i174 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i183 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B177" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i2018 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v1098 #falseSuccessor: v1100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
v889 v869 
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i141 
=== Succesors ===
=== Usages ===
v891 i234 v2047 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid v2046 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i181 
=== Succesors ===
=== Usages ===
v889 v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i181  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 i315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i187 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i174 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i337 i339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i174 
y: i322 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i174 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i337 
y: i141 
=== Succesors ===
=== Usages ===
i310 i2104 i311 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i337 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i2104 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i324 
y: i60 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i324 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2104 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i194 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i324 
y: i229 
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i324 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i324 
y: i14 
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i324 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i310 
y: i311 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i310 y: i311  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i174 
y: i312 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i174 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i313 
y: i60 
=== Succesors ===
=== Usages ===
i868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i313 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i199 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1098 
address: v2046 
value: i868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1098 address: v2046 value: i868 stateAfter: - lastLocationAccess: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B176" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i2018 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i228 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v1102 
falseSuccessor: v1104 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v1102 #falseSuccessor: v1104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
v899 
=== Predecessor ===
v1105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i174 
y: i328 
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i174 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i338 
y: i330 
=== Succesors ===
=== Usages ===
i315 i2105 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i338 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid i2105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i331 
y: i60 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2105 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i204 stateAfter: - lastLocationAccess: - #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i331 
y: i187 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i331 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i174 
y: i315 
=== Succesors ===
=== Usages ===
i335 i339 i321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i174 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i316 
y: i322 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i316 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i339 
y: i141 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i339 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i316 
y: i325 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i316 y: i325  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i334 
y: i335 
=== Succesors ===
=== Usages ===
i210 i318 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i334 y: i335  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i336 
y: i60 
=== Succesors ===
=== Usages ===
i888 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i210 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1098 
address: v2046 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1098 address: v2046 value: i888 stateAfter: - lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i228 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i228  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i336 
y: i229 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i336 
y: i14 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i318 
y: i319 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i318 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i316 
y: i320 
=== Succesors ===
=== Usages ===
i214 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i316 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i321 
y: i60 
=== Succesors ===
=== Usages ===
i898 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i321 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i898 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i214 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1102 
address: v2047 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1102 address: v2047 value: i898 stateAfter: - lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i229 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B41" "B87" "B110" "B113" "B115" "B46" "B27" 
    successors "B117" "B123" 
    xhandlers
    flags 
    probability 4606808864628200659
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v232 
values: i217 i131 i181 i228 i230 i218 i85 
=== Succesors ===
=== Usages ===
?6 j1628 v241 v245 i254 a1474 v1186 i1208 v1497 i1450 v1459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v232 values: i217 i131 i181 i228 i230 i218 i85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v233 v235 v236 v237 v238 v239 v240 
=== Succesors ===
next: a2020 
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v233 v235 v236 v237 v238 v239 v240 #next: a2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2020 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
=== Succesors ===
next: v2107 
=== Usages ===
v2050 v2107 v2049 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2027 #next: v2107  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i234 
=== Succesors ===
=== Usages ===
v1249 a1474 a1520 a1411 v2107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a2020 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
a2020 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a2020 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i14 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1441 v1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1536 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1430 
=== Succesors ===
=== Usages ===
v2078 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2078 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1536 
index: - 
=== Succesors ===
=== Usages ===
j1540 j1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1536 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1411 a1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1558 j1551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i9 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1110 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1112 #falseSuccessor: v1110  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid i1251 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233235
stableDimension: 0
stamp: i32 [-233235] ⇊00000000fffc70ed ⇈00000000fffc70ed
stampKind: i32
value: int[-233235|0xfffffffffffc70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1399 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1399 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1418 
=== Usages ===
v2063 v2064 
=== Predecessor ===
v1110 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1418  <|@  <|@
f <@~|@floating>@ <|@
tid v2063 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1399 
index: - 
=== Succesors ===
=== Usages ===
j1418 v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2063 
=== Succesors ===
next: j1419 
=== Usages ===
j1551 j1424 v2081 
=== Predecessor ===
j1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2063 #next: j1419  <|@  <|@
f <@~|@floating>@ <|@
tid v2064 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1399 
index: - 
=== Succesors ===
=== Usages ===
j1419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2064 
=== Succesors ===
next: v1407 
=== Usages ===
v1404 
=== Predecessor ===
j1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2064 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid j1551 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j458 
=== Succesors ===
=== Usages ===
v1404 v1420 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1551 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1419 y: j1551  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v1405 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
j1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v1405 #falseSuccessor: v1406  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4561347107452113950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1411 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1411 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1397 i141 i14 
=== Succesors ===
next: j1412 
=== Usages ===
j1412 
=== Predecessor ===
v1405 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1397 i141 i14 #next: j1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1412 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1411 
=== Succesors ===
next: v1425 
=== Usages ===
j1424 
=== Predecessor ===
a1411 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1411 #next: v1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
j1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4591012706084053258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2063 
value: j1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2063 value: j1551 stateAfter: - lastLocationAccess: - #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2081 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2081 #next: v1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
v1416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1422 
values: j1418 j1412 
=== Succesors ===
=== Usages ===
v2066 v2065 a1121 v2082 v2083 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1422 values: j1418 j1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1423 v1425 
=== Succesors ===
next: a1121 
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1423 v1425 #next: a1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1121 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1424 
=== Succesors ===
next: j1436 
=== Usages ===
a1127 
=== Predecessor ===
v1422 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1424 #next: j1436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1437 
=== Usages ===
v1437 
=== Predecessor ===
a1121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
value: j1436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
j1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2065 value: j1436 stateAfter: - lastLocationAccess: - #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v2066 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2066 
value: v1554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2066 value: v1554 stateAfter: - lastLocationAccess: - #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1139 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2082 
value: a1139 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2082 value: a1139 stateAfter: - lastLocationAccess: - #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2083 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1127 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2083 value: i9 stateAfter: - lastLocationAccess: - #next: a1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1127 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1121 
=== Succesors ===
next: v1128 
=== Usages ===
v277 
=== Predecessor ===
v1447 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1121 #next: v1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
a1127 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1127 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1127 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2021 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2020 
=== Succesors ===
=== Usages ===
i2021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2049 
=== Succesors ===
next: v1117 
=== Usages ===
i254 i1208 v1186 
=== Predecessor ===
v243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2049 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32
=== Inputs ===
x: i2021 
y: i234 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2021 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i9 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1116 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
i2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1116 #falseSuccessor: v1114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1252 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B124" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1247 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249099 - -233235] ⇊00000000fffc20e5 ⇈00000000fffc76fd
valueDescription: i32
=== Inputs ===
merge: v1244 
values: i1251 i1253 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: i1251 i1253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1250 v1252 
=== Succesors ===
next: v1249 
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1250 v1252 #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1247 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1247 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1453 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1453 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1494 
=== Usages ===
v2067 v2068 
=== Predecessor ===
v1114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1494  <|@  <|@
f <@~|@floating>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1453 
index: - 
=== Succesors ===
=== Usages ===
j1494 v1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1453 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1494 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2067 
=== Succesors ===
next: j1495 
=== Usages ===
j1457 v2069 v2070 a1473 v2075 v2071 v2072 v2073 v2074 
=== Predecessor ===
j1453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2067 #next: j1495  <|@  <|@
f <@~|@floating>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1453 
index: - 
=== Succesors ===
=== Usages ===
j1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1453 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2068 
=== Succesors ===
next: v1462 
=== Usages ===
v1463 
=== Predecessor ===
j1494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2068 #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i1458 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v1461 
falseSuccessor: v1460 
=== Usages ===
=== Predecessor ===
j1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v1461 #falseSuccessor: v1460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4605224104049352743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i1450 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i234 
y: i14 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i234 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1450 
y: i1481 
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1450 y: i1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1451 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1482 
y: i1451 
=== Succesors ===
=== Usages ===
j1456 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1482 y: i1451  <|@  <|@
f <@~|@floating>@ <|@
tid j1456 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1452 
=== Succesors ===
=== Usages ===
j1457 v2071 v2072 v2073 v2074 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1452  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i64
=== Inputs ===
x: j1456 
y: j1494 
=== Succesors ===
=== Usages ===
v1463 v1496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1456 y: j1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1495 
y: j1457 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1495 y: j1457  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1467 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v1468 #falseSuccessor: v1467  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575664907863662293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1466 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4605153615204311980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2067 
value: j1457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2067 value: j1457 stateAfter: - lastLocationAccess: - #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2071 
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2071 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v2072 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2072 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2072 #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2073 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2073 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2074 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2074 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v2069 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2069 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2069 value: i234 stateAfter: - lastLocationAccess: - #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2070 
value: j1449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2070 value: j1449 stateAfter: - lastLocationAccess: - #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2075 
value: v1557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2075 value: v1557 stateAfter: - lastLocationAccess: - #next: v1472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1473 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1494 
=== Succesors ===
next: v1475 
=== Usages ===
a1478 
=== Predecessor ===
v1472 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1494 #next: v1475  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
a1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4590930095777899439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
v1460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4591494006538225546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1464 v1466 
=== Succesors ===
next: a1474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1464 v1466 #next: a1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1474 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1448 i234 i9 
=== Succesors ===
next: v1477 
=== Usages ===
a1478 
=== Predecessor ===
v1465 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1448 i234 i9 #next: v1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
a1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1476 
values: a1473 a1474 
=== Succesors ===
=== Usages ===
v2087 a1220 v2052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1476 values: a1473 a1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1475 v1477 
=== Succesors ===
next: v1820 
=== Usages ===
a1478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1475 v1477 #next: v1820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1641 
=== Usages ===
j1821 j1823 
=== Predecessor ===
v1476 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2021 
y: i234 
=== Succesors ===
=== Usages ===
i1208 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2021 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1186 
trueValue: i2021 
falseValue: i234 
=== Succesors ===
=== Usages ===
j1629 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1186 trueValue: i2021 falseValue: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j1629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1208 
=== Succesors ===
=== Usages ===
j1878 v2087 j1633 v1638 v1763 j1864 j1869 j1872 j1875 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1629 
y: j1449 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1629 y: j1449  <|@  <|@
f <@~|@floating>@ <|@
tid j1809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1923 j1872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1855 j1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1805 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1920 j1869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1915 j1864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1638 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1640 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1638 #trueSuccessor: v1639 #falseSuccessor: v1640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@~|@floating>@ <|@
tid v2052 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1478 
index: - 
=== Succesors ===
=== Usages ===
j1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1478 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1823 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1820 
address: v2052 
=== Succesors ===
=== Usages ===
v2089 v2091 v2093 v2095 v2097 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1820 address: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2020 
=== Succesors ===
=== Usages ===
j1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2020  <|@  <|@
f <@~|@floating>@ <|@
tid j1821 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1820 
address: v2050 
=== Succesors ===
=== Usages ===
v2090 v2092 v2094 v2096 v2098 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1820 address: v2050  <|@  <|@
f <@~|@floating>@ <|@
tid j1864 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1629 
y: j1799 
=== Succesors ===
=== Usages ===
v1865 v1867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1864 
y: j1119 
=== Succesors ===
=== Usages ===
v1644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1864 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1865 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1865 #trueSuccessor: v1642 #falseSuccessor: v1643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1653 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1645  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B175" 
    successors "B138" "B175" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1856 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1646 
values: j1119 j1863 
=== Succesors ===
=== Usages ===
v2098 j1863 v2097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1646 values: j1119 j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1645 
=== Succesors ===
next: v2022 
=== Usages ===
v2022 v1649 v1650 j1856 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1645 #next: v2022  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1856 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1646 
address: v2098 
=== Succesors ===
next: v1960 
=== Usages ===
v1960 
=== Predecessor ===
v1646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1646 address: v2098 #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1856 
=== Succesors ===
=== Usages ===
v1960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2097 
value: v2022 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v2022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2097 value: v2022 stateAfter: - lastLocationAccess: - #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid j1863 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1856 
y: j475 
=== Succesors ===
=== Usages ===
j1848 j1856 v1867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1856 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1864 
y: j1863 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1864 y: j1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1867 
=== Succesors ===
trueSuccessor: v1649 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1867 #trueSuccessor: v1649 #falseSuccessor: v1651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1646 
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1646 #next: v1655  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
v1649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1848 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1654 
values: j1119 j1863 
=== Succesors ===
=== Usages ===
v2096 j1855 j1840 v1870 v2095 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1654 values: j1119 j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1653 v1655 
=== Succesors ===
next: v1676 
=== Usages ===
j1848 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1653 v1655 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid j1869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1629 
y: j1805 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1869 
y: j1848 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1869 y: j1848  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1870 
=== Succesors ===
trueSuccessor: v1675 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1870 #trueSuccessor: v1675 #falseSuccessor: v1674  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1679  <|@  <|@
f <@*|@fixed>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2023 
=== Usages ===
v2023 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1848 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2023 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1674 
address: v2096 
=== Succesors ===
next: v1958 
=== Usages ===
v1958 
=== Predecessor ===
v1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1674 address: v2096 #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid v2095 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1848 
=== Succesors ===
=== Usages ===
v1958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2095 
value: v2023 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1664 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2095 value: v2023 stateAfter: - lastLocationAccess: - #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid j1855 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1848 
y: j1439 
=== Succesors ===
=== Usages ===
j1840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1848 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1840 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1665 
values: j1855 j1848 
=== Succesors ===
=== Usages ===
v2094 j1847 j1832 v1873 v2093 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1665 values: j1855 j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1664 v1679 
=== Succesors ===
next: v1682 
=== Usages ===
j1840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1664 v1679 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid j1872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1629 
y: j1809 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1872 
y: j1840 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1872 y: j1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1873 
=== Succesors ===
trueSuccessor: v1681 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
v1665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1873 #trueSuccessor: v1681 #falseSuccessor: v1680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
v1681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2024 
=== Usages ===
v2024 
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1840 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v2094 
=== Succesors ===
next: v1956 
=== Usages ===
v1956 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v2094 #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid v2093 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1840 
=== Succesors ===
=== Usages ===
v1956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2093 
value: v2024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2093 value: v2024 stateAfter: - lastLocationAccess: - #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid j1847 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1840 
y: j1165 
=== Succesors ===
=== Usages ===
j1832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1840 y: j1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
v1956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1832 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1668 
values: j1847 j1840 
=== Succesors ===
=== Usages ===
v2092 j1839 j1824 v1876 v2091 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1668 values: j1847 j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1667 v1685 
=== Succesors ===
next: v1688 
=== Usages ===
j1832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1667 v1685 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1629 
y: j1813 
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1875 
y: j1832 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1875 y: j1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1876 
=== Succesors ===
trueSuccessor: v1687 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
v1668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1876 #trueSuccessor: v1687 #falseSuccessor: v1686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1691 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
v1687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2025 
=== Usages ===
v2025 
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2025  <|@  <|@
f <@~|@floating>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1832 
=== Succesors ===
=== Usages ===
v2025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2025 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1686 
address: v2092 
=== Succesors ===
next: v1954 
=== Usages ===
v1954 
=== Predecessor ===
v1686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1686 address: v2092 #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1832 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2091 
value: v2025 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1670 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2091 value: v2025 stateAfter: - lastLocationAccess: - #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid j1839 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1832 
y: j1140 
=== Succesors ===
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1832 y: j1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1824 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1671 
values: j1839 j1832 
=== Succesors ===
=== Usages ===
v2090 v1879 v2089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1671 values: j1839 j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1670 v1691 
=== Succesors ===
next: v1694 
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1670 v1691 #next: v1694  <|@  <|@
f <@~|@floating>@ <|@
tid j1878 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1629 
y: j985 
=== Succesors ===
=== Usages ===
v1879 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1878 
y: j1824 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1878 y: j1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1879 
=== Succesors ===
trueSuccessor: v1693 
falseSuccessor: v1692 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1879 #trueSuccessor: v1693 #falseSuccessor: v1692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1697 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2026 
=== Usages ===
i2026 
=== Predecessor ===
v1694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1824 
=== Succesors ===
=== Usages ===
i2026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2026 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1692 
address: v2090 
=== Succesors ===
next: v1952 
=== Usages ===
v1952 
=== Predecessor ===
v1692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1692 address: v2090 #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1824 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2089 
value: i2026 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
i2026 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2089 value: i2026 stateAfter: - lastLocationAccess: - #next: v1673  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B133" "B150" "B149" 
    successors "B152" "B170" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1657 v1673 v1697 
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1657 v1673 v1697 #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1704 
=== Usages ===
j1884 
=== Predecessor ===
v1658 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid j1628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i234 
=== Succesors ===
=== Usages ===
j1633 v1763 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1629 
y: j1628 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1629 y: j1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1763 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1702 
=== Usages ===
=== Predecessor ===
v1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1763 #trueSuccessor: v1703 #falseSuccessor: v1702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v2087 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1478 
index: j1629 
=== Succesors ===
=== Usages ===
j1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1478 index: j1629  <|@  <|@
f <@~|@floating>@ <|@
tid j1884 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1882 
address: v2087 
=== Succesors ===
=== Usages ===
v2099 v2100 v2101 v2102 v2103 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1882 address: v2087  <|@  <|@
f <@~|@floating>@ <|@
tid j1633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1628 
y: j1629 
=== Succesors ===
=== Usages ===
j1929 j1915 j1920 j1923 j1926 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1628 y: j1629  <|@  <|@
f <@~|@floating>@ <|@
tid j1915 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1633 
y: j1799 
=== Succesors ===
=== Usages ===
v1916 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1915 
y: j1119 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1915 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1916 
=== Succesors ===
trueSuccessor: v1705 
falseSuccessor: v1706 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1916 #trueSuccessor: v1705 #falseSuccessor: v1706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B169" 
    successors "B156" "B169" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1909 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1709 
values: j1119 j1914 
=== Succesors ===
=== Usages ===
v2103 j1914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1709 values: j1119 j1914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1708 
=== Succesors ===
next: v1970 
=== Usages ===
j1909 v1712 v1713 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1708 #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1909 
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2103 
value: v1975 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1715 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2103 value: v1975 stateAfter: - lastLocationAccess: - #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid j1914 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1909 
y: j475 
=== Succesors ===
=== Usages ===
j1903 j1909 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1909 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1915 
y: j1914 
=== Succesors ===
=== Usages ===
v1715 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1915 y: j1914  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1918 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1714 
=== Usages ===
=== Predecessor ===
v1970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1918 #trueSuccessor: v1712 #falseSuccessor: v1714  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1709 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1709 #next: v1718  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
v1712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1903 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1717 
values: j1119 j1914 
=== Succesors ===
=== Usages ===
v2102 j1908 j1897 v1921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1717 values: j1119 j1914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1716 v1718 
=== Succesors ===
next: v1739 
=== Usages ===
j1903 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1716 v1718 #next: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid j1920 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1633 
y: j1805 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1920 
y: j1903 
=== Succesors ===
=== Usages ===
v1739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1920 y: j1903  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1921 
=== Succesors ===
trueSuccessor: v1738 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
v1717 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1921 #trueSuccessor: v1738 #falseSuccessor: v1737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1742  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1969 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1903 
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1903  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2102 
value: v1979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1727 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2102 value: v1979 stateAfter: - lastLocationAccess: - #next: v1727  <|@  <|@
f <@~|@floating>@ <|@
tid j1908 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1903 
y: j1439 
=== Succesors ===
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
v1969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1897 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1728 
values: j1908 j1903 
=== Succesors ===
=== Usages ===
v2101 j1902 j1891 v1924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1728 values: j1908 j1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1727 v1742 
=== Succesors ===
next: v1745 
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1727 v1742 #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid j1923 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1633 
y: j1809 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1923 
y: j1897 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1923 y: j1897  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1924 
=== Succesors ===
trueSuccessor: v1744 
falseSuccessor: v1743 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1924 #trueSuccessor: v1744 #falseSuccessor: v1743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
v1744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1897 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1897  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2101 
value: v1978 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2101 value: v1978 stateAfter: - lastLocationAccess: - #next: v1730  <|@  <|@
f <@~|@floating>@ <|@
tid j1902 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1897 
y: j1165 
=== Succesors ===
=== Usages ===
j1891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1897 y: j1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
v1967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1891 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1731 
values: j1902 j1897 
=== Succesors ===
=== Usages ===
v2100 j1896 j1885 v1927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1731 values: j1902 j1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1730 v1748 
=== Succesors ===
next: v1751 
=== Usages ===
j1891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1730 v1748 #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid j1926 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1633 
y: j1813 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1926 
y: j1891 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1926 y: j1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1927 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1749 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1927 #trueSuccessor: v1750 #falseSuccessor: v1749  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1750 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1965 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1965  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1891 
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2100 
value: v1977 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2100 value: v1977 stateAfter: - lastLocationAccess: - #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid j1896 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1891 
y: j1140 
=== Succesors ===
=== Usages ===
j1885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1891 y: j1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1965 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1885 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1734 
values: j1896 j1891 
=== Succesors ===
=== Usages ===
v2099 v1930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1734 values: j1896 j1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1733 v1754 
=== Succesors ===
next: v1757 
=== Usages ===
j1885 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1733 v1754 #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid j1929 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1633 
y: j985 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1929 
y: j1885 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1929 y: j1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1930 
=== Succesors ===
trueSuccessor: v1756 
falseSuccessor: v1755 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1930 #trueSuccessor: v1756 #falseSuccessor: v1755  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v1757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1885 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1976 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2099 
value: i1976 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2099 value: i1976 stateAfter: - lastLocationAccess: - #next: v1736  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1963 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1713  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1709 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B171" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1720 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1720  <|@  <|@
f <@*|@fixed>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B167" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1720 v1736 v1760 
=== Succesors ===
next: a1220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1720 v1736 v1760 #next: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1478 
=== Succesors ===
next: j1509 
=== Usages ===
a1134 
=== Predecessor ===
v1721 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1478 #next: j1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1509 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1524 
=== Usages ===
v2076 v2077 
=== Predecessor ===
a1220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1524  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1509 
index: - 
=== Succesors ===
=== Usages ===
j1524 v1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2076 
=== Succesors ===
next: j1525 
=== Usages ===
j1558 j1530 v2084 
=== Predecessor ===
j1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2076 #next: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1509 
index: - 
=== Succesors ===
=== Usages ===
j1525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2077 
=== Succesors ===
next: v1517 
=== Usages ===
v1514 
=== Predecessor ===
j1524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2077 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1524 
y: j458 
=== Succesors ===
=== Usages ===
v1514 v1526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1524 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1525 
y: j1558 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1525 y: j1558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
j1525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1515 #falseSuccessor: v1516  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4576166161872841055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1520 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1520 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1397 i141 i14 
=== Succesors ===
next: j1521 
=== Usages ===
j1521 
=== Predecessor ===
v1515 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1397 i141 i14 #next: j1521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1521 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1520 
=== Succesors ===
next: v1531 
=== Usages ===
j1530 
=== Predecessor ===
a1520 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1520 #next: v1531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
j1521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4605928992499760377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2076 
value: j1558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2076 value: j1558 stateAfter: - lastLocationAccess: - #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v2084 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1524 
index: - 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2084 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2084 #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1530 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1528 
values: j1524 j1521 
=== Succesors ===
=== Usages ===
v2080 v2079 a1131 v2085 v2086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1528 values: j1524 j1521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1529 v1531 
=== Succesors ===
next: a1131 
=== Usages ===
j1530 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1529 v1531 #next: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1530 
=== Succesors ===
next: j1540 
=== Usages ===
a1137 
=== Predecessor ===
v1528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1530 #next: j1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1540 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1541 
=== Usages ===
v1541 
=== Predecessor ===
a1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2079 
value: j1540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
j1540 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2079 value: j1540 stateAfter: - lastLocationAccess: - #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v2080 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2080 
value: v1554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2080 value: v1554 stateAfter: - lastLocationAccess: - #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1134 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2085 
value: a1134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2085 value: a1134 stateAfter: - lastLocationAccess: - #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v2086 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2086 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1137 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2086 value: i9 stateAfter: - lastLocationAccess: - #next: a1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1137 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1131 
=== Succesors ===
next: v1138 
=== Usages ===
v278 
=== Predecessor ===
v1550 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1131 #next: v1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
a1137 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1137 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1137 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B137" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid i1324 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228379
stableDimension: 0
stamp: i32 [-228379] ⇊00000000fffc83e5 ⇈00000000fffc83e5
stampKind: i32
value: int[-228379|0xfffffffffffc83e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid i1322 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248859
stableDimension: 0
stamp: i32 [-248859] ⇊00000000fffc33e5 ⇈00000000fffc33e5
stampKind: i32
value: int[-248859|0xfffffffffffc33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1316 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid i1317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" "B176" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1318 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249371 - -228379] ⇊00000000fffc01e5 ⇈00000000fffcb3e5
valueDescription: i32
=== Inputs ===
merge: v1315 
values: i1317 i1322 i1324 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1315 values: i1317 i1322 i1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1316 v1321 v1323 
=== Succesors ===
next: v1320 
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1316 v1321 v1323 #next: v1320  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: - a457 i173 i174 - 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - a457 i173 i174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?175 
actionAndReason: i1318 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?175 actionAndReason: i1318 speculation: a1238  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -213019
stableDimension: 0
stamp: i32 [-213019] ⇊00000000fffcbfe5 ⇈00000000fffcbfe5
stampKind: i32
value: int[-213019|0xfffffffffffcbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1088 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid i1312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -200219
stableDimension: 0
stamp: i32 [-200219] ⇊00000000fffcf1e5 ⇈00000000fffcf1e5
stampKind: i32
value: int[-200219|0xfffffffffffcf1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid i1310 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198683
stableDimension: 0
stamp: i32 [-198683] ⇊00000000fffcf7e5 ⇈00000000fffcf7e5
stampKind: i32
value: int[-198683|0xfffffffffffcf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1076 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195355
stableDimension: 0
stamp: i32 [-195355] ⇊00000000fffd04e5 ⇈00000000fffd04e5
stampKind: i32
value: int[-195355|0xfffffffffffd04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B96" "B182" "B181" "B180" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1300 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-213019 - -194059] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1297 
values: i1306 i1308 i1310 i1312 i1314 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1297 values: i1306 i1308 i1310 i1312 i1314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1305 v1307 v1309 v1311 v1313 
=== Succesors ===
next: v1302 
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1305 v1307 v1309 v1311 v1313 #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?132 
actionAndReason: i1300 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?132 actionAndReason: i1300 speculation: a1238  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i2006 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lsun/misc/FloatingDecimal$BinaryToASCIIBuffer;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2027 ?231 ?6 ?107 v2028 ?132 v2029 v2034 ?347 v2032 ?124 ?158 v2033 ?72 ?50 ?139 ?88 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2034 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2006 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2006 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.firstDigitIndex
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 76]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2034 
=== Succesors ===
next: i2007 
=== Usages ===
j1350 i82 v715 v610 v511 v732 v2043 i146 v762 j2003 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2034 #next: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2007 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.nDigits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2032 
=== Succesors ===
next: a2008 
=== Usages ===
v53 v267 i731 i79 i58 j1377 ?50 i51 i737 i609 i615 v142 i153 v726 i131 j1999 v2000 
=== Predecessor ===
i2006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2032 #next: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2033 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2008 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.digits
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 72]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2033 
=== Succesors ===
next: a2009 
=== Usages ===
v2108 a708 a2004 a2005 v2036 
=== Predecessor ===
i2007 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2033 #next: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2027 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2009 a2020 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2009 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
=== Succesors ===
next: i2010 
=== Usages ===
a457 v2109 v2030 v2031 v2041 v2042 
=== Predecessor ===
a2008 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2027 #next: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v2029 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2010 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2010 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.decExponent
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 44]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2029 
=== Succesors ===
next: i2011 
=== Usages ===
i450 v109 i510 i451 v29 i516 i167 v35 i82 v267 v53 i58 i119 j1359 i983 i79 ?72 v96 i169 
=== Predecessor ===
a2009 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2029 #next: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2011 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2011 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.isNegative
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: - 
address: v2028 
=== Succesors ===
next: v19 
=== Usages ===
i461 
=== Predecessor ===
i2010 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2028 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2011 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2011  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 17]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 v16 v726 i359 v109 v245 v255 v1550 v1447 i360 v470 v561 a1474 v2000 v550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i461 
y: i9 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i461 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:906) [bci: 0]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i359 v29 i64 i70 i319 i366 i146 i155 i311 i167 i181 v241 a1520 i360 a1411 i1450 i364 i434 i450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i14 
=== Succesors ===
=== Usages ===
v32 v389 v163 v93 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid a457 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 2]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2009 
=== Succesors ===
=== Usages ===
?107 v2048 ?1141 ?347 ?88 ?132 ?50 v632 v2046 j1381 v2035 ?124 ?139 ?175 ?72 ?158 v2045 j1392 v2039 v2040 j1375 j1366 j1354 v2037 v2038 v2047 v2044 v2051 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2009 
=== Succesors ===
=== Usages ===
i2012 i2014 i2015 i2018 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2008 
=== Succesors ===
=== Usages ===
i2013 i2016 i2017 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2006 
y: i9 
=== Succesors ===
=== Usages ===
v718 v596 v497 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2006 y: i9  <|@  <|@
f <@~|@floating>@ <|@
tid j1813 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1814 j1875 j1926 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1119 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1903 v1865 j1856 v1916 v1815 j1848 j1769 j1909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1449 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1498 v1567 v1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j985 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j986 j1878 j1929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i229 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 3
stableDimension: 0
stamp: i32 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
i230 i310 i318 i370 i372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1165 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1166 j1902 j1847 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1140 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1149 j1166 j1163 j1769 j1839 j1896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1155 <|@
result long[18|0x12] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 18
stableDimension: 0
stamp: i64 [18] ⇊0000000000000012 ⇈0000000000000012
stampKind: i64
value: long[18|0x12]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1157 j1159 j1167 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j475 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1158 j1914 j1863 j1167 j1157 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i141 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 i217 i218 i372 i227 i228 i324 i334 i364 i370 i366 a1411 a1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i931 <|@
result short[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i16 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i16
value: short[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v654 v675 v686 v1943 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 109]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 48
stableDimension: 0
stamp: i32 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i32
value: int[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
v632 i210 i2105 i214 i199 i182 i2104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i928 <|@
result short[46|0x2e] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 46
stableDimension: 0
stamp: i16 [46] ⇊000000000000002e ⇈000000000000002e
stampKind: i16
value: short[46|0x2e]
=== Inputs ===
=== Succesors ===
=== Usages ===
v545 v644 v666 v694 v784 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?231 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
?1141 ?347 ?107 ?50 ?139 ?124 ?158 ?72 ?132 ?175 ?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@~|@floating>@ <|@
tid i924 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v479 v908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1238 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 v1294 v1320 v1330 v1273 v1249 a1282 a1282 v1302 v1261 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 33]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9997660380889991
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
i2011 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v17 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v389  <|@  <|@
f <@*|@fixed>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v387 
falseSuccessor: v388 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v387 #falseSuccessor: v388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605594473996886165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595511370136858776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], v5|DWORD, long[16|0x10], long[2|0x2]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 36]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2012 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2012  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - 
=== Succesors ===
=== Usages ===
v1241 i2012 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2012 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v2030 
=== Succesors ===
next: v1005 
=== Usages ===
v470 
=== Predecessor ===
v18 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v2030 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2012 
y: i9 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2012 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1005 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v470 
=== Succesors ===
trueSuccessor: v1004 
falseSuccessor: v1002 
=== Usages ===
=== Predecessor ===
i2012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v470 #trueSuccessor: v1004 #falseSuccessor: v1002  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1241 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1241  <|@  <|@
f <@~|@floating>@ <|@
tid i1243 <|@
result int[-236059|0xfffffffffffc65e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236059
stableDimension: 0
stamp: i32 [-236059] ⇊00000000fffc65e5 ⇈00000000fffc65e5
stampKind: i32
value: int[-236059|0xfffffffffffc65e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1241 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1241 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1243 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1004 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1243 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -236059 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1002 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v479 
=== Usages ===
v479 
=== Predecessor ===
v1005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v2031 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2009 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2009  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:909) [bci: 40]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1002 
address: v2031 
value: i924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v1002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1002 address: v2031 value: i924 stateAfter: - lastLocationAccess: - #next: v32  <|@  <|@
f <@~|@floating>@ <|@
tid j1147 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i64 [3] ⇊0000000000000003 ⇈0000000000000003
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1149 j1163 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 47]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8238954719320615
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v30 
falseSuccessor: v31 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v30 #falseSuccessor: v31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B51" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid j481 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 60]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 20
stableDimension: 0
stamp: i64 [20] ⇊0000000000000014 ⇈0000000000000014
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v30 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i450 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i14 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2010 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
v31 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], v8|DWORD, long[18|0x12], long[4|0x4]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B50" 
    xhandlers
    flags 
    probability 4595512854586415624
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1163 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1147 j1140 
=== Succesors ===
=== Usages ===
j1149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1147 j1140  <|@  <|@
f <@~|@floating>@ <|@
tid i359 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v345 
values: i14 i9 
=== Succesors ===
=== Usages ===
v2058 v616 ?50 i51 i360 ?347 v517 v2054 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i14 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i366 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v345 
values: i141 i14 
=== Succesors ===
=== Usages ===
i364 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i141 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i372 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v345 
values: i229 i141 
=== Succesors ===
=== Usages ===
i370 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i229 i141  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v345 
values: i450 i2010 
=== Succesors ===
=== Usages ===
v2035 i70 v537 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: i450 i2010  <|@  <|@
f <@~|@floating>@ <|@
tid j1167 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1155 j475 
=== Succesors ===
=== Usages ===
j1157 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1155 j475  <|@  <|@
f <@~|@floating>@ <|@
tid j1166 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 4] ⇈0000000000000006
valueDescription: i64
=== Inputs ===
merge: v345 
values: j1165 j1140 
=== Succesors ===
=== Usages ===
j1158 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v345 values: j1165 j1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v346 v348 
=== Succesors ===
next: v41 
=== Usages ===
j1163 i359 i366 i372 i451 j1167 j1166 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v346 v348 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i34 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i34  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 56]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9952842720510096
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v36 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v36 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v13|DWORD, v14|QWORD, v15|QWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482934073994829
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 59]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2109  <|@  <|@
tid ?347 <|@
d <@d|@=== Debug Properties ===
bci: 43
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 912
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i359 - - 
=== Succesors ===
=== Usages ===
v1330 v2109 i2013 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i359 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
object: a2009 
=== Succesors ===
next: i2013 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?347 object: a2009 #next: i2013  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2013 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?347 
guard: - 
address: v2036 
=== Succesors ===
next: i2014 
=== Usages ===
i566 i510 i609 
=== Predecessor ===
v2109 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?347 guard: - address: v2036 #next: i2014  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2014 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2030 
=== Succesors ===
next: v270 
=== Usages ===
v659 v668 i516 v537 i615 v637 v646 i572 
=== Predecessor ===
i2013 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2030 #next: v270  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i2007 
=== Succesors ===
=== Usages ===
v270 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid a2005 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1349 j1361 j1373 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid j1350 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v2057 v2053 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.446653665387163
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i2014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v268 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 9]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1017 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1017  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i2014 
=== Succesors ===
=== Usages ===
v1017 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i451 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v537 
=== Succesors ===
trueSuccessor: v1014 
falseSuccessor: v1016 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v537 #trueSuccessor: v1014 #falseSuccessor: v1016  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
v545 
=== Predecessor ===
v1017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid i1336 <|@
result int[-133729|0xfffffffffffdf59f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -133729
stableDimension: 0
stamp: i32 [-133729] ⇊00000000fffdf59f ⇈00000000fffdf59f
stampKind: i32
value: int[-133729|0xfffffffffffdf59f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 i1328 i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560359906504815777
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1335 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1335  <|@  <|@
f <@*|@fixed>@ <|@
tid v1335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590249167851377328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i510 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i2010 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i2006 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i510 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v511 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v512 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v511 #trueSuccessor: v514 #falseSuccessor: v512  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v16|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560287699672483334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1340 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1340  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590193320379495204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i2010 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i516 
y: i359 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i516 y: i359  <|@  <|@
f <@*|@fixed>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v517 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v518 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v517 #trueSuccessor: v520 #falseSuccessor: v518  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v17|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560216214908474216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1339 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v520 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590138031382331901
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1349 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1349 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1354 
=== Usages ===
v2053 
=== Predecessor ===
v518 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1354 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1360 
=== Usages ===
v2054 
=== Predecessor ===
j1349 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1360  <|@  <|@
f <@~|@floating>@ <|@
tid v2053 <|@
result [v22|QWORD[*] + v19|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1349 
index: j1350 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1349 index: j1350  <|@  <|@
f <@~|@floating>@ <|@
tid v2054 <|@
result [v23|QWORD[*] + v10|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1354 
index: i359 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1354 index: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j1359 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2010 
=== Succesors ===
=== Usages ===
v1360 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2010  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2053 v2054 j1359 
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
j1354 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2053 v2054 j1359 #next: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v2035 <|@
result [v7|QWORD[.] + v13|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i451 
=== Succesors ===
=== Usages ===
v545 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1014 
address: v2035 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1014 address: v2035 value: i928 stateAfter: - lastLocationAccess: - #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i451 
y: i14 
=== Succesors ===
=== Usages ===
?72 i85 v573 j1367 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i451 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 170]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2006 
y: i2010 
=== Succesors ===
=== Usages ===
j1362 v550 v567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2006 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i82 
y: i9 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i82 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v550 
=== Succesors ===
trueSuccessor: v552 
falseSuccessor: v551 
=== Usages ===
=== Predecessor ===
v545 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v550 #trueSuccessor: v552 #falseSuccessor: v551  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560145444992105188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590083295275140231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v565  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:926) [bci: 158]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2007 
y: i2010 
=== Succesors ===
=== Usages ===
j1371 i572 i85 v561 i566 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2007 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i9 
=== Succesors ===
=== Usages ===
v565 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i79 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v564 
falseSuccessor: v562 
=== Usages ===
=== Predecessor ===
v551 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v564 #falseSuccessor: v562  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560075382774899850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v564 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590029106529020478
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
v565 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid i566 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i79 
=== Succesors ===
=== Usages ===
v567 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i566 
y: i82 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i566 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v567 
=== Succesors ===
trueSuccessor: v570 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v562 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v567 #trueSuccessor: v570 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v16|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560006021179866566
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v570 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589975459670361922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v571 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid i572 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i79 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i79  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i572 
y: i70 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i572 y: i70  <|@  <|@
f <@*|@fixed>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v576 
falseSuccessor: v574 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v576 #falseSuccessor: v574  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v17|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559937353200783614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@*|@fixed>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
v576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569048249791654796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v563 v569 v575 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v563 v569 v575 #next: v578  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 145
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 925
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i70 i2010 - 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i70 i2010 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?72 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v557 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -148065 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v7|QWORD[.] v25|DWORD v5|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B116" 
    xhandlers
    flags 
    probability 4589922349280289952
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1361 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1361 <|@
result v30|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1366 
=== Usages ===
v2055 
=== Predecessor ===
v574 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1366  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1366 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1372 
=== Usages ===
v2056 
=== Predecessor ===
j1361 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid j1362 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i82 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i82  <|@  <|@
f <@~|@floating>@ <|@
tid v2055 <|@
result [v30|QWORD[*] + v32|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1361 
index: j1362 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1361 index: j1362  <|@  <|@
f <@~|@floating>@ <|@
tid j1367 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i70 
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i70  <|@  <|@
f <@~|@floating>@ <|@
tid v2056 <|@
result [v31|QWORD[*] + v33|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1366 
index: j1367 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1366 index: j1367  <|@  <|@
f <@~|@floating>@ <|@
tid j1371 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i79 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i79  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:927) [bci: 175]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2055 v2056 j1371 
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
j1366 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2055 v2056 j1371 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid i85 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:928) [bci: 181]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i70 
y: i79 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i70 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v1372 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v31|QWORD[*] + v33|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B27 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1333 
=== Usages ===
=== Predecessor ===
v1017 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1333  <|@  <|@
f <@~|@floating>@ <|@
tid i1334 <|@
result int[-137755|0xfffffffffffde5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -137755
stableDimension: 0
stamp: i32 [-137755] ⇊00000000fffde5e5 ⇈00000000fffde5e5
stampKind: i32
value: int[-137755|0xfffffffffffde5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1333 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v1016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137755|0xfffffffffffde5e5]] destination: B28 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591653089454111617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 5]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:914) [bci: 67]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid i1338 <|@
result int[-159073|0xfffffffffffd929f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -159073
stableDimension: 0
stamp: i32 [-159073] ⇊00000000fffd929f ⇈00000000fffd929f
stampKind: i32
value: int[-159073|0xfffffffffffd929f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1328 i1328 i1328 i1328 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v595 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v595 #falseSuccessor: v594  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B37" 
    xhandlers
    flags 
    probability 4562084719323983226
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1337 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1337  <|@  <|@
f <@*|@fixed>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B30 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591583202766202150
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v608 
=== Usages ===
=== Predecessor ===
v596 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v2000 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i9 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2000 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v605 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2000 #trueSuccessor: v607 #falseSuccessor: v605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561995264363459108
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1344 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1344  <|@  <|@
f <@*|@fixed>@ <|@
tid v1344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591514014945171778
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2013 
y: i2007 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2013 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i609 
y: i2006 
=== Succesors ===
=== Usages ===
v614 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i609 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v613 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v613 #falseSuccessor: v611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v16|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561906703952540232
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1343 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v613 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4591445519002351709
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v620 
=== Usages ===
=== Predecessor ===
v614 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v620  <|@  <|@
f <@~|@floating>@ <|@
tid i615 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2014 
y: i2007 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2014 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i615 
y: i359 
=== Succesors ===
=== Usages ===
v620 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i615 y: i359  <|@  <|@
f <@*|@fixed>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v616 
=== Succesors ===
trueSuccessor: v619 
falseSuccessor: v617 
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v616 #trueSuccessor: v619 #falseSuccessor: v617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v17|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561819029145730543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1342 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1342  <|@  <|@
f <@*|@fixed>@ <|@
tid v1342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1325 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B28" "B13" "B30" "B17" "B15" "B36" "B34" "B32" 
    successors 
    xhandlers
    flags 
    probability 4573736894024993724
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1328 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-248075 - -133729] ⇊00000000fffc0085 ⇈00000000fffdf7ff
valueDescription: i32
=== Inputs ===
merge: v1325 
values: i1334 i1336 i1338 i1336 i1336 i1338 i1338 i1338 
=== Succesors ===
=== Usages ===
v1330 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1325 values: i1334 i1336 i1338 i1336 i1336 i1338 i1338 i1338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1325 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1333 v1335 v1337 v1339 v1340 v1342 v1343 v1344 
=== Succesors ===
next: v1330 
=== Usages ===
i1328 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1333 v1335 v1337 v1339 v1340 v1342 v1343 v1344 #next: v1330  <|@  <|@
f <@*|@fixed>@ <|@
tid v1330 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?347 
actionAndReason: i1328 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1325 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?347 actionAndReason: i1328 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B44" 
    xhandlers
    flags 
    probability 4591377708018959841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1373 
=== Usages ===
=== Predecessor ===
v620 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1373 <|@
result v39|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2005 
=== Succesors ===
next: j1375 
=== Usages ===
v2057 
=== Predecessor ===
v617 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2005 #next: j1375  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1375 <|@
result v40|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1378 
=== Usages ===
v2058 
=== Predecessor ===
j1373 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
result [v39|QWORD[*] + v19|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1373 
index: j1350 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1373 index: j1350  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
result [v40|QWORD[*] + v10|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1375 
index: i359 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1375 index: i359  <|@  <|@
f <@~|@floating>@ <|@
tid j1377 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2007 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2057 v2058 j1377 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
j1375 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2057 v2058 j1377 #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 87]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i359 
y: i2007 
=== Succesors ===
=== Usages ===
?1141 i218 i59 v632 i434 v2039 v659 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i359 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i2010 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:917) [bci: 94]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.3347570742128223E-4
=== Inputs ===
condition: v53 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v53 #trueSuccessor: v54 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v39|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v40|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 97]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1021 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:918) [bci: 102]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i2007 
=== Succesors ===
=== Usages ===
i59 ?1141 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2010 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 108]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i58 
=== Succesors ===
=== Usages ===
v632 i64 v2037 i217 v637 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i59 
y: i2014 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i59 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v637 
=== Succesors ===
trueSuccessor: v1018 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v637 #trueSuccessor: v1018 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
v644 
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@~|@floating>@ <|@
tid i64 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 120]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i59 
y: i14 
=== Succesors ===
=== Usages ===
v646 v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i64 
y: i2014 
=== Succesors ===
=== Usages ===
v1025 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i64 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v646 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1024 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v646 #trueSuccessor: v1022 #falseSuccessor: v1024  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B116" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v62 
=== Usages ===
v654 
=== Predecessor ===
v1025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v62  <|@  <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3d3be5a9
stamp: void
targetMethod: HotSpotMethod<Arrays.fill(char[], int, int, char)>
=== Inputs ===
arguments: a457 i51 i59 i60 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a457 i51 i59 i60  <|@  <|@
tid ?1141 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 919
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: - a457 i51 i58 - 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - a457 i51 i58 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
bci: 111
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
polymorphic: false
stamp: void
targetMethod: Direct#Arrays.fill
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v632 
stateDuring: ?1141 
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v632 stateDuring: ?1141 #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v2037 <|@
result [v7|QWORD[.] + v44|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i59 
=== Succesors ===
=== Usages ===
v644 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1018 
address: v2037 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1018 address: v2037 value: i928 stateAfter: - lastLocationAccess: - #next: v654  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
result [v7|QWORD[.] + v45|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i64 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1022 
address: v2038 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v233 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1022 address: v2038 value: i931 stateAfter: - lastLocationAccess: - #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid i217 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 128]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i59 
y: i141 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i59 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v654 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - v7|QWORD[.] v42|DWORD v43|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5] <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v44|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v45|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA [v44|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B41 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:922) [bci: 133]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1262 
=== Usages ===
=== Predecessor ===
v1025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1262  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
result int[-165659|0xfffffffffffd78e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -165659
stableDimension: 0
stamp: i32 [-165659] ⇊00000000fffd78e5 ⇈00000000fffd78e5
stampKind: i32
value: int[-165659|0xfffffffffffd78e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165659|0xfffffffffffd78e5]] destination: B42 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:921) [bci: 125]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1257 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1257  <|@  <|@
f <@~|@floating>@ <|@
tid i1258 <|@
result int[-163355|0xfffffffffffd81e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -163355
stableDimension: 0
stamp: i32 [-163355] ⇊00000000fffd81e5 ⇈00000000fffd81e5
stampKind: i32
value: int[-163355|0xfffffffffffd81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1020 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163355|0xfffffffffffd81e5]] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 137]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1029  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2014 
=== Succesors ===
=== Usages ===
v1029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i51 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v659 
=== Succesors ===
trueSuccessor: v1026 
falseSuccessor: v1028 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v659 #trueSuccessor: v1026 #falseSuccessor: v1028  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1033 
=== Usages ===
v666 
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1033  <|@  <|@
f <@~|@floating>@ <|@
tid i434 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 139]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i14 
=== Succesors ===
=== Usages ===
v668 v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i434 
y: i2014 
=== Succesors ===
=== Usages ===
v1033 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i434 y: i2014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v668 
=== Succesors ===
trueSuccessor: v1030 
falseSuccessor: v1032 
=== Usages ===
=== Predecessor ===
v1026 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v668 #trueSuccessor: v1030 #falseSuccessor: v1032  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B116" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
v675 
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@~|@floating>@ <|@
tid v2039 <|@
result [v7|QWORD[.] + v42|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i51 
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1026 
address: v2039 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v675 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1026 address: v2039 value: i928 stateAfter: - lastLocationAccess: - #next: v675  <|@  <|@
f <@~|@floating>@ <|@
tid v2040 <|@
result [v7|QWORD[.] + v47|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i434 
=== Succesors ===
=== Usages ===
v675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1030 
address: v2040 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1030 address: v2040 value: i931 stateAfter: - lastLocationAccess: - #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 188]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i51 
y: i141 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v42|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v47|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = LEA [v42|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B46 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:930) [bci: 193]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1266 
=== Usages ===
=== Predecessor ===
v1033 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1266  <|@  <|@
f <@~|@floating>@ <|@
tid i1267 <|@
result int[-171291|0xfffffffffffd62e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -171291
stableDimension: 0
stamp: i32 [-171291] ⇊00000000fffd62e5 ⇈00000000fffd62e5
stampKind: i32
value: int[-171291|0xfffffffffffd62e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1032 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171291|0xfffffffffffd62e5]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:924) [bci: 144]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1264 
=== Usages ===
=== Predecessor ===
v1029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1264  <|@  <|@
f <@~|@floating>@ <|@
tid i1265 <|@
result int[-168987|0xfffffffffffd6be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -168987
stableDimension: 0
stamp: i32 [-168987] ⇊00000000fffd6be5 ⇈00000000fffd6be5
stampKind: i32
value: int[-168987|0xfffffffffffd6be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1259 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-171291 - -163355] ⇊00000000fffd00e5 ⇈00000000fffdfbe5
valueDescription: i32
=== Inputs ===
merge: v1256 
values: i1258 i1263 i1265 i1267 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1256 values: i1258 i1263 i1265 i1267  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1257 v1262 v1264 v1266 
=== Succesors ===
next: v1261 
=== Usages ===
i1259 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1257 v1262 v1264 v1266 #next: v1261  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 85
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 916
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i359 i2007 - 
=== Succesors ===
=== Usages ===
v1261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i359 i2007 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1261 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?50 
actionAndReason: i1259 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1256 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?50 actionAndReason: i1259 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD v2|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:85, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B51" 
    xhandlers
    flags 
    probability 4560798874451295070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid j1158 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
=== Inputs ===
x: j1166 
y: j475 
=== Succesors ===
=== Usages ===
j1159 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1166 y: j475  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v14|QWORD, v50|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B7" "B50" "B2" 
    successors "B52" "B91" 
    xhandlers
    flags 
    probability 4605603690354152557
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1149 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1147 j1163 j1140 
=== Succesors ===
=== Usages ===
j987 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1147 j1163 j1140  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v38 
values: i14 i359 i9 
=== Succesors ===
=== Usages ===
?88 v775 v680 ?132 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i14 i359 i9  <|@  <|@
f <@~|@floating>@ <|@
tid i364 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [1 - 2] ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i141 i366 i14 
=== Succesors ===
=== Usages ===
v688 v781 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i141 i366 i14  <|@  <|@
f <@~|@floating>@ <|@
tid i370 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [2 - 3] ⇊0000000000000002 ⇈0000000000000003
valueDescription: i32
=== Inputs ===
merge: v38 
values: i229 i372 i141 
=== Succesors ===
=== Usages ===
?107 v304 v2051 v990 i119 i123 ?139 v814 v993 i154 v2062 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: i229 i372 i141  <|@  <|@
f <@~|@floating>@ <|@
tid j1157 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [16 - 18] ⇊0000000000000010 ⇈0000000000000012
valueDescription: i64
=== Inputs ===
merge: v38 
values: j1155 j1167 j475 
=== Succesors ===
=== Usages ===
v2041 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j1155 j1167 j475  <|@  <|@
f <@~|@floating>@ <|@
tid j1159 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [18 - 20] ⇊0000000000000010 ⇈0000000000000016
valueDescription: i64
=== Inputs ===
merge: v38 
values: j481 j1158 j1155 
=== Succesors ===
=== Usages ===
v2042 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v38 values: j481 j1158 j1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v37 v39 v390 
=== Succesors ===
next: v93 
=== Usages ===
j1149 i360 i364 i370 j1157 j1159 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v37 v39 v390 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v2042 <|@
result [v56|QWORD + v4|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1159 
index: a2009 
=== Succesors ===
=== Usages ===
v694 v784 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1159 index: a2009  <|@  <|@
f <@~|@floating>@ <|@
tid v2041 <|@
result [v55|QWORD + v4|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j1157 
index: a2009 
=== Succesors ===
=== Usages ===
v686 v779 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1157 index: a2009  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 201]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9989929363705994
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD, v52|DWORD, v53|DWORD, v54|DWORD, v55|QWORD, v56|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605596209411378874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 204]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i95 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2010 y: i95  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 210]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.009242564066160308
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v101 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v101 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B92" 
    xhandlers
    flags 
    probability 4575429410860470576
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v101 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B89" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 213]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2015 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2015  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 197
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 933
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i360 - - 
=== Succesors ===
=== Usages ===
v1273 i2015 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i360 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2015 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?88 
guard: - 
address: v2030 
=== Succesors ===
next: v1041 
=== Usages ===
v680 v688 v306 v990 i737 j980 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?88 guard: - address: v2030 #next: v1041  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i360 
y: i2015 
=== Succesors ===
=== Usages ===
v1041 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i360 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1041 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v680 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1040 
=== Usages ===
=== Predecessor ===
i2015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v680 #trueSuccessor: v1038 #falseSuccessor: v1040  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v57|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1045 
=== Usages ===
v686 
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1045  <|@  <|@
f <@~|@floating>@ <|@
tid v688 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i2015 
=== Succesors ===
=== Usages ===
v1045 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i364 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v688 
=== Succesors ===
trueSuccessor: v1042 
falseSuccessor: v1044 
=== Usages ===
=== Predecessor ===
v1038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v688 #trueSuccessor: v1042 #falseSuccessor: v1044  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v686 
=== Usages ===
v694 
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v686  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1038 
address: v2041 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v1042 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1038 address: v2041 value: i931 stateAfter: - lastLocationAccess: - #next: v694  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1042 
address: v2042 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1042 address: v2042 value: i928 stateAfter: - lastLocationAccess: - #next: v112  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2010 
y: i9 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i2010 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 233]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.8193763792164618
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD + v4|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604199603166572523
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B57 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B64" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 236]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1987 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1987  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:938) [bci: 254]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i370 
y: i2010 
=== Succesors ===
=== Usages ===
i123 v993 v304 v306 i123 i123 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i370 y: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i119 
=== Succesors ===
=== Usages ===
v1987 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i370 y: i119  <|@  <|@
f <@~|@floating>@ <|@
tid i983 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NegateNode$$Lambda$180/1857180762@4b0ec103
stamp: i32
=== Inputs ===
value: i2010 
=== Succesors ===
=== Usages ===
j984 
=== Predecessor ===
- >@ <|@
instruction <@Negate|@org.graalvm.compiler.nodes.calc.NegateNode>@ value: i2010  <|@  <|@
f <@~|@floating>@ <|@
tid j984 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i983 
=== Succesors ===
=== Usages ===
j986 j1814 v1567 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i983  <|@  <|@
f <@~|@floating>@ <|@
tid j986 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j984 
y: j985 
=== Succesors ===
=== Usages ===
j987 v1817 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j984 y: j985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v993 
=== Succesors ===
trueSuccessor: v1986 
falseSuccessor: v1983 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v993 #trueSuccessor: v1986 #falseSuccessor: v1983  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SUB (x: v54|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = DEC v60|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B63" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1995 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid j987 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483647 - 2147483649]
=== Inputs ===
x: j986 
y: j1149 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j986 y: j1149  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i2015 
=== Succesors ===
=== Usages ===
v989 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2015  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j987 
y: j980 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j987 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid a1286 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@351564924
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@351564924]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1282 a1282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
result int[-179227|0xfffffffffffd43e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -179227
stableDimension: 0
stamp: i32 [-179227] ⇊00000000fffd43e5 ⇈00000000fffd43e5
stampKind: i32
value: int[-179227|0xfffffffffffd43e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v989 
=== Succesors ===
trueSuccessor: v1994 
falseSuccessor: v1991 
=== Usages ===
=== Predecessor ===
v1986 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v989 #trueSuccessor: v1994 #falseSuccessor: v1991  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v61|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1994 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1993 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1993  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i370 
y: i2015 
=== Succesors ===
=== Usages ===
v1993 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i370 y: i2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1993 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v990 
=== Succesors ===
trueSuccessor: v1984 
falseSuccessor: v1992 
=== Usages ===
=== Predecessor ===
v1994 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v990 #trueSuccessor: v1984 #falseSuccessor: v1992  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1982 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1982  <|@  <|@
f <@*|@fixed>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1992 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v1993 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1992 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179227|0xfffffffffffd43e5], v64|QWORD[.]] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1991 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1284 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1284  <|@  <|@
f <@*|@fixed>@ <|@
tid v1284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179227|0xfffffffffffd43e5], v64|QWORD[.]] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1981 
=== Usages ===
=== Predecessor ===
v1987 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1981  <|@  <|@
f <@*|@fixed>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1980 
=== Predecessor ===
v1983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B61" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.fill(Arrays.java:2975) [bci: 20]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1981 v1982 
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1981 v1982 #next: v1053  <|@  <|@
f <@~|@floating>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i119 
y: i370 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i119 y: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v304 
=== Succesors ===
trueSuccessor: v1052 
falseSuccessor: v1050 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v304 #trueSuccessor: v1052 #falseSuccessor: v1050  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1279 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1279  <|@  <|@
f <@~|@floating>@ <|@
tid i1280 <|@
result int[-178195|0xfffffffffffd47ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178195
stableDimension: 0
stamp: i32 [-178195] ⇊00000000fffd47ed ⇈00000000fffd47ed
stampKind: i32
value: int[-178195|0xfffffffffffd47ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1052 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178195|0xfffffffffffd47ed], Object[null]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:112) [bci: 2]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1057 
=== Usages ===
=== Predecessor ===
v1053 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1057  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2015 
y: i119 
=== Succesors ===
=== Usages ===
v1057 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2015 y: i119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v1056 
falseSuccessor: v1054 
=== Usages ===
=== Predecessor ===
v1050 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v1056 #falseSuccessor: v1054  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1287 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1287  <|@  <|@
f <@~|@floating>@ <|@
tid i1288 <|@
result int[-178451|0xfffffffffffd46ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -178451
stableDimension: 0
stamp: i32 [-178451] ⇊00000000fffd46ed ⇈00000000fffd46ed
stampKind: i32
value: int[-178451|0xfffffffffffd46ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1281 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178451|0xfffffffffffd46ed], Object[null]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B63" "B68" "B62" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1281 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-179227 - -178195] ⇊00000000fffd42e5 ⇈00000000fffd47ed
valueDescription: i32
=== Inputs ===
merge: v1278 
values: i1280 i1285 i1288 i1285 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1278 values: i1280 i1285 i1288 i1285  <|@  <|@
f <@~|@floating>@ <|@
tid a1282 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1278 
values: a1238 a1286 a1238 a1286 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1278 values: a1238 a1286 a1238 a1286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1279 v1284 v1287 v2106 
=== Succesors ===
next: v1283 
=== Usages ===
i1281 a1282 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1279 v1284 v1287 v2106 #next: v1283  <|@  <|@
tid ?107 <|@
d <@d|@=== Debug Properties ===
bci: 229
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 936
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i370 - - 
=== Succesors ===
=== Usages ===
v1283 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i370 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?107 
actionAndReason: i1281 
speculation: a1282 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?107 actionAndReason: i1281 speculation: a1282  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v7|QWORD[.] v54|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.rangeCheck(Arrays.java:119) [bci: 61]
at java.util.Arrays.fill(Arrays.java:2973) [bci: 4]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:937) [bci: 246]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1766 
=== Usages ===
=== Predecessor ===
v1057 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1570 
=== Usages ===
j1768 
=== Predecessor ===
v1054 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1570  <|@  <|@
f <@~|@floating>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j984 
y: j1449 
=== Succesors ===
=== Usages ===
v1570 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j984 y: j1449  <|@  <|@
f <@*|@fixed>@ <|@
tid v1570 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1567 
=== Succesors ===
trueSuccessor: v1568 
falseSuccessor: v1569 
=== Usages ===
=== Predecessor ===
v1766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1567 #trueSuccessor: v1568 #falseSuccessor: v1569  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v60|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v122 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v122  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1618 
=== Usages ===
=== Predecessor ===
v1570 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1618  <|@  <|@
f <@~|@floating>@ <|@
tid v2051 <|@
result [v7|QWORD[.] + v54|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i370 
=== Succesors ===
=== Usages ===
j1768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i370  <|@  <|@
f <@~|@floating>@ <|@
tid j1768 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1766 
address: v2051 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1766 address: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2088 <|@
result [v67|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1768 
index: - 
=== Succesors ===
=== Usages ===
v1943 v1945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1768 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1814 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j984 
y: j1813 
=== Succesors ===
=== Usages ===
v1815 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j984 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1815 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1814 
y: j1119 
=== Succesors ===
=== Usages ===
v1618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1814 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1815 
=== Succesors ===
trueSuccessor: v1617 
falseSuccessor: v1616 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1815 #trueSuccessor: v1617 #falseSuccessor: v1616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v7|QWORD[.] + v54|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v60|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1621 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1621  <|@  <|@
f <@*|@fixed>@ <|@
tid v1621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1617 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1945 
=== Usages ===
=== Predecessor ===
v1618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid v1972 <|@
result v69|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <48,48>
stableDimension: 0
stamp: <i16 [48] ⇊0000000000000030 ⇈0000000000000030,i16 [48] ⇊0000000000000030 ⇈0000000000000030>
stampKind: <i16,i16>
value: SIMD<48,48>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2088 
value: v1972 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1600 
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2088 value: v1972 stateAfter: - lastLocationAccess: - #next: v1600  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1945 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.]], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1769 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 2] ⇈0000000000000002
valueDescription: i64
=== Inputs ===
merge: v1601 
values: j1140 j1119 
=== Succesors ===
=== Usages ===
v1817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: j1140 j1119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1600 v1621 
=== Succesors ===
next: v1624 
=== Usages ===
j1769 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1600 v1621 #next: v1624  <|@  <|@
f <@~|@floating>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j986 
y: j1769 
=== Succesors ===
=== Usages ===
v1624 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j986 y: j1769  <|@  <|@
f <@*|@fixed>@ <|@
tid v1624 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1817 
=== Succesors ===
trueSuccessor: v1623 
falseSuccessor: v1622 
=== Usages ===
=== Predecessor ===
v1601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1817 #trueSuccessor: v1623 #falseSuccessor: v1622  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1932 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1932  <|@  <|@
f <@*|@fixed>@ <|@
tid v1932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1943 
=== Usages ===
=== Predecessor ===
v1624 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1943  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2088 
value: i931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1933 
=== Usages ===
=== Predecessor ===
v1622 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2088 value: i931 stateAfter: - lastLocationAccess: - #next: v1933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
v1943 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v67|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B57" "B71" "B76" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605527620437107097
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i123 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v121 
values: i370 i119 i119 i119 
=== Succesors ===
=== Usages ===
?124 j1382 v738 i131 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v121 values: i370 i119 i119 i119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v120 v122 v1932 v1933 
=== Succesors ===
next: v2108 
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v120 v122 v1932 v1933 #next: v2108  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 256
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 940
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i123 - - 
=== Succesors ===
=== Usages ===
v1294 v2108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i123 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
object: a2008 
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?124 object: a2008 #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid i1296 <|@
result int[-190305|0xfffffffffffd189f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -190305
stableDimension: 0
stamp: i32 [-190305] ⇊00000000fffd189f ⇈00000000fffd189f
stampKind: i32
value: int[-190305|0xfffffffffffd189f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1292 i1292 i1292 i1292 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v715 
=== Succesors ===
trueSuccessor: v717 
falseSuccessor: v716 
=== Usages ===
=== Predecessor ===
v2108 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v715 #trueSuccessor: v717 #falseSuccessor: v716  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v71|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575859158351825080
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1295 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1295  <|@  <|@
f <@*|@fixed>@ <|@
tid v1295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v717 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B79 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4605454096428188790
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v730 
=== Usages ===
=== Predecessor ===
v718 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v730  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i9 
=== Succesors ===
=== Usages ===
v730 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v726 
=== Succesors ===
trueSuccessor: v729 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
v716 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v726 #trueSuccessor: v729 #falseSuccessor: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575812102986117363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1347 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v729 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4605381307659359666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2016 
=== Usages ===
=== Predecessor ===
v730 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2016  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2016 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2036 
=== Succesors ===
next: v736 
=== Usages ===
i731 
=== Predecessor ===
v727 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2036 #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid i731 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2016 
y: i2007 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2016 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i731 
y: i2006 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i731 y: i2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v732 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v733 
=== Usages ===
=== Predecessor ===
i2016 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v732 #trueSuccessor: v735 #falseSuccessor: v733  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575765518174066724
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1346 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1346  <|@  <|@
f <@*|@fixed>@ <|@
tid v1346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4605309246778218833
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v742 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v742  <|@  <|@
f <@~|@floating>@ <|@
tid i737 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2015 
y: i2007 
=== Succesors ===
=== Usages ===
v738 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2015 y: i2007  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i737 
y: i123 
=== Succesors ===
=== Usages ===
v742 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i737 y: i123  <|@  <|@
f <@*|@fixed>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v738 
=== Succesors ===
trueSuccessor: v741 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v733 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v738 #trueSuccessor: v741 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v57|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575719399210136591
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1345 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1345  <|@  <|@
f <@*|@fixed>@ <|@
tid v1345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1289 
=== Predecessor ===
v741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B79" "B85" "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4584796243935277432
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1292 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-190987 - -190305] ⇊00000000fffd1095 ⇈00000000fffd1dff
valueDescription: i32
=== Inputs ===
merge: v1289 
values: i1296 i1296 i1296 i1296 
=== Succesors ===
=== Usages ===
v1294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1289 values: i1296 i1296 i1296 i1296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1289 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1295 v1345 v1346 v1347 
=== Succesors ===
next: v1294 
=== Usages ===
i1292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1295 v1345 v1346 v1347 #next: v1294  <|@  <|@
f <@*|@fixed>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?124 
actionAndReason: i1292 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1289 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?124 actionAndReason: i1292 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v71|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B116" 
    xhandlers
    flags 
    probability 4605237906505889409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1379 
=== Usages ===
=== Predecessor ===
v742 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1379  <|@  <|@
f <@~|@floating>@ <|@
tid a708 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1379 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1379 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a708 
=== Succesors ===
next: j1381 
=== Usages ===
v2059 
=== Predecessor ===
v739 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a708 #next: j1381  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1381 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1386 
=== Usages ===
v2060 
=== Predecessor ===
j1379 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid j2003 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2006 
=== Succesors ===
=== Usages ===
v2059 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
result [v77|QWORD[*] + v79|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1379 
index: j2003 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1379 index: j2003  <|@  <|@
f <@~|@floating>@ <|@
tid j1382 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i123 
=== Succesors ===
=== Usages ===
v2060 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i123  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
result [v78|QWORD[*] + v80|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1381 
index: j1382 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1381 index: j1382  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:915) [bci: 82]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i2007 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 270]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2059 v2060 j1999 
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
j1381 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2059 v2060 j1999 #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i131 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:941) [bci: 278]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i123 
y: i2007 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i123 y: i2007  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v1386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v71|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v77|QWORD[*] + v79|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v78|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = ADD (x: v71|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|DWORD] destination: B87 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:935) [bci: 228]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1276 
=== Usages ===
=== Predecessor ===
v1045 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1276  <|@  <|@
f <@~|@floating>@ <|@
tid i1277 <|@
result int[-176411|0xfffffffffffd4ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -176411
stableDimension: 0
stamp: i32 [-176411] ⇊00000000fffd4ee5 ⇈00000000fffd4ee5
stampKind: i32
value: int[-176411|0xfffffffffffd4ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
v1044 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176411|0xfffffffffffd4ee5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:934) [bci: 220]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1274 
=== Usages ===
=== Predecessor ===
v1041 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1274  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
result int[-174363|0xfffffffffffd56e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -174363
stableDimension: 0
stamp: i32 [-174363] ⇊00000000fffd56e5 ⇈00000000fffd56e5
stampKind: i32
value: int[-174363|0xfffffffffffd56e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1274 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
v1040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-174363|0xfffffffffffd56e5]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1271 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-176411 - -173067] ⇊00000000fffd42e5 ⇈00000000fffd5ff5
valueDescription: i32
=== Inputs ===
merge: v1268 
values: i1275 i1277 
=== Succesors ===
=== Usages ===
v1273 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1268 values: i1275 i1277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1274 v1276 
=== Succesors ===
next: v1273 
=== Usages ===
i1271 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1274 v1276 #next: v1273  <|@  <|@
f <@*|@fixed>@ <|@
tid v1273 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?88 
actionAndReason: i1271 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1268 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?88 actionAndReason: i1271 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B92" 
    xhandlers
    flags 
    probability 4560799708671823203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v98 
=== Predecessor ===
v92 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B53" 
    successors "B93" "B183" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v97 v99 
=== Succesors ===
next: i2017 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v97 v99 #next: i2017  <|@  <|@
tid ?132 <|@
d <@d|@=== Debug Properties ===
bci: 283
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 943
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i360 - - 
=== Succesors ===
=== Usages ===
v1302 i2017 i2018 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i360 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2017 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?132 
guard: - 
address: v2036 
=== Succesors ===
next: v1069 
=== Usages ===
i807 v762 
=== Predecessor ===
v98 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?132 guard: - address: v2036 #next: v1069  <|@  <|@
f <@~|@floating>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2006 
y: i2017 
=== Succesors ===
=== Usages ===
v1069 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2006 y: i2017  <|@  <|@
f <@*|@fixed>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v762 
=== Succesors ===
trueSuccessor: v1066 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
i2017 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v762 #trueSuccessor: v1066 #falseSuccessor: v1068  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v84|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B182" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2018 
=== Usages ===
i2019 
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2018  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2018 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?132 
guard: - 
address: v2030 
=== Succesors ===
next: v1077 
=== Usages ===
i813 v775 v781 v831 v901 v891 v881 v871 
=== Predecessor ===
v1066 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?132 guard: - address: v2030 #next: v1077  <|@  <|@
f <@~|@floating>@ <|@
tid v775 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i360 
y: i2018 
=== Succesors ===
=== Usages ===
v1077 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i360 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v775 
=== Succesors ===
trueSuccessor: v1074 
falseSuccessor: v1076 
=== Usages ===
=== Predecessor ===
i2018 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v775 #trueSuccessor: v1074 #falseSuccessor: v1076  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v85|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B181" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1081 
=== Usages ===
v779 
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1081  <|@  <|@
f <@~|@floating>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i364 
y: i2018 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i364 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v781 
=== Succesors ===
trueSuccessor: v1078 
falseSuccessor: v1080 
=== Usages ===
=== Predecessor ===
v1074 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v781 #trueSuccessor: v1078 #falseSuccessor: v1080  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1085 
=== Usages ===
v784 
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1085  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2007 
y: i141 
=== Succesors ===
=== Usages ===
v1085 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2007 y: i141  <|@  <|@
f <@*|@fixed>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v1084 
falseSuccessor: v1082 
=== Usages ===
=== Predecessor ===
v1078 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v1084 #falseSuccessor: v1082  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1307 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1307  <|@  <|@
f <@~|@floating>@ <|@
tid i1308 <|@
result int[-201235|0xfffffffffffceded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -201235
stableDimension: 0
stamp: i32 [-201235] ⇊00000000fffceded ⇈00000000fffceded
stampKind: i32
value: int[-201235|0xfffffffffffceded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201235|0xfffffffffffceded]] destination: B96 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B180" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 311]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@~|@floating>@ <|@
tid i148 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 331]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i169 i153 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i153 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 341]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2007 
y: i148 
=== Succesors ===
=== Usages ===
i154 j1394 i813 i807 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2007 y: i148  <|@  <|@
f <@~|@floating>@ <|@
tid i154 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:947) [bci: 342]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i153 
y: i370 
=== Succesors ===
=== Usages ===
i155 v2044 i227 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i153 y: i370  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i154 
y: i2018 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i154 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v1086 
falseSuccessor: v1088 
=== Usages ===
=== Predecessor ===
v1082 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v1086 #falseSuccessor: v1088  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = ADD (x: v86|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2019 
=== Usages ===
v839 
=== Predecessor ===
v1089 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid a2004 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 257]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a2008 
=== Succesors ===
=== Usages ===
j1387 v2043 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2008  <|@  <|@
f <@~|@floating>@ <|@
tid v2043 <|@
result [v88|QWORD[.] + v1|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2004 
index: i2006 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2004 index: i2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2019 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1066 
address: v2043 
=== Succesors ===
next: v779 
=== Usages ===
v779 
=== Predecessor ===
v1086 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1066 address: v2043 #next: v779  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1074 
address: v2041 
value: i2019 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
i2019 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1074 address: v2041 value: i2019 stateAfter: - lastLocationAccess: - #next: v784  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1078 
address: v2042 
value: i928 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v812 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1078 address: v2042 value: i928 stateAfter: - lastLocationAccess: - #next: v812  <|@  <|@
f <@~|@floating>@ <|@
tid i807 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2017 
y: i153 
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2017 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid i146 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 323]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2006 
y: i14 
=== Succesors ===
=== Usages ===
j1388 v808 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2006 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i807 
y: i146 
=== Succesors ===
=== Usages ===
v812 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i807 y: i146  <|@  <|@
f <@*|@fixed>@ <|@
tid v812 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v808 
=== Succesors ===
trueSuccessor: v811 
falseSuccessor: v809 
=== Usages ===
=== Predecessor ===
v784 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v808 #trueSuccessor: v811 #falseSuccessor: v809  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSX [v88|QWORD[.] + v1|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v4|DWORD[.] * 8], y: v89|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v84|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v810 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v810  <|@  <|@
f <@*|@fixed>@ <|@
tid v810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
v811 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v818 
=== Usages ===
=== Predecessor ===
v812 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v818  <|@  <|@
f <@~|@floating>@ <|@
tid i813 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2018 
y: i153 
=== Succesors ===
=== Usages ===
v814 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2018 y: i153  <|@  <|@
f <@~|@floating>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i813 
y: i370 
=== Succesors ===
=== Usages ===
v818 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i813 y: i370  <|@  <|@
f <@*|@fixed>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v814 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v815 
=== Usages ===
=== Predecessor ===
v809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v814 #trueSuccessor: v817 #falseSuccessor: v815  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v85|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v798 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v810 v816 
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v810 v816 #next: v819  <|@  <|@
tid ?139 <|@
d <@d|@=== Debug Properties ===
bci: 306
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 945
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i370 - - 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i370 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?139 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v798 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -209761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v7|QWORD[.] v54|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1387 
=== Usages ===
=== Predecessor ===
v818 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1387 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a2004 
=== Succesors ===
next: j1392 
=== Usages ===
v2061 
=== Predecessor ===
v815 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a2004 #next: j1392  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1392 <|@
result v94|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v1395 
=== Usages ===
v2062 
=== Predecessor ===
j1387 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v1395  <|@  <|@
f <@~|@floating>@ <|@
tid j1388 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i146 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i146  <|@  <|@
f <@~|@floating>@ <|@
tid v2061 <|@
result [v93|QWORD[*] + v95|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1387 
index: j1388 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1387 index: j1388  <|@  <|@
f <@~|@floating>@ <|@
tid v2062 <|@
result [v94|QWORD[*] + v54|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j1392 
index: i370 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1392 index: i370  <|@  <|@
f <@~|@floating>@ <|@
tid j1394 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i153 
=== Succesors ===
=== Usages ===
v1395 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:946) [bci: 332]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v2061 v2062 j1394 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
j1392 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v2061 v2062 j1394 #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v2044 <|@
result [v7|QWORD[.] + v87|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i154 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i154  <|@  <|@
f <@~|@floating>@ <|@
tid i940 <|@
result short[69|0x45] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 69
stableDimension: 0
stamp: i16 [69] ⇊0000000000000045 ⇈0000000000000045
stampKind: i16
value: short[69|0x45]
=== Inputs ===
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1086 
address: v2044 
value: i940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v1395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1086 address: v2044 value: i940 stateAfter: - lastLocationAccess: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 357]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i154 
y: i14 
=== Succesors ===
=== Usages ===
?158 v2048 i173 v901 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 367]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9016620498614958
=== Inputs ===
condition: v29 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v162 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v29 #trueSuccessor: v161 #falseSuccessor: v162  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v91|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v54|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v87|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 370]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i155 
y: i2018 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i155 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v901 
=== Succesors ===
trueSuccessor: v1090 
falseSuccessor: v1092 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v901 #trueSuccessor: v1090 #falseSuccessor: v1092  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v908 
=== Usages ===
v908 
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v2048 <|@
result [v7|QWORD[.] + v97|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i155 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1090 
address: v2048 
value: i924 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v1090 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1090 address: v2048 value: i924 stateAfter: - lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i227 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 372]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i154 
y: i141 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i154 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i167 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:955) [bci: 384]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i14 
y: i2010 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i14 y: i2010  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v97|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = LEA [v87|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SUB (x: v99|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v100|DWORD] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1091 
=== Usages ===
=== Predecessor ===
v1093 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1091  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
bci: 363
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 953
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: a1 a457 i155 - - 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: a1 a457 i155 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 902
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:954) [bci: 377]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?158 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?158  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -230939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v7|QWORD[.] v97|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 389]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@~|@floating>@ <|@
tid i169 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:957) [bci: 394]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i2010 
y: i148 
=== Succesors ===
=== Usages ===
i174 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2010 y: i148  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v171 
=== Predecessor ===
v162 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v101|DWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B109" "B178" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i173 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v171 
values: i227 i155 
=== Succesors ===
=== Usages ===
?175 i181 i230 v871 v2045 i228 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v171 values: i227 i155  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v171 
values: i167 i169 
=== Succesors ===
=== Usages ===
?175 v177 i182 i337 v188 i338 i316 i313 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v171 values: i167 i169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v170 v172 
=== Succesors ===
next: v1097 
=== Usages ===
i173 i174 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v170 v172 #next: v1097  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i2018 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i173 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v871 
=== Succesors ===
trueSuccessor: v1094 
falseSuccessor: v1096 
=== Usages ===
=== Predecessor ===
v171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v871 #trueSuccessor: v1094 #falseSuccessor: v1096  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
v859 v849 v879 
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid i181 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 404]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i14 
=== Succesors ===
=== Usages ===
i234 v2046 v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v2045 <|@
result [v7|QWORD[.] + v102|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i173 
=== Succesors ===
=== Usages ===
v879 v859 v849 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i173  <|@  <|@
f <@~|@floating>@ <|@
tid i176 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i176 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i174 y: i176  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 399]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.9778393351800554
=== Inputs ===
condition: v177 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v179 
=== Usages ===
=== Predecessor ===
v1094 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v177 #trueSuccessor: v178 #falseSuccessor: v179  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 402]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v849 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v849  <|@  <|@
f <@~|@floating>@ <|@
tid i182 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 410]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i174 
y: i60 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i174 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i183 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 411]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i182 
=== Succesors ===
=== Usages ===
v849 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v849 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:961) [bci: 412]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i183 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
=== Predecessor ===
v178 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i183 stateAfter: - lastLocationAccess: - #next: v236  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA [v103|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v105|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B110 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B177" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 416]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1101  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i181 
y: i2018 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i181 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v1098 
falseSuccessor: v1100 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v1098 #falseSuccessor: v1100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v191 
=== Usages ===
v889 v869 
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 438]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i141 
=== Succesors ===
=== Usages ===
v891 i234 v2047 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid v2046 <|@
result [v7|QWORD[.] + v104|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i181 
=== Succesors ===
=== Usages ===
v889 v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i181  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result int[100|0x64] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 100
stableDimension: 0
stamp: i32 [100] ⇊0000000000000064 ⇈0000000000000064
stampKind: i32
value: int[100|0x64]
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 i315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i187 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i174 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i322 <|@
result int[1717986919|0x66666667] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1717986919
stableDimension: 0
stamp: i32 [1717986919] ⇊0000000066666667 ⇈0000000066666667
stampKind: i32
value: int[1717986919|0x66666667]
=== Inputs ===
=== Succesors ===
=== Usages ===
i337 i339 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:962) [bci: 419]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 0.625
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v190 
=== Usages ===
=== Predecessor ===
v1098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v189 #falseSuccessor: v190  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v102|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 422]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v859 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v859  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i174 
y: i322 
=== Succesors ===
=== Usages ===
i324 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i174 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid i324 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i337 
y: i141 
=== Succesors ===
=== Usages ===
i310 i2104 i311 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i337 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i2104 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 433]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870959]
=== Inputs ===
x: i324 
y: i60 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i324 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i194 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 434]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2104 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v859 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:963) [bci: 435]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i194 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i194 stateAfter: - lastLocationAccess: - #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i324 
y: i229 
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i324 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i324 
y: i14 
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i324 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i310 
y: i311 
=== Succesors ===
=== Usages ===
i313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i310 y: i311  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i174 
y: i312 
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i174 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i199 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 447]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i313 
y: i60 
=== Succesors ===
=== Usages ===
i868 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i313 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i868 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i199 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:964) [bci: 449]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1098 
address: v2046 
value: i868 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v237 
=== Usages ===
=== Predecessor ===
v859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1098 address: v2046 value: i868 stateAfter: - lastLocationAccess: - #next: v237  <|@  <|@
f <@*|@fixed>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SAR v108|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v109|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL v109|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SHL v109|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v111|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v103|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = LEA [v114|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v104|DWORD * 2 + 16], y: v115|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B176" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 453]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1105 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1105  <|@  <|@
f <@~|@floating>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i2018 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i228 y: i2018  <|@  <|@
f <@*|@fixed>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v891 
=== Succesors ===
trueSuccessor: v1102 
falseSuccessor: v1104 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v891 #trueSuccessor: v1102 #falseSuccessor: v1104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v879 
=== Usages ===
v899 
=== Predecessor ===
v1105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid i328 <|@
result int[1374389535|0x51eb851f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1374389535
stableDimension: 0
stamp: i32 [1374389535] ⇊0000000051eb851f ⇈0000000051eb851f
stampKind: i32
value: int[1374389535|0x51eb851f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i338 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i174 
y: i328 
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i174 y: i328  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 5
stableDimension: 0
stamp: i32 [5] ⇊0000000000000005 ⇈0000000000000005
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-67108864 - 67108863]
=== Inputs ===
x: i338 
y: i330 
=== Succesors ===
=== Usages ===
i315 i2105 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i338 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid i2105 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 464]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-67108816 - 67108911]
=== Inputs ===
x: i331 
y: i60 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i331 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 465]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i2105 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v879 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1094 
address: v2045 
value: i204 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v1102 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1094 address: v2045 value: i204 stateAfter: - lastLocationAccess: - #next: v889  <|@  <|@
f <@~|@floating>@ <|@
tid i315 <|@
result v120|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
stamp: i32
=== Inputs ===
x: i331 
y: i187 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i331 y: i187  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i174 
y: i315 
=== Succesors ===
=== Usages ===
i335 i339 i321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i174 y: i315  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode$$Lambda$181/245612612@2147bd06
stamp: i32
=== Inputs ===
x: i316 
y: i322 
=== Succesors ===
=== Usages ===
i334 
=== Predecessor ===
- >@ <|@
instruction <@*H|@org.graalvm.compiler.replacements.nodes.arithmetic.IntegerMulHighNode>@ x: i316 y: i322  <|@  <|@
f <@~|@floating>@ <|@
tid i334 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
stamp: i32 [-536870912 - 536870911]
=== Inputs ===
x: i339 
y: i141 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i339 y: i141  <|@  <|@
f <@~|@floating>@ <|@
tid i325 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 31
stableDimension: 0
stamp: i32 [31] ⇊000000000000001f ⇈000000000000001f
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i335 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
x: i316 
y: i325 
=== Succesors ===
=== Usages ===
i336 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i316 y: i325  <|@  <|@
f <@~|@floating>@ <|@
tid i336 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-536870912 - 536870912]
=== Inputs ===
x: i334 
y: i335 
=== Succesors ===
=== Usages ===
i210 i318 i319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i334 y: i335  <|@  <|@
f <@~|@floating>@ <|@
tid i210 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 483]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32 [-536870864 - 536870960]
=== Inputs ===
x: i336 
y: i60 
=== Succesors ===
=== Usages ===
i888 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i336 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i888 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i210 
=== Succesors ===
=== Usages ===
v889 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v889 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1098 
address: v2046 
value: i888 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v899 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1098 address: v2046 value: i888 stateAfter: - lastLocationAccess: - #next: v899  <|@  <|@
f <@~|@floating>@ <|@
tid v2047 <|@
result [v7|QWORD[.] + v106|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a457 
index: i228 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i228  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i336 
y: i229 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i229  <|@  <|@
f <@~|@floating>@ <|@
tid i319 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i336 
y: i14 
=== Succesors ===
=== Usages ===
i320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i336 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i320 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i318 
y: i319 
=== Succesors ===
=== Usages ===
i321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i318 y: i319  <|@  <|@
f <@~|@floating>@ <|@
tid i321 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i32
=== Inputs ===
x: i316 
y: i320 
=== Succesors ===
=== Usages ===
i214 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i316 y: i320  <|@  <|@
f <@~|@floating>@ <|@
tid i214 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 497]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i321 
y: i60 
=== Succesors ===
=== Usages ===
i898 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i321 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i898 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
resultBits: 16
stamp: i16
=== Inputs ===
value: i214 
=== Succesors ===
=== Usages ===
v899 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v899 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1102 
address: v2047 
value: i898 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v889 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1102 address: v2047 value: i898 stateAfter: - lastLocationAccess: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid i230 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 488]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: i32
=== Inputs ===
x: i173 
y: i229 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i173 y: i229  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
v899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SAR v117|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v119|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = IMUL v118|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v103|DWORD, ~y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v121|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SAR v123|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SHR v121|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v124|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v104|DWORD * 2 + 16], y: v127|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL v126|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SHL v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = ADD (x: v128|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SUB (x: v121|DWORD, ~y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = LEA [v131|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v106|DWORD * 2 + 16], y: v132|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = LEA [v102|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B41" "B87" "B110" "B113" "B115" "B46" "B27" 
    successors "B117" "B123" 
    xhandlers
    flags 
    probability 4606808864628200659
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i234 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v232 
values: i217 i131 i181 i228 i230 i218 i85 
=== Succesors ===
=== Usages ===
?6 j1628 v241 v245 i254 a1474 v1186 i1208 v1497 i1450 v1459 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v232 values: i217 i131 i181 i228 i230 i218 i85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v233 v235 v236 v237 v238 v239 v240 
=== Succesors ===
next: a2020 
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v233 v235 v236 v237 v238 v239 v240 #next: a2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2020 <|@
result v135|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FloatingDecimal$BinaryToASCIIBuffer.buffer
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v2027 
=== Succesors ===
next: v2107 
=== Usages ===
v2050 v2107 v2049 
=== Predecessor ===
v232 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2027 #next: v2107  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 301
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 - i234 
=== Succesors ===
=== Usages ===
v1249 a1474 a1520 a1411 v2107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a2020 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
a2020 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a2020 #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i14 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid v1554 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1441 v1544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1430 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1536 <|@
result v136|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1430 
=== Succesors ===
=== Usages ===
v2078 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2078 <|@
result [v136|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1536 
index: - 
=== Succesors ===
=== Usages ===
j1540 j1436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1536 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1397 <|@
result v137|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1411 a1520 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:908) [bci: 30]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1558 j1551 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v242 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v242 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v135|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v137|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v134|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1113  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i9 
=== Succesors ===
=== Usages ===
v1113 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i234 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v1112 
falseSuccessor: v1110 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v1112 #falseSuccessor: v1110  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v134|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid i1251 <|@
result int[-233235|0xfffffffffffc70ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233235
stableDimension: 0
stamp: i32 [-233235] ⇊00000000fffc70ed ⇈00000000fffc70ed
stampKind: i32
value: int[-233235|0xfffffffffffc70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233235|0xfffffffffffc70ed]] destination: B118 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1399 
=== Usages ===
=== Predecessor ===
v1113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1399 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1418 
=== Usages ===
v2063 v2064 
=== Predecessor ===
v1110 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1418  <|@  <|@
f <@~|@floating>@ <|@
tid v2063 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1399 
index: - 
=== Succesors ===
=== Usages ===
j1418 v1420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1418 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2063 
=== Succesors ===
next: j1419 
=== Usages ===
j1551 j1424 v2081 
=== Predecessor ===
j1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2063 #next: j1419  <|@  <|@
f <@~|@floating>@ <|@
tid v2064 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1399 
index: - 
=== Succesors ===
=== Usages ===
j1419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1399 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1419 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2064 
=== Succesors ===
next: v1407 
=== Usages ===
v1404 
=== Predecessor ===
j1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2064 #next: v1407  <|@  <|@
f <@~|@floating>@ <|@
tid j1551 <|@
result v139|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1418 
y: j458 
=== Succesors ===
=== Usages ===
v1404 v1420 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1418 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1404 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1419 
y: j1551 
=== Succesors ===
=== Usages ===
v1407 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1419 y: j1551  <|@  <|@
f <@*|@fixed>@ <|@
tid v1407 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1404 
=== Succesors ===
trueSuccessor: v1405 
falseSuccessor: v1406 
=== Usages ===
=== Predecessor ===
j1419 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1404 #trueSuccessor: v1405 #falseSuccessor: v1406  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v138|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4561347107452113950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1411 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1411 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1397 i141 i14 
=== Succesors ===
next: j1412 
=== Usages ===
j1412 
=== Predecessor ===
v1405 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1397 i141 i14 #next: j1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1412 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1411 
=== Succesors ===
next: v1425 
=== Usages ===
j1424 
=== Predecessor ===
a1411 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1411 #next: v1425  <|@  <|@
f <@*|@fixed>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
j1412 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v137|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD[.]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4591012706084053258
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1420 
=== Usages ===
=== Predecessor ===
v1407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2063 
value: j1551 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1416 
=== Usages ===
=== Predecessor ===
v1406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2063 value: j1551 stateAfter: - lastLocationAccess: - #next: v1416  <|@  <|@
f <@~|@floating>@ <|@
tid v2081 <|@
result [v138|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1418 
index: - 
=== Succesors ===
=== Usages ===
v1416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1418 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2081 
=== Succesors ===
next: v1423 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2081 #next: v1423  <|@  <|@
f <@*|@fixed>@ <|@
tid v1423 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1422 
=== Predecessor ===
v1416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v138|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1424 <|@
result v141|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1422 
values: j1418 j1412 
=== Succesors ===
=== Usages ===
v2066 v2065 a1121 v2082 v2083 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1422 values: j1418 j1412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1423 v1425 
=== Succesors ===
next: a1121 
=== Usages ===
j1424 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1423 v1425 #next: a1121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1121 <|@
result v142|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1424 
=== Succesors ===
next: j1436 
=== Usages ===
a1127 
=== Predecessor ===
v1422 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1424 #next: j1436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1436 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1437 
=== Usages ===
v1437 
=== Predecessor ===
a1121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1437  <|@  <|@
f <@~|@floating>@ <|@
tid v2065 <|@
result [v141|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2065 
value: j1436 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
j1436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2065 value: j1436 stateAfter: - lastLocationAccess: - #next: v1441  <|@  <|@
f <@~|@floating>@ <|@
tid v2066 <|@
result [v141|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1441 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2066 
value: v1554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1445 
=== Usages ===
=== Predecessor ===
v1437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2066 value: v1554 stateAfter: - lastLocationAccess: - #next: v1445  <|@  <|@
f <@~|@floating>@ <|@
tid v2082 <|@
result [v141|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1139 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1445 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2082 
value: a1139 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1441 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2082 value: a1139 stateAfter: - lastLocationAccess: - #next: v1447  <|@  <|@
f <@~|@floating>@ <|@
tid v2083 <|@
result [v141|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1424 
index: - 
=== Succesors ===
=== Usages ===
v1447 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2083 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1127 
=== Usages ===
=== Predecessor ===
v1445 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2083 value: i9 stateAfter: - lastLocationAccess: - #next: a1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1127 <|@
result v142|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1121 
=== Succesors ===
next: v1128 
=== Usages ===
v277 
=== Predecessor ===
v1447 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1121 #next: v1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
a1127 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v277  <|@  <|@
f <@*|@fixed>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1127 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1128 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1127 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE v141|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = MOV [v136|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD[*]], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v142|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2021 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2021  <|@  <|@
f <@~|@floating>@ <|@
tid v2049 <|@
result [v135|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2020 
=== Succesors ===
=== Usages ===
i2021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2021 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2049 
=== Succesors ===
next: v1117 
=== Usages ===
i254 i1208 v1186 
=== Predecessor ===
v243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2049 #next: v1117  <|@  <|@
f <@~|@floating>@ <|@
tid i254 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32
=== Inputs ===
x: i2021 
y: i234 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2021 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i254 
y: i9 
=== Succesors ===
=== Usages ===
v1117 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i254 y: i9  <|@  <|@
f <@*|@fixed>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1116 
falseSuccessor: v1114 
=== Usages ===
=== Predecessor ===
i2021 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1116 #falseSuccessor: v1114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOV [v135|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SUB (x: v144|DWORD, ~y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v145|DWORD, y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1252 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1252  <|@  <|@
f <@~|@floating>@ <|@
tid i1253 <|@
result int[-235795|0xfffffffffffc66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1252 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1244 
=== Predecessor ===
v1116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B124" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1247 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249099 - -233235] ⇊00000000fffc20e5 ⇈00000000fffc76fd
valueDescription: i32
=== Inputs ===
merge: v1244 
values: i1251 i1253 
=== Succesors ===
=== Usages ===
v1249 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1244 values: i1251 i1253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1244 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1250 v1252 
=== Succesors ===
next: v1249 
=== Usages ===
i1247 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1250 v1252 #next: v1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?6 
actionAndReason: i1247 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1244 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?6 actionAndReason: i1247 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1453 
=== Usages ===
=== Predecessor ===
v1117 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1453 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1494 
=== Usages ===
v2067 v2068 
=== Predecessor ===
v1114 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1494  <|@  <|@
f <@~|@floating>@ <|@
tid v2067 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1453 
index: - 
=== Succesors ===
=== Usages ===
j1494 v1496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1453 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1494 <|@
result v147|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2067 
=== Succesors ===
next: j1495 
=== Usages ===
j1457 v2069 v2070 a1473 v2075 v2071 v2072 v2073 v2074 
=== Predecessor ===
j1453 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2067 #next: j1495  <|@  <|@
f <@~|@floating>@ <|@
tid v2068 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1453 
index: - 
=== Succesors ===
=== Usages ===
j1495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1453 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1495 <|@
result v148|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2068 
=== Succesors ===
next: v1462 
=== Usages ===
v1463 
=== Predecessor ===
j1494 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2068 #next: v1462  <|@  <|@
f <@~|@floating>@ <|@
tid i1458 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1459 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1459 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i234 
y: i1458 
=== Succesors ===
=== Usages ===
v1462 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i234 y: i1458  <|@  <|@
f <@*|@fixed>@ <|@
tid v1462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1459 
=== Succesors ===
trueSuccessor: v1461 
falseSuccessor: v1460 
=== Usages ===
=== Predecessor ===
j1495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1459 #trueSuccessor: v1461 #falseSuccessor: v1460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v134|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4605224104049352743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1469 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i1450 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i234 
y: i14 
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i234 y: i14  <|@  <|@
f <@~|@floating>@ <|@
tid i1481 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1482 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1482 <|@
result v150|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i1450 
y: i1481 
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1450 y: i1481  <|@  <|@
f <@~|@floating>@ <|@
tid i1451 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1452 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1452 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i1482 
y: i1451 
=== Succesors ===
=== Usages ===
j1456 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1482 y: i1451  <|@  <|@
f <@~|@floating>@ <|@
tid j1456 <|@
result v152|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i1452 
=== Succesors ===
=== Usages ===
j1457 v2071 v2072 v2073 v2074 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1452  <|@  <|@
f <@~|@floating>@ <|@
tid j1457 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: i64
=== Inputs ===
x: j1456 
y: j1494 
=== Succesors ===
=== Usages ===
v1463 v1496 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1456 y: j1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1495 
y: j1457 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1495 y: j1457  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1463 
=== Succesors ===
trueSuccessor: v1468 
falseSuccessor: v1467 
=== Usages ===
=== Predecessor ===
v1461 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1463 #trueSuccessor: v1468 #falseSuccessor: v1467  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SHL v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA [v149|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = AND v150|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVSXD v151|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = ADD (x: v152|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|QWORD, y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575664907863662293
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1466 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4605153615204311980
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1496  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2067 
value: j1457 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2067 value: j1457 stateAfter: - lastLocationAccess: - #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid v2071 <|@
result [v152|QWORD + v147|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2071 
=== Succesors ===
next: v1486 
=== Usages ===
=== Predecessor ===
v1496 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2071 #next: v1486  <|@  <|@
f <@~|@floating>@ <|@
tid v2072 <|@
result [v152|QWORD + v147|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2072 
=== Succesors ===
next: v1489 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2072 #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
result [v152|QWORD + v147|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2073 
=== Succesors ===
next: v1492 
=== Usages ===
=== Predecessor ===
v1486 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2073 #next: v1492  <|@  <|@
f <@~|@floating>@ <|@
tid v2074 <|@
result [v152|QWORD + v147|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1456 
index: j1494 
=== Succesors ===
=== Usages ===
v1492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1456 index: j1494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
address: v2074 
=== Succesors ===
next: v1497 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2074 #next: v1497  <|@  <|@
f <@~|@floating>@ <|@
tid v2069 <|@
result [v147|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2069 
value: i234 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1498 
=== Usages ===
=== Predecessor ===
v1492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2069 value: i234 stateAfter: - lastLocationAccess: - #next: v1498  <|@  <|@
f <@~|@floating>@ <|@
tid v2070 <|@
result [v147|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2070 
value: j1449 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1501 
=== Usages ===
=== Predecessor ===
v1497 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2070 value: j1449 stateAfter: - lastLocationAccess: - #next: v1501  <|@  <|@
f <@~|@floating>@ <|@
tid v2075 <|@
result [v147|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1494 
index: - 
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1494 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1557 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1501 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2075 
value: v1557 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1472 
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2075 value: v1557 stateAfter: - lastLocationAccess: - #next: v1472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1473 
=== Usages ===
=== Predecessor ===
v1501 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1473 <|@
result v154|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1494 
=== Succesors ===
next: v1475 
=== Usages ===
a1478 
=== Predecessor ===
v1472 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1494 #next: v1475  <|@  <|@
f <@*|@fixed>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
a1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD + 12], y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v147|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v147|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v147|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD[.]] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4590930095777899439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1464 
=== Usages ===
=== Predecessor ===
v1462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1464  <|@  <|@
f <@*|@fixed>@ <|@
tid v1464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1465 
=== Predecessor ===
v1460 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4591494006538225546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1464 v1466 
=== Succesors ===
next: a1474 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1464 v1466 #next: a1474  <|@  <|@
f <@~|@floating>@ <|@
tid v1448 <|@
result v155|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1474 <|@
result v156|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1448 i234 i9 
=== Succesors ===
next: v1477 
=== Usages ===
a1478 
=== Predecessor ===
v1465 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1448 i234 i9 #next: v1477  <|@  <|@
f <@*|@fixed>@ <|@
tid v1477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1476 
=== Predecessor ===
a1474 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v134|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD[.]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1478 <|@
result v157|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1476 
values: a1473 a1474 
=== Succesors ===
=== Usages ===
v2087 a1220 v2052 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1476 values: a1473 a1474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1475 v1477 
=== Succesors ===
next: v1820 
=== Usages ===
a1478 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1475 v1477 #next: v1820  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1641 
=== Usages ===
j1821 j1823 
=== Predecessor ===
v1476 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2021 
y: i234 
=== Succesors ===
=== Usages ===
i1208 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2021 y: i234  <|@  <|@
f <@~|@floating>@ <|@
tid i1208 <|@
result v158|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1186 
trueValue: i2021 
falseValue: i234 
=== Succesors ===
=== Usages ===
j1629 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1186 trueValue: i2021 falseValue: i234  <|@  <|@
f <@~|@floating>@ <|@
tid j1629 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1208 
=== Succesors ===
=== Usages ===
j1878 v2087 j1633 v1638 v1763 j1864 j1869 j1872 j1875 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1208  <|@  <|@
f <@~|@floating>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1629 
y: j1449 
=== Succesors ===
=== Usages ===
v1641 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1629 y: j1449  <|@  <|@
f <@~|@floating>@ <|@
tid j1809 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1923 j1872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1439 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1855 j1908 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1805 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1920 j1869 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1799 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1915 j1864 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1638 
=== Succesors ===
trueSuccessor: v1639 
falseSuccessor: v1640 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1638 #trueSuccessor: v1639 #falseSuccessor: v1640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = CMOVE (falseValue: v134|DWORD, ~trueValue: v144|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = MOVSXD v158|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v159|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1657 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1657  <|@  <|@
f <@*|@fixed>@ <|@
tid v1657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1644 
=== Usages ===
=== Predecessor ===
v1641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1644  <|@  <|@
f <@~|@floating>@ <|@
tid v2052 <|@
result [v157|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1478 
index: - 
=== Succesors ===
=== Usages ===
j1823 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1478 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1823 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1820 
address: v2052 
=== Succesors ===
=== Usages ===
v2089 v2091 v2093 v2095 v2097 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1820 address: v2052  <|@  <|@
f <@~|@floating>@ <|@
tid v2050 <|@
result [v135|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2020 
=== Succesors ===
=== Usages ===
j1821 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2020  <|@  <|@
f <@~|@floating>@ <|@
tid j1821 <|@
result v161|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1820 
address: v2050 
=== Succesors ===
=== Usages ===
v2090 v2092 v2094 v2096 v2098 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1820 address: v2050  <|@  <|@
f <@~|@floating>@ <|@
tid j1864 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j1629 
y: j1799 
=== Succesors ===
=== Usages ===
v1865 v1867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1864 
y: j1119 
=== Succesors ===
=== Usages ===
v1644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1864 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1865 
=== Succesors ===
trueSuccessor: v1642 
falseSuccessor: v1643 
=== Usages ===
=== Predecessor ===
v1640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1865 #trueSuccessor: v1642 #falseSuccessor: v1643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = LEA [v157|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[*] = LEA [v135|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v159|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1653 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
v1642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1645  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1646 
=== Predecessor ===
v1643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B175" 
    successors "B138" "B175" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1856 <|@
result v163|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1646 
values: j1119 j1863 
=== Succesors ===
=== Usages ===
v2098 j1863 v2097 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1646 values: j1119 j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1645 
=== Succesors ===
next: v2022 
=== Usages ===
v2022 v1649 v1650 j1856 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1645 #next: v2022  <|@  <|@
f <@~|@floating>@ <|@
tid v2098 <|@
result [v161|QWORD[*] + v163|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1856 
=== Succesors ===
=== Usages ===
v2022 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2022 <|@
result v164|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1646 
address: v2098 
=== Succesors ===
next: v1960 
=== Usages ===
v1960 
=== Predecessor ===
v1646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1646 address: v2098 #next: v1960  <|@  <|@
f <@~|@floating>@ <|@
tid v2097 <|@
result [v160|QWORD[.] + v163|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1856 
=== Succesors ===
=== Usages ===
v1960 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1856  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2097 
value: v2022 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v2022 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2097 value: v2022 stateAfter: - lastLocationAccess: - #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid j1863 <|@
result v165|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1856 
y: j475 
=== Succesors ===
=== Usages ===
j1848 j1856 v1867 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1856 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v1867 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1864 
y: j1863 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1864 y: j1863  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1867 
=== Succesors ===
trueSuccessor: v1649 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v1960 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1867 #trueSuccessor: v1649 #falseSuccessor: v1651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|V256_WORD = H [v161|QWORD[*] + v163|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v163|QWORD * 2], input: v164|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v163|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1646 
=== Succesors ===
next: v1655 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1646 #next: v1655  <|@  <|@
f <@*|@fixed>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1654 
=== Predecessor ===
v1649 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1848 <|@
result v166|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1654 
values: j1119 j1863 
=== Succesors ===
=== Usages ===
v2096 j1855 j1840 v1870 v2095 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1654 values: j1119 j1863  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1653 v1655 
=== Succesors ===
next: v1676 
=== Usages ===
j1848 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1653 v1655 #next: v1676  <|@  <|@
f <@~|@floating>@ <|@
tid j1869 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j1629 
y: j1805 
=== Succesors ===
=== Usages ===
v1870 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1870 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1869 
y: j1848 
=== Succesors ===
=== Usages ===
v1676 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1869 y: j1848  <|@  <|@
f <@*|@fixed>@ <|@
tid v1676 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1870 
=== Succesors ===
trueSuccessor: v1675 
falseSuccessor: v1674 
=== Usages ===
=== Predecessor ===
v1654 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1870 #trueSuccessor: v1675 #falseSuccessor: v1674  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v159|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1675 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1679 
=== Usages ===
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1679  <|@  <|@
f <@*|@fixed>@ <|@
tid v1679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
v1675 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2023 
=== Usages ===
v2023 
=== Predecessor ===
v1676 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2023  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
result [v161|QWORD[*] + v166|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1848 
=== Succesors ===
=== Usages ===
v2023 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2023 <|@
result v168|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1674 
address: v2096 
=== Succesors ===
next: v1958 
=== Usages ===
v1958 
=== Predecessor ===
v1674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1674 address: v2096 #next: v1958  <|@  <|@
f <@~|@floating>@ <|@
tid v2095 <|@
result [v160|QWORD[.] + v166|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1848 
=== Succesors ===
=== Usages ===
v1958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2095 
value: v2023 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1664 
=== Usages ===
=== Predecessor ===
v2023 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2095 value: v2023 stateAfter: - lastLocationAccess: - #next: v1664  <|@  <|@
f <@~|@floating>@ <|@
tid j1855 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1848 
y: j1439 
=== Succesors ===
=== Usages ===
j1840 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1848 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1664 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1665 
=== Predecessor ===
v1958 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|V128_WORD = H [v161|QWORD[*] + v166|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v166|QWORD * 2], input: v168|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = LEA [v166|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|QWORD] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1840 <|@
result v170|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1665 
values: j1855 j1848 
=== Succesors ===
=== Usages ===
v2094 j1847 j1832 v1873 v2093 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1665 values: j1855 j1848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1664 v1679 
=== Succesors ===
next: v1682 
=== Usages ===
j1840 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1664 v1679 #next: v1682  <|@  <|@
f <@~|@floating>@ <|@
tid j1872 <|@
result v171|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j1629 
y: j1809 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1872 
y: j1840 
=== Succesors ===
=== Usages ===
v1682 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1872 y: j1840  <|@  <|@
f <@*|@fixed>@ <|@
tid v1682 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1873 
=== Succesors ===
trueSuccessor: v1681 
falseSuccessor: v1680 
=== Usages ===
=== Predecessor ===
v1665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1873 #trueSuccessor: v1681 #falseSuccessor: v1680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v159|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v171|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1685 
=== Usages ===
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1685  <|@  <|@
f <@*|@fixed>@ <|@
tid v1685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
v1681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2024 
=== Usages ===
v2024 
=== Predecessor ===
v1682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2024  <|@  <|@
f <@~|@floating>@ <|@
tid v2094 <|@
result [v161|QWORD[*] + v170|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1840 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2024 <|@
result v172|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1680 
address: v2094 
=== Succesors ===
next: v1956 
=== Usages ===
v1956 
=== Predecessor ===
v1680 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1680 address: v2094 #next: v1956  <|@  <|@
f <@~|@floating>@ <|@
tid v2093 <|@
result [v160|QWORD[.] + v170|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1840 
=== Succesors ===
=== Usages ===
v1956 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2093 
value: v2024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v2024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2093 value: v2024 stateAfter: - lastLocationAccess: - #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid j1847 <|@
result v173|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1840 
y: j1165 
=== Succesors ===
=== Usages ===
j1832 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1840 y: j1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1668 
=== Predecessor ===
v1956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|V64_WORD = H [v161|QWORD[*] + v170|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v170|QWORD * 2], input: v172|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = LEA [v170|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v173|QWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1832 <|@
result v174|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1668 
values: j1847 j1840 
=== Succesors ===
=== Usages ===
v2092 j1839 j1824 v1876 v2091 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1668 values: j1847 j1840  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1667 v1685 
=== Succesors ===
next: v1688 
=== Usages ===
j1832 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1667 v1685 #next: v1688  <|@  <|@
f <@~|@floating>@ <|@
tid j1875 <|@
result v175|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j1629 
y: j1813 
=== Succesors ===
=== Usages ===
v1876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1875 
y: j1832 
=== Succesors ===
=== Usages ===
v1688 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1875 y: j1832  <|@  <|@
f <@*|@fixed>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1876 
=== Succesors ===
trueSuccessor: v1687 
falseSuccessor: v1686 
=== Usages ===
=== Predecessor ===
v1668 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1876 #trueSuccessor: v1687 #falseSuccessor: v1686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = LEA [v159|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v174|QWORD, y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1691 
=== Usages ===
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1691  <|@  <|@
f <@*|@fixed>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
v1687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2025 
=== Usages ===
v2025 
=== Predecessor ===
v1688 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2025  <|@  <|@
f <@~|@floating>@ <|@
tid v2092 <|@
result [v161|QWORD[*] + v174|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1832 
=== Succesors ===
=== Usages ===
v2025 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2025 <|@
result v176|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v1686 
address: v2092 
=== Succesors ===
next: v1954 
=== Usages ===
v1954 
=== Predecessor ===
v1686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1686 address: v2092 #next: v1954  <|@  <|@
f <@~|@floating>@ <|@
tid v2091 <|@
result [v160|QWORD[.] + v174|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1832 
=== Succesors ===
=== Usages ===
v1954 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2091 
value: v2025 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1670 
=== Usages ===
=== Predecessor ===
v2025 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2091 value: v2025 stateAfter: - lastLocationAccess: - #next: v1670  <|@  <|@
f <@~|@floating>@ <|@
tid j1839 <|@
result v177|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1832 
y: j1140 
=== Succesors ===
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1832 y: j1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1670 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1671 
=== Predecessor ===
v1954 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|V32_WORD = H [v161|QWORD[*] + v174|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v174|QWORD * 2], input: v176|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = LEA [v174|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|QWORD] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1824 <|@
result v178|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1671 
values: j1839 j1832 
=== Succesors ===
=== Usages ===
v2090 v1879 v2089 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1671 values: j1839 j1832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1670 v1691 
=== Succesors ===
next: v1694 
=== Usages ===
j1824 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1670 v1691 #next: v1694  <|@  <|@
f <@~|@floating>@ <|@
tid j1878 <|@
result v179|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j1629 
y: j985 
=== Succesors ===
=== Usages ===
v1879 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1629 y: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1879 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1878 
y: j1824 
=== Succesors ===
=== Usages ===
v1694 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1878 y: j1824  <|@  <|@
f <@*|@fixed>@ <|@
tid v1694 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1879 
=== Succesors ===
trueSuccessor: v1693 
falseSuccessor: v1692 
=== Usages ===
=== Predecessor ===
v1671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1879 #trueSuccessor: v1693 #falseSuccessor: v1692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v178|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = DEC v159|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v178|QWORD, y: v179|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1697 
=== Usages ===
=== Predecessor ===
v1694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1697  <|@  <|@
f <@*|@fixed>@ <|@
tid v1697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1693 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i2026 
=== Usages ===
i2026 
=== Predecessor ===
v1694 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2090 <|@
result [v161|QWORD[*] + v178|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1821 
index: j1824 
=== Succesors ===
=== Usages ===
i2026 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1821 index: j1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2026 <|@
result v180|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v1692 
address: v2090 
=== Succesors ===
next: v1952 
=== Usages ===
v1952 
=== Predecessor ===
v1692 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1692 address: v2090 #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid v2089 <|@
result [v160|QWORD[.] + v178|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1823 
index: j1824 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1823 index: j1824  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2089 
value: i2026 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1673 
=== Usages ===
=== Predecessor ===
i2026 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2089 value: i2026 stateAfter: - lastLocationAccess: - #next: v1673  <|@  <|@
f <@*|@fixed>@ <|@
tid v1673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1658 
=== Predecessor ===
v1952 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVSX [v161|QWORD[*] + v178|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[.] + v178|QWORD * 2], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B133" "B150" "B149" 
    successors "B152" "B170" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1657 v1673 v1697 
=== Succesors ===
next: v1882 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1657 v1673 v1697 #next: v1882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1704 
=== Usages ===
j1884 
=== Predecessor ===
v1658 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid j1628 <|@
result v181|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i234 
=== Succesors ===
=== Usages ===
j1633 v1763 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i234  <|@  <|@
f <@~|@floating>@ <|@
tid v1763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1629 
y: j1628 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1629 y: j1628  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1763 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1702 
=== Usages ===
=== Predecessor ===
v1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1763 #trueSuccessor: v1703 #falseSuccessor: v1702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVSXD v134|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1707 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1707  <|@  <|@
f <@~|@floating>@ <|@
tid v2087 <|@
result [v157|QWORD[.] + v159|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1478 
index: j1629 
=== Succesors ===
=== Usages ===
j1884 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1478 index: j1629  <|@  <|@
f <@~|@floating>@ <|@
tid j1884 <|@
result v182|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1882 
address: v2087 
=== Succesors ===
=== Usages ===
v2099 v2100 v2101 v2102 v2103 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1882 address: v2087  <|@  <|@
f <@~|@floating>@ <|@
tid j1633 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j1628 
y: j1629 
=== Succesors ===
=== Usages ===
j1929 j1915 j1920 j1923 j1926 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j1628 y: j1629  <|@  <|@
f <@~|@floating>@ <|@
tid j1915 <|@
result v184|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j1633 
y: j1799 
=== Succesors ===
=== Usages ===
v1916 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1915 
y: j1119 
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1915 y: j1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v1916 
=== Succesors ===
trueSuccessor: v1705 
falseSuccessor: v1706 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1916 #trueSuccessor: v1705 #falseSuccessor: v1706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = LEA [v157|QWORD[.] + v159|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = SUB (x: v181|QWORD, ~y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = LEA [v183|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1716  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid v1975 <|@
result v185|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1709 
=== Predecessor ===
v1706 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B169" 
    successors "B156" "B169" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1909 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1709 
values: j1119 j1914 
=== Succesors ===
=== Usages ===
v2103 j1914 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1709 values: j1119 j1914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1708 
=== Succesors ===
next: v1970 
=== Usages ===
j1909 v1712 v1713 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1708 #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid v2103 <|@
result [v182|QWORD[.] + v186|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1909 
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1909  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2103 
value: v1975 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1715 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2103 value: v1975 stateAfter: - lastLocationAccess: - #next: v1715  <|@  <|@
f <@~|@floating>@ <|@
tid j1914 <|@
result v187|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1909 
y: j475 
=== Succesors ===
=== Usages ===
j1903 j1909 v1918 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1909 y: j475  <|@  <|@
f <@~|@floating>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1915 
y: j1914 
=== Succesors ===
=== Usages ===
v1715 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1915 y: j1914  <|@  <|@
f <@*|@fixed>@ <|@
tid v1715 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1918 
=== Succesors ===
trueSuccessor: v1712 
falseSuccessor: v1714 
=== Usages ===
=== Predecessor ===
v1970 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1918 #trueSuccessor: v1712 #falseSuccessor: v1714  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v186|QWORD * 2], input: v185|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = LEA [v186|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v187|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1709 
=== Succesors ===
next: v1718 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1709 #next: v1718  <|@  <|@
f <@*|@fixed>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1717 
=== Predecessor ===
v1712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v187|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1903 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1717 
values: j1119 j1914 
=== Succesors ===
=== Usages ===
v2102 j1908 j1897 v1921 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1717 values: j1119 j1914  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1716 v1718 
=== Succesors ===
next: v1739 
=== Usages ===
j1903 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1716 v1718 #next: v1739  <|@  <|@
f <@~|@floating>@ <|@
tid j1920 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j1633 
y: j1805 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1805  <|@  <|@
f <@~|@floating>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1920 
y: j1903 
=== Succesors ===
=== Usages ===
v1739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1920 y: j1903  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1921 
=== Succesors ===
trueSuccessor: v1738 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
v1717 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1921 #trueSuccessor: v1738 #falseSuccessor: v1737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v183|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1742  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
v1738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1969 
=== Usages ===
=== Predecessor ===
v1739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1969  <|@  <|@
f <@~|@floating>@ <|@
tid v2102 <|@
result [v182|QWORD[.] + v188|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1903 
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1903  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
result v190|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2102 
value: v1979 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1727 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2102 value: v1979 stateAfter: - lastLocationAccess: - #next: v1727  <|@  <|@
f <@~|@floating>@ <|@
tid j1908 <|@
result v191|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1903 
y: j1439 
=== Succesors ===
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j1439  <|@  <|@
f <@*|@fixed>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
v1969 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v188|QWORD * 2], input: v190|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v188|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1897 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1728 
values: j1908 j1903 
=== Succesors ===
=== Usages ===
v2101 j1902 j1891 v1924 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1728 values: j1908 j1903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1727 v1742 
=== Succesors ===
next: v1745 
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1727 v1742 #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid j1923 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j1633 
y: j1809 
=== Succesors ===
=== Usages ===
v1924 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1809  <|@  <|@
f <@~|@floating>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1923 
y: j1897 
=== Succesors ===
=== Usages ===
v1745 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1923 y: j1897  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1924 
=== Succesors ===
trueSuccessor: v1744 
falseSuccessor: v1743 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1924 #trueSuccessor: v1744 #falseSuccessor: v1743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v183|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1748 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1748  <|@  <|@
f <@*|@fixed>@ <|@
tid v1748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
v1744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1967 
=== Usages ===
=== Predecessor ===
v1745 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1967  <|@  <|@
f <@~|@floating>@ <|@
tid v2101 <|@
result [v182|QWORD[.] + v192|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1897 
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1897  <|@  <|@
f <@~|@floating>@ <|@
tid v1978 <|@
result v194|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1967 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2101 
value: v1978 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1730 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2101 value: v1978 stateAfter: - lastLocationAccess: - #next: v1730  <|@  <|@
f <@~|@floating>@ <|@
tid j1902 <|@
result v195|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1897 
y: j1165 
=== Succesors ===
=== Usages ===
j1891 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1897 y: j1165  <|@  <|@
f <@*|@fixed>@ <|@
tid v1730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
v1967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v192|QWORD * 2], input: v194|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = LEA [v192|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1891 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1731 
values: j1902 j1897 
=== Succesors ===
=== Usages ===
v2100 j1896 j1885 v1927 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1731 values: j1902 j1897  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1730 v1748 
=== Succesors ===
next: v1751 
=== Usages ===
j1891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1730 v1748 #next: v1751  <|@  <|@
f <@~|@floating>@ <|@
tid j1926 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j1633 
y: j1813 
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1926 
y: j1891 
=== Succesors ===
=== Usages ===
v1751 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1926 y: j1891  <|@  <|@
f <@*|@fixed>@ <|@
tid v1751 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1927 
=== Succesors ===
trueSuccessor: v1750 
falseSuccessor: v1749 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1927 #trueSuccessor: v1750 #falseSuccessor: v1749  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v196|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v183|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1754 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1754  <|@  <|@
f <@*|@fixed>@ <|@
tid v1754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1750 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1965 
=== Usages ===
=== Predecessor ===
v1751 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1965  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
result [v182|QWORD[.] + v196|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1891 
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1891  <|@  <|@
f <@~|@floating>@ <|@
tid v1977 <|@
result v198|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1965 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2100 
value: v1977 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1749 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2100 value: v1977 stateAfter: - lastLocationAccess: - #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid j1896 <|@
result v199|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1891 
y: j1140 
=== Succesors ===
=== Usages ===
j1885 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1891 y: j1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
v1965 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v196|QWORD * 2], input: v198|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = LEA [v196|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v199|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1885 <|@
result v200|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1734 
values: j1896 j1891 
=== Succesors ===
=== Usages ===
v2099 v1930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1734 values: j1896 j1891  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1733 v1754 
=== Succesors ===
next: v1757 
=== Usages ===
j1885 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1733 v1754 #next: v1757  <|@  <|@
f <@~|@floating>@ <|@
tid j1929 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j1633 
y: j985 
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1633 y: j985  <|@  <|@
f <@~|@floating>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1929 
y: j1885 
=== Succesors ===
=== Usages ===
v1757 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j1929 y: j1885  <|@  <|@
f <@*|@fixed>@ <|@
tid v1757 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v1930 
=== Succesors ===
trueSuccessor: v1756 
falseSuccessor: v1755 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1930 #trueSuccessor: v1756 #falseSuccessor: v1755  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v200|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = DEC v183|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v201|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1760 
=== Usages ===
=== Predecessor ===
v1757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1760  <|@  <|@
f <@*|@fixed>@ <|@
tid v1760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1756 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1963 
=== Usages ===
=== Predecessor ===
v1757 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid v2099 <|@
result [v182|QWORD[.] + v200|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j1884 
index: j1885 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1884 index: j1885  <|@  <|@
f <@~|@floating>@ <|@
tid i1976 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2099 
value: i1976 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1736 
=== Usages ===
=== Predecessor ===
v1755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2099 value: i1976 stateAfter: - lastLocationAccess: - #next: v1736  <|@  <|@
f <@*|@fixed>@ <|@
tid v1736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1963 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v200|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1713 
=== Usages ===
=== Predecessor ===
v1715 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1713  <|@  <|@
f <@*|@fixed>@ <|@
tid v1713 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1709 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1714 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v187|QWORD] destination: B169 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B171" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1720 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1720  <|@  <|@
f <@*|@fixed>@ <|@
tid v1720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1721 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B167" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1720 v1736 v1760 
=== Succesors ===
next: a1220 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1720 v1736 v1760 #next: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1220 <|@
result v157|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:302) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1478 
=== Succesors ===
next: j1509 
=== Usages ===
a1134 
=== Predecessor ===
v1721 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1478 #next: j1509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1509 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1524 
=== Usages ===
v2076 v2077 
=== Predecessor ===
a1220 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1524  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1509 
index: - 
=== Succesors ===
=== Usages ===
j1524 v1526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1524 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2076 
=== Succesors ===
next: j1525 
=== Usages ===
j1558 j1530 v2084 
=== Predecessor ===
j1509 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2076 #next: j1525  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1509 
index: - 
=== Succesors ===
=== Usages ===
j1525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1509 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1525 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2077 
=== Succesors ===
next: v1517 
=== Usages ===
v1514 
=== Predecessor ===
j1524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2077 #next: v1517  <|@  <|@
f <@~|@floating>@ <|@
tid j1558 <|@
result v203|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1524 
y: j458 
=== Succesors ===
=== Usages ===
v1514 v1526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1524 y: j458  <|@  <|@
f <@~|@floating>@ <|@
tid v1514 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1525 
y: j1558 
=== Succesors ===
=== Usages ===
v1517 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1525 y: j1558  <|@  <|@
f <@*|@fixed>@ <|@
tid v1517 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1514 
=== Succesors ===
trueSuccessor: v1515 
falseSuccessor: v1516 
=== Usages ===
=== Predecessor ===
j1525 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1514 #trueSuccessor: v1515 #falseSuccessor: v1516  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = LEA [v202|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v203|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4576166161872841055
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1520 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1520 <|@
result v204|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v1397 i141 i14 
=== Succesors ===
next: j1521 
=== Usages ===
j1521 
=== Predecessor ===
v1515 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v1397 i141 i14 #next: j1521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1521 <|@
result v204|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1520 
=== Succesors ===
next: v1531 
=== Usages ===
j1530 
=== Predecessor ===
a1520 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1520 #next: v1531  <|@  <|@
f <@*|@fixed>@ <|@
tid v1531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
j1521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v137|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4605928992499760377
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1526 
=== Usages ===
=== Predecessor ===
v1517 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2076 
value: j1558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1523 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2076 value: j1558 stateAfter: - lastLocationAccess: - #next: v1523  <|@  <|@
f <@~|@floating>@ <|@
tid v2084 <|@
result [v202|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1524 
index: - 
=== Succesors ===
=== Usages ===
v1523 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2084 
=== Succesors ===
next: v1529 
=== Usages ===
=== Predecessor ===
v1526 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2084 #next: v1529  <|@  <|@
f <@*|@fixed>@ <|@
tid v1529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1528 
=== Predecessor ===
v1523 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v203|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v202|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v202|QWORD] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1530 <|@
result v205|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1528 
values: j1524 j1521 
=== Succesors ===
=== Usages ===
v2080 v2079 a1131 v2085 v2086 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1528 values: j1524 j1521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1529 v1531 
=== Succesors ===
next: a1131 
=== Usages ===
j1530 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1529 v1531 #next: a1131  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1131 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1530 
=== Succesors ===
next: j1540 
=== Usages ===
a1137 
=== Predecessor ===
v1528 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1530 #next: j1540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1540 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2078 
=== Succesors ===
next: v1541 
=== Usages ===
v1541 
=== Predecessor ===
a1131 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2078 #next: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2079 <|@
result [v205|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1541 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2079 
value: j1540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1544 
=== Usages ===
=== Predecessor ===
j1540 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2079 value: j1540 stateAfter: - lastLocationAccess: - #next: v1544  <|@  <|@
f <@~|@floating>@ <|@
tid v2080 <|@
result [v205|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1544 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2080 
value: v1554 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1548 
=== Usages ===
=== Predecessor ===
v1541 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2080 value: v1554 stateAfter: - lastLocationAccess: - #next: v1548  <|@  <|@
f <@~|@floating>@ <|@
tid v2085 <|@
result [v205|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1134 <|@
result v208|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1220 
=== Succesors ===
=== Usages ===
v1548 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1548 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2085 
value: a1134 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1550 
=== Usages ===
=== Predecessor ===
v1544 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2085 value: a1134 stateAfter: - lastLocationAccess: - #next: v1550  <|@  <|@
f <@~|@floating>@ <|@
tid v2086 <|@
result [v205|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1530 
index: - 
=== Succesors ===
=== Usages ===
v1550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1530 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1550 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2086 
value: i9 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1137 
=== Usages ===
=== Predecessor ===
v1548 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2086 value: i9 stateAfter: - lastLocationAccess: - #next: a1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1137 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1131 
=== Succesors ===
next: v1138 
=== Usages ===
v278 
=== Predecessor ===
v1550 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1131 #next: v1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
a1137 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v278  <|@  <|@
f <@*|@fixed>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1137 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1138 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1137 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOV [v136|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*]], y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v205|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[.] = COMPRESSPOINTER (input: v157|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*] + 12], y: v208|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B137" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1650 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1650  <|@  <|@
f <@*|@fixed>@ <|@
tid v1650 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B175 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:969) [bci: 499]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1323 
=== Usages ===
=== Predecessor ===
v1105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1323  <|@  <|@
f <@~|@floating>@ <|@
tid i1324 <|@
result int[-228379|0xfffffffffffc83e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228379
stableDimension: 0
stamp: i32 [-228379] ⇊00000000fffc83e5 ⇈00000000fffc83e5
stampKind: i32
value: int[-228379|0xfffffffffffc83e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1323 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228379|0xfffffffffffc83e5]] destination: B176 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:968) [bci: 485]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1321 
=== Usages ===
=== Predecessor ===
v1101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1321  <|@  <|@
f <@~|@floating>@ <|@
tid i1322 <|@
result int[-248859|0xfffffffffffc33e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248859
stableDimension: 0
stamp: i32 [-248859] ⇊00000000fffc33e5 ⇈00000000fffc33e5
stampKind: i32
value: int[-248859|0xfffffffffffc33e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1321 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1100 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248859|0xfffffffffffc33e5]] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:966) [bci: 466]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1316 
=== Usages ===
=== Predecessor ===
v1097 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid i1317 <|@
result int[-249371|0xfffffffffffc31e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -249371
stableDimension: 0
stamp: i32 [-249371] ⇊00000000fffc31e5 ⇈00000000fffc31e5
stampKind: i32
value: int[-249371|0xfffffffffffc31e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1315 
=== Predecessor ===
v1096 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" "B176" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1318 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-249371 - -228379] ⇊00000000fffc01e5 ⇈00000000fffcb3e5
valueDescription: i32
=== Inputs ===
merge: v1315 
values: i1317 i1322 i1324 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1315 values: i1317 i1322 i1324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1316 v1321 v1323 
=== Succesors ===
next: v1320 
=== Usages ===
i1318 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1316 v1321 v1323 #next: v1320  <|@  <|@
tid ?175 <|@
d <@d|@=== Debug Properties ===
bci: 396
code: ResolvedJavaMethodBytecode<FloatingDecimal$BinaryToASCIIBuffer.getChars(char[])>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: FloatingDecimal.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: ?231 
values: - a457 i173 i174 - 
=== Succesors ===
=== Usages ===
v1320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?231 values: - a457 i173 i174 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1320 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?175 
actionAndReason: i1318 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1315 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?175 actionAndReason: i1318 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v7|QWORD[.] v102|DWORD v103|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:951) [bci: 362]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1313 
=== Usages ===
=== Predecessor ===
v1089 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1313  <|@  <|@
f <@~|@floating>@ <|@
tid i1314 <|@
result int[-213019|0xfffffffffffcbfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -213019
stableDimension: 0
stamp: i32 [-213019] ⇊00000000fffcbfe5 ⇈00000000fffcbfe5
stampKind: i32
value: int[-213019|0xfffffffffffcbfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1088 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-213019|0xfffffffffffcbfe5]] destination: B180 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:944) [bci: 305]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1311 
=== Usages ===
=== Predecessor ===
v1081 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1311  <|@  <|@
f <@~|@floating>@ <|@
tid i1312 <|@
result int[-200219|0xfffffffffffcf1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -200219
stableDimension: 0
stamp: i32 [-200219] ⇊00000000fffcf1e5 ⇈00000000fffcf1e5
stampKind: i32
value: int[-200219|0xfffffffffffcf1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-200219|0xfffffffffffcf1e5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 297]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1309 
=== Usages ===
=== Predecessor ===
v1077 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1309  <|@  <|@
f <@~|@floating>@ <|@
tid i1310 <|@
result int[-198683|0xfffffffffffcf7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -198683
stableDimension: 0
stamp: i32 [-198683] ⇊00000000fffcf7e5 ⇈00000000fffcf7e5
stampKind: i32
value: int[-198683|0xfffffffffffcf7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1309 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1076 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198683|0xfffffffffffcf7e5]] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 296]
at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1305 
=== Usages ===
=== Predecessor ===
v1069 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1305  <|@  <|@
f <@~|@floating>@ <|@
tid i1306 <|@
result int[-195355|0xfffffffffffd04e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -195355
stableDimension: 0
stamp: i32 [-195355] ⇊00000000fffd04e5 ⇈00000000fffd04e5
stampKind: i32
value: int[-195355|0xfffffffffffd04e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1297 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195355|0xfffffffffffd04e5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B96" "B182" "B181" "B180" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1300 <|@
result v210|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-213019 - -194059] ⇊00000000fffc00e5 ⇈00000000fffdfffd
valueDescription: i32
=== Inputs ===
merge: v1297 
values: i1306 i1308 i1310 i1312 i1314 
=== Succesors ===
=== Usages ===
v1302 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1297 values: i1306 i1308 i1310 i1312 i1314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1297 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1305 v1307 v1309 v1311 v1313 
=== Succesors ===
next: v1302 
=== Usages ===
i1300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1305 v1307 v1309 v1311 v1313 #next: v1302  <|@  <|@
f <@*|@fixed>@ <|@
tid v1302 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?132 
actionAndReason: i1300 
speculation: a1238 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1297 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?132 actionAndReason: i1300 speculation: a1238  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v210|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVZXB [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TEST (x: v6|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605594473996886165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], long[16|0x10], long[18|0x12]] destination: B2 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B7" "B50" "B2" 
    successors "B52" "B91" 
    xhandlers
    flags 
    probability 4605603690354152557
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD, v52|DWORD, v53|DWORD, v54|DWORD, v55|QWORD, v56|QWORD] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605596209411378874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B89" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v57|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v55|QWORD + v4|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604199603166572523
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|DWORD] destination: B57 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B57" "B71" "B76" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605527620437107097
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v71|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4605454096428188790
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4605381307659359666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = SUB (x: v72|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4605309246778218833
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = SUB (x: v57|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v74|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B116" 
    xhandlers
    flags 
    probability 4605237906505889409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = MOVE v76|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOVSXD v71|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v77|QWORD[*] + v79|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v78|QWORD[*] + v80|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v81|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = ADD (x: v71|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v82|DWORD] destination: B87 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B41" "B87" "B110" "B113" "B115" "B46" "B27" 
    successors "B117" "B123" 
    xhandlers
    flags 
    probability 4606808864628200659
    begin_IR
      LIR
      nr   -1  <|@ instruction [v134|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v135|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v136|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v134|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOV [v135|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SUB (x: v144|DWORD, ~y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v145|DWORD, y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v134|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4605224104049352743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SHL v134|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = LEA [v149|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = AND v150|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD = MOVSXD v151|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = ADD (x: v152|QWORD, y: v147|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v153|QWORD, y: v148|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4605153615204311980
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v152|QWORD + v147|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v147|QWORD + 12], y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v147|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v147|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v147|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v154|QWORD[.]] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr   -1  <|@ instruction [v157|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v134|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|DWORD = CMOVE (falseValue: v134|DWORD, ~trueValue: v144|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = MOVSXD v158|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v159|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = LEA [v157|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[*] = LEA [v135|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = LEA [v159|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [v166|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v159|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v166|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|V128_WORD = H [v161|QWORD[*] + v166|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v166|QWORD * 2], input: v168|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = LEA [v166|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v169|QWORD] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [v170|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v171|QWORD = LEA [v159|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v171|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|V64_WORD = H [v161|QWORD[*] + v170|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v170|QWORD * 2], input: v172|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v173|QWORD = LEA [v170|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v173|QWORD] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [v174|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v175|QWORD = LEA [v159|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v174|QWORD, y: v175|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|V32_WORD = H [v161|QWORD[*] + v174|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v174|QWORD * 2], input: v176|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v177|QWORD = LEA [v174|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|QWORD] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [v178|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v179|QWORD = DEC v159|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v178|QWORD, y: v179|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVSX [v161|QWORD[*] + v178|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[.] + v178|QWORD * 2], y: v180|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B133" "B150" "B149" 
    successors "B152" "B170" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = MOVSXD v134|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v181|QWORD, y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B171" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B167" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v203|QWORD = LEA [v202|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v203|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4605928992499760377
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v203|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v202|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v202|QWORD] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr   -1  <|@ instruction [v205|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = MOVE v205|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOV [v136|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*]], y: v207|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v205|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v208|DWORD[.] = COMPRESSPOINTER (input: v157|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*] + 12], y: v208|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v205|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v206|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|QWORD[.] = LEA [v157|QWORD[.] + v159|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = SUB (x: v181|QWORD, ~y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = LEA [v183|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v184|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v188|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v183|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v188|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v190|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v188|QWORD * 2], input: v190|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v188|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v183|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v192|QWORD * 2], input: v194|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v195|QWORD = LEA [v192|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|QWORD] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v196|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v183|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v196|QWORD, y: v197|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v196|QWORD * 2], input: v198|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = LEA [v196|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v199|QWORD] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v200|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = DEC v183|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v200|QWORD, y: v201|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v182|QWORD[.] + v200|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595511370136858776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2], int[0|0x0], int[1|0x1], int[2|0x2], v5|DWORD, long[16|0x10], long[2|0x2]] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B50" 
    xhandlers
    flags 
    probability 4595512854586415624
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v13|DWORD, v14|QWORD, v15|QWORD] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482934073994829
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v4|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVSXD v1|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v2|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591653089454111617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591583202766202150
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591514014945171778
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SUB (x: v16|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4591445519002351709
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = SUB (x: v17|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B44" 
    xhandlers
    flags 
    probability 4591377708018959841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVSXD v2|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v39|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v40|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = ADD (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = INC v42|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B116" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v42|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v47|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = LEA [v42|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B46 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B64" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = SUB (x: v54|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = NEG v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD v59|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = DEC v60|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B61" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v58|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v60|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v7|QWORD[.] + v54|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v60|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v68|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr   -1  <|@ instruction J (address: [v67|QWORD[.]], input: v69|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[2|0x2]] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v67|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v188|QWORD] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v196|QWORD] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v187|QWORD] destination: B169 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B169" 
    successors "B156" "B169" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v182|QWORD[.] + v186|QWORD * 2], input: v185|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v187|QWORD = LEA [v186|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v187|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v187|QWORD] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B137" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B175 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B175" 
    successors "B138" "B175" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [v163|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v164|V256_WORD = H [v161|QWORD[*] + v163|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v160|QWORD[.] + v163|QWORD * 2], input: v164|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v165|QWORD = LEA [v163|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v165|QWORD, y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v165|QWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v134|DWORD, y: v134|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v139|QWORD = LEA [v138|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4591012706084053258
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v139|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v138|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v138|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr   -1  <|@ instruction [v141|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|QWORD[.] = MOVE v141|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = MOV [v136|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD[*]], y: v143|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v141|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v141|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v142|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4590930095777899439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4591494006538225546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v155|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v134|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v156|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD[.]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590249167851377328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v16|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v1|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590193320379495204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v17|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590138031382331901
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v5|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v19|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v10|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v24|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = ADD (x: v1|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v26|DWORD, y: v26|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590083295275140231
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = SUB (x: v2|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590029106529020478
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SUB (x: v16|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v26|DWORD, y: v28|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589975459670361922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SUB (x: v17|DWORD, ~y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|DWORD, y: v29|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B116" 
    xhandlers
    flags 
    probability 4589922349280289952
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[*] = MOVE v18|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVSXD v25|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v27|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v30|QWORD[*] + v32|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v31|QWORD[*] + v33|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v34|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = ADD (x: v25|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|DWORD] destination: B27 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B63" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = ADD (x: v61|QWORD, y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV v57|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4576166161872841055
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v213|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v213|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v204|QWORD[.]] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575859158351825080
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B79 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B79" "B85" "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4584796243935277432
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: v0|QWORD[.] v7|QWORD[.] v71|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575812102986117363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575765518174066724
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575719399210136591
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-190305|0xfffffffffffd189f]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575664907863662293
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B92" 
    xhandlers
    flags 
    probability 4575429410860470576
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B53" 
    successors "B93" "B183" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v84|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v84|DWORD, y: v1|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B182" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction v85|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B181" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v53|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B180" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = ADD (x: v86|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v87|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSX [v88|QWORD[.] + v1|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + v4|DWORD[.] * 8], y: v89|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + v4|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SUB (x: v84|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = INC v1|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v91|DWORD, y: v90|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SUB (x: v85|DWORD, ~y: v86|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v54|DWORD, y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = MOVE v88|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[*] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = MOVSXD v91|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = MOVSXD v86|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v93|QWORD[*] + v95|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v94|QWORD[*] + v54|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v96|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v87|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = INC v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v97|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v97|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = LEA [v87|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = SUB (x: v99|DWORD, ~y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v98|DWORD, v100|DWORD] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B109" "B178" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA [v103|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v105|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v104|DWORD] destination: B110 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B37" 
    xhandlers
    flags 
    probability 4562084719323983226
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B30 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B28" "B13" "B30" "B17" "B15" "B36" "B34" "B32" 
    successors 
    xhandlers
    flags 
    probability 4573736894024993724
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v38|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561995264363459108
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561906703952540232
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561819029145730543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-159073|0xfffffffffffd929f]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4561347107452113950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v214|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v140|QWORD[.]] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B92" 
    xhandlers
    flags 
    probability 4560799708671823203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B51" 
    xhandlers
    flags 
    probability 4560798874451295070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v15|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|QWORD, v10|DWORD, v11|DWORD, v12|DWORD, v14|QWORD, v50|QWORD] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = DEC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v97|DWORD, v101|DWORD] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560359906504815777
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560287699672483334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560216214908474216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-133729|0xfffffffffffdf59f]] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560145444992105188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569048249791654796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -148065 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: v0|QWORD[.] v7|QWORD[.] v25|DWORD v5|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560075382774899850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560006021179866566
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559937353200783614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v4|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B51" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], long[18|0x12], long[20|0x14]] destination: B7 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B177" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v104|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|DWORD = LEA [v102|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v103|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v107|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = SAR v108|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA [v109|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v110|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = SHL v109|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = SHL v109|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = ADD (x: v111|DWORD, y: v112|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = SUB (x: v103|DWORD, ~y: v113|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = LEA [v114|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v104|DWORD * 2 + 16], y: v115|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v106|DWORD] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -209761 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: v0|QWORD[.] v7|QWORD[.] v54|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B176" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v85|DWORD, y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v103|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v118|DWORD = SAR v117|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = LEA [v118|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v102|DWORD * 2 + 16], y: v119|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v120|DWORD = IMUL v118|DWORD y: 100 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = SUB (x: v103|DWORD, ~y: v120|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v121|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr   -1  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v124|DWORD = SAR v123|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = SHR v121|DWORD y: 31 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = ADD (x: v124|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = LEA [v126|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v104|DWORD * 2 + 16], y: v127|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v128|DWORD = SHL v126|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = SHL v126|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = ADD (x: v128|DWORD, y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = SUB (x: v121|DWORD, ~y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = LEA [v131|DWORD + 48] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD[.] + v106|DWORD * 2 + 16], y: v132|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = LEA [v102|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v133|DWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[3|0x3], int[1|0x1], int[2|0x2], int[3|0x3], v8|DWORD, long[18|0x12], long[4|0x4]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = SUB (x: v5|DWORD, ~y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v42|DWORD, y: v43|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B116" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v42|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v44|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - v7|QWORD[.] v42|DWORD v43|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5] <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v44|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV [v7|QWORD[.] + v45|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = LEA [v44|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B41 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-201235|0xfffffffffffceded]] destination: B96 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B96" "B182" "B181" "B180" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v210|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v210|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B124" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: v134|DWORD 
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -236059 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228379|0xfffffffffffc83e5]] destination: B176 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" "B176" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v209|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - v7|QWORD[.] v102|DWORD v103|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-165659|0xfffffffffffd78e5]] destination: B42 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v49|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: v0|QWORD[.] v7|QWORD[.] v10|DWORD v2|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:85, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-163355|0xfffffffffffd81e5]] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-168987|0xfffffffffffd6be5]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-174363|0xfffffffffffd56e5]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: v0|QWORD[.] v7|QWORD[.] v52|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-176411|0xfffffffffffd4ee5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179227|0xfffffffffffd43e5], v211|QWORD[.]] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B63" "B68" "B62" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|DWORD, v66|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v65|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v66|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: v0|QWORD[.] v7|QWORD[.] v54|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -230939 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: v0|QWORD[.] v7|QWORD[.] v97|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-198683|0xfffffffffffcf7e5]] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178195|0xfffffffffffd47ed], Object[null]] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-171291|0xfffffffffffd62e5]] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248859|0xfffffffffffc33e5]] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-213019|0xfffffffffffcbfe5]] destination: B180 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-178451|0xfffffffffffd46ed], Object[null]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v212|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179227|0xfffffffffffd43e5], v212|QWORD[.]] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-249371|0xfffffffffffc31e5]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-200219|0xfffffffffffcf1e5]] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233235|0xfffffffffffc70ed]] destination: B118 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-137755|0xfffffffffffde5e5]] destination: B28 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-195355|0xfffffffffffd04e5]] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:40|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605594473996886165
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   42  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   44  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B7" "B50" "B2" 
    successors "B52" "B91" 
    xhandlers
    flags 
    probability 4605603690354152557
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  622  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4605596209411378874
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction CMP rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B89" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr  642  <|@ instruction CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr  656  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  658  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604199603166572523
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r11|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B57 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B57" "B71" "B76" "B77" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4605527620437107097
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr  838  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B82" 
    xhandlers
    flags 
    probability 4605454096428188790
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B81 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B83" "B84" 
    xhandlers
    flags 
    probability 4605381307659359666
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B83 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B85" "B87" 
    xhandlers
    flags 
    probability 4605309246778218833
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B85 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B116" 
    xhandlers
    flags 
    probability 4605237906505889409
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  920  <|@ instruction r11|DWORD = ADD (x: stack:84|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  924  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B87 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B41" "B87" "B110" "B113" "B115" "B46" "B27" 
    successors "B117" "B123" 
    xhandlers
    flags 
    probability 4606808864628200659
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction r14|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1248  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr 1250  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1252  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1326  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1328  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B130" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1350  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1352  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1354  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B128" "B129" 
    xhandlers
    flags 
    probability 4605224104049352743
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1360  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 1362  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1364  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1366  <|@ instruction r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1368  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1370  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B128 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4605153615204311980
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1382  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1384  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1386  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1388  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1394  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1396  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors "B133" "B134" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1432  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B133 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction r10|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1448  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1450  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1452  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1454  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1460  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B135" "B138" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1488  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1500  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1502  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1504  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B140" 
    successors "B143" "B144" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1510  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1512  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B143 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1524  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1526  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1528  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B143" 
    successors "B146" "B147" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1548  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1550  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B146" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1558  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1560  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1572  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1574  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B133" "B150" "B149" 
    successors "B152" "B170" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1580  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B171" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1720  <|@ instruction JUMP ~[] destination: B170 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" "B168" "B167" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1726  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1728  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4605928992499760377
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1756  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1758  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1760  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1766  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1768  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1774  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr 1776  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1778  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1588  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1592  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1594  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B156" 
    successors "B158" "B159" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1628  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B158 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1638  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1640  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1642  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1644  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B158" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1652  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1654  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1662  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1664  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1668  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B161" 
    successors "B164" "B165" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1676  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B164 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1686  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1688  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1690  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1692  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B164" 
    successors "B167" "B168" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1700  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1702  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B167 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B151" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B133 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595511370136858776
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   58  <|@ instruction r14|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   60  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   68  <|@ instruction stack:64|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B50" 
    xhandlers
    flags 
    probability 4595512854586415624
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482934073994829
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  162  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591653089454111617
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591583202766202150
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591514014945171778
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4591445519002351709
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B44" 
    xhandlers
    flags 
    probability 4591377708018959841
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rax|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  436  <|@ instruction stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = ADD (x: stack:72|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rcx|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rdi|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B116" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rbx|QWORD[.] + rdx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  550  <|@ instruction MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  552  <|@ instruction rdi|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr  554  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B46 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B64" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r11|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = NEG rcx|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B61" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  794  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  808  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction MOV [rsi|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1634  <|@ instruction JUMP ~[] destination: B158 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1682  <|@ instruction JUMP ~[] destination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1658  <|@ instruction JUMP ~[] destination: B161 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1606  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B155" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1716  <|@ instruction JUMP ~[] destination: B169 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B169" 
    successors "B156" "B169" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1614  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1616  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1706  <|@ instruction JUMP ~[] destination: B167 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B157" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction JUMP ~[] destination: B156 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1566  <|@ instruction JUMP ~[] destination: B149 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1542  <|@ instruction JUMP ~[] destination: B146 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1464  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1466  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B137" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1786  <|@ instruction JUMP ~[] destination: B175 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B175" 
    successors "B138" "B175" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1468  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1470  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1472  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1476  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction JUMP ~[] destination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B139" 
    xhandlers
    flags 
    probability 4592496514556583069
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1482  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1272  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1274  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4591012706084053258
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1298  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1300  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1310  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1314  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1316  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" 
    xhandlers
    flags 
    probability 4590930095777899439
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1408  <|@ instruction JUMP ~[] destination: B130 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B130" "B128" 
    successors "B132" 
    xhandlers
    flags 
    probability 4591494006538225546
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1420  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590249167851377328
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590193320379495204
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4590138031382331901
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rbp|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r11|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  250  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  256  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = ADD (x: stack:84|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4590083295275140231
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B21 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4590029106529020478
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B27" 
    xhandlers
    flags 
    probability 4589975459670361922
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B116" 
    xhandlers
    flags 
    probability 4589922349280289952
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  342  <|@ instruction r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B27 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B63" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B61 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4576166161872841055
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1740  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1742  <|@ st <@st|@reference-map: [r14:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1744  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1748  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575859158351825080
    begin_IR
      LIR
      nr  842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f] <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B79 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B79" "B85" "B83" "B81" 
    successors 
    xhandlers
    flags 
    probability 4584796243935277432
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  892  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575812102986117363
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f] <|@ <|@
      nr  858  <|@ instruction JUMP ~[] destination: B81 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575765518174066724
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  872  <|@ instruction rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f] <|@ <|@
      nr  874  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 4575719399210136591
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f] <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B131" 
    xhandlers
    flags 
    probability 4575664907863662293
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1376  <|@ instruction JUMP ~[] destination: B128 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B92" 
    xhandlers
    flags 
    probability 4575429410860470576
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  634  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B53 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" "B53" 
    successors "B93" "B183" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  956  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  958  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B182" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  966  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B181" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction CMP stack:36|DWORD y: 2 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B180" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = DEC stack:36|DWORD size: DWORD <|@ <|@
      nr  992  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B99" "B100" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = MOVSX [r8|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1006  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr 1008  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B99 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B101" "B103" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B101 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1052  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1054  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1062  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction MOV [rbx|QWORD[.] + rax|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1068  <|@ instruction r10|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1076  <|@ instruction rsi|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1086  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B109" "B178" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1126  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr 1128  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1136  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1138  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B110 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B37" 
    xhandlers
    flags 
    probability 4562084719323983226
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B28" "B13" "B30" "B17" "B15" "B36" "B34" "B32" 
    successors 
    xhandlers
    flags 
    probability 4573736894024993724
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561995264363459108
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561906703952540232
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561819029145730543
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4561347107452113950
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1282  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1286  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1288  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B92" 
    xhandlers
    flags 
    probability 4560799708671823203
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B51" 
    xhandlers
    flags 
    probability 4560798874451295070
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA [rdi|QWORD + 16] size: QWORD <|@ <|@
      nr  602  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction stack:56|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  608  <|@ instruction r14|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction rsi|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1112  <|@ instruction rcx|DWORD = DEC stack:40|DWORD size: DWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560359906504815777
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560287699672483334
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  206  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560216214908474216
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560145444992105188
    begin_IR
      LIR
      nr  264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B19 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B23" "B25" 
    successors 
    xhandlers
    flags 
    probability 4569048249791654796
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV [r15|QWORD + 668] y: -148065 size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:32|QWORD[.] rbx|QWORD[.] r13|DWORD stack:40|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560075382774899850
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B21 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4560006021179866566
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B23 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559937353200783614
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   92  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B51" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  100  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  108  <|@ instruction stack:56|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  110  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B7 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B177" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1162  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1166  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1172  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1182  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545860071993824198
    begin_IR
      LIR
      nr 1016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B99 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B99" "B101" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction MOV [r15|QWORD + 668] y: -209761 size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:32|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" 
    xhandlers
    flags 
    probability 4545797755517780555
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction JUMP ~[] destination: B101 -> B102 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B176" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1198  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1202  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1208  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1214  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rsi|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr 1220  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1226  <|@ instruction rsi|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1228  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1230  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction rsi|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1238  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1240  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rsi|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  126  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  128  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  136  <|@ instruction stack:64|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  138  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction r10|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B116" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr  490  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:104|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - stack:48|QWORD[.] stack:100|DWORD stack:76|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5] <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  502  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  506  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B41 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded] <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B96 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B96" "B182" "B181" "B180" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1840  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1842  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1844  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B124" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV [r15|QWORD + 668] y: -236059 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction r11|DWORD = MOVE input: int[-228379|0xfffffffffffc83e5] <|@ <|@
      nr 1792  <|@ instruction JUMP ~[] destination: B176 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" "B176" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1810  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1812  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - rbx|QWORD[.] r10|DWORD rcx|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r10|DWORD = MOVE input: int[-165659|0xfffffffffffd78e5] <|@ <|@
      nr  516  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B42 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  590  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD r8|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:85, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-163355|0xfffffffffffd81e5] <|@ <|@
      nr  524  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  580  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-174363|0xfffffffffffd56e5] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction r10|DWORD = MOVE input: int[-176411|0xfffffffffffd4ee5] <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr  726  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5] <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B63" "B68" "B62" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  774  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:32|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV [r15|QWORD + 668] y: -230939 size: DWORD <|@ <|@
      nr 1104  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: rsi|QWORD[.] rbx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5] <|@ <|@
      nr 1830  <|@ instruction JUMP ~[] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5] <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  568  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5] <|@ <|@
      nr 1798  <|@ instruction JUMP ~[] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction r10|DWORD = MOVE input: int[-213019|0xfffffffffffcbfe5] <|@ <|@
      nr 1818  <|@ instruction JUMP ~[] destination: B180 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr 1804  <|@ instruction JUMP ~[] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction r10|DWORD = MOVE input: int[-200219|0xfffffffffffcf1e5] <|@ <|@
      nr 1824  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r10|DWORD = MOVE input: int[-233235|0xfffffffffffc70ed] <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B118 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5] <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1834  <|@ instruction r10|DWORD = MOVE input: int[-195355|0xfffffffffffd04e5] <|@ <|@
      nr 1836  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   16  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   18  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction stack:40|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   22  <|@ instruction rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   24  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr   26  <|@ instruction stack:48|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   28  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607180311458467003
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B51" 
    xhandlers
    flags 
    probability 4605594473996886165
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr   42  <|@ instruction r13|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   44  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   46  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   48  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   50  <|@ instruction stack:56|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B2 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B7" "B50" "B2" 
    successors "B52" "B92" 
    xhandlers
    flags 
    probability 4605603690354152557
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr  622  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr  624  <|@ instruction BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B92" "B54" 
    xhandlers
    flags 
    probability 4605596209411378874
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  628  <|@ instruction CMP rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  630  <|@ instruction BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B92 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B89" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5] <|@ <|@
      nr  642  <|@ instruction CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  644  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B88" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  650  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4605527620437107096
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  654  <|@ instruction MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD <|@ <|@
      nr  656  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr  658  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B78" 
    xhandlers
    flags 
    probability 4604199603166572523
    begin_IR
      LIR
      nr  662  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction r11|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  670  <|@ instruction JUMP ~[] destination: B57 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B57" "B71" "B76" "B77" 
    successors "B86" "B80" 
    xhandlers
    flags 
    probability 4605527620437107097
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  836  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5] <|@ <|@
      nr  838  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  840  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B86 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B86" "B82" 
    xhandlers
    flags 
    probability 4605454096428188790
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  850  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B86 falseDestination: B80 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B86" "B84" 
    xhandlers
    flags 
    probability 4605381307659359666
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  862  <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  866  <|@ instruction CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  868  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B86 falseDestination: B82 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4605309246778218833
    begin_IR
      LIR
      nr  876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  878  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  880  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B116" 
    xhandlers
    flags 
    probability 4605237906505889409
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr  902  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction rdi|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  914  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  916  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  920  <|@ instruction r11|DWORD = ADD (x: stack:84|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  922  <|@ instruction r13|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  926  <|@ instruction JUMP ~[] destination: B87 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B41" "B87" "B110" "B113" "B115" "B46" "B27" 
    successors "B117" "B123" 
    xhandlers
    flags 
    probability 4606808864628200659
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction r14|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1248  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:8] <|@ <|@
      nr 1250  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1252  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 1254  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B124" "B126" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1326  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 1328  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1330  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B127" "B131" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1348  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1350  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1352  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1354  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B126" 
    successors "B131" "B129" 
    xhandlers
    flags 
    probability 4605224104049352743
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1360  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 1362  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 1364  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 1366  <|@ instruction r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1368  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1370  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B131 falseDestination: B127 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4605153615204311980
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1382  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1384  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1386  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1388  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1390  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1394  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1396  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1398  <|@ instruction stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1400  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~[] destination: B129 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B129" "B131" 
    successors "B151" "B134" 
    xhandlers
    flags 
    probability 4606007313438694557
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 1432  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1434  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1436  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B151 falseDestination: B132 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B139" "B137" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction r10|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1446  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1448  <|@ instruction rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 1450  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1452  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1458  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1454  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B139 falseDestination: B134 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B134" "B137" 
    successors "B142" "B141" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1488  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B142 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors "B142" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1498  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1500  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1502  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1504  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1506  <|@ instruction JUMP ~[] destination: B141 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B141" "B139" 
    successors "B145" "B144" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1510  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1512  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B145 falseDestination: B142 -> B144 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B145" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1524  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1526  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1528  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B144 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" "B142" 
    successors "B148" "B147" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B148 falseDestination: B145 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B148" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1546  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1548  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1550  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1552  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1554  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" 
    successors "B151" "B150" 
    xhandlers
    flags 
    probability 4601503713811324061
    begin_IR
      LIR
      nr 1556  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1558  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1560  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1562  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1570  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1572  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1574  <|@ instruction JUMP ~[] destination: B150 -> B151 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B132" "B150" "B148" 
    successors "B152" "B171" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1580  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1582  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B151" "B168" "B166" 
    successors "B172" "B173" 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1724  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1726  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1728  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1730  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4605928992499760377
    begin_IR
      LIR
      nr 1752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1754  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1756  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 1758  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1762  <|@ instruction JUMP ~[] destination: B173 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" "B172" 
    successors 
    xhandlers
    flags 
    probability 4606007313438694558
    begin_IR
      LIR
      nr 1764  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1760  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1766  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1768  <|@ instruction rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1770  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 1772  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1774  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr 1776  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 1778  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1780  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1782  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B154" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1588  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1592  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1594  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B157" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B153 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B153" "B155" 
    successors "B160" "B159" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1624  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1626  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1628  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1630  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B157" 
    successors "B160" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1638  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1640  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1642  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1644  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" "B157" 
    successors "B163" "B162" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1652  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1654  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1662  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1664  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1666  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1668  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1670  <|@ instruction JUMP ~[] destination: B162 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" "B160" 
    successors "B166" "B165" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1672  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1674  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1676  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1678  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B163" 
    successors "B166" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1686  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1688  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1690  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1692  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1694  <|@ instruction JUMP ~[] destination: B165 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" "B163" 
    successors "B171" "B168" 
    xhandlers
    flags 
    probability 4601503713811324062
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1700  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1702  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B171" 
    xhandlers
    flags 
    probability 4599545690337969526
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B168 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B9" 
    xhandlers
    flags 
    probability 4595511370136858776
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rdi|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   58  <|@ instruction r14|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr   60  <|@ instruction r13|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   66  <|@ instruction rdx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   68  <|@ instruction stack:64|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B3 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B3" 
    successors "B10" "B50" 
    xhandlers
    flags 
    probability 4595512854586415624
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 7 align: false label: ? <|@ <|@
      nr  150  <|@ instruction CMP rcx|DWORD y: 8 size: DWORD <|@ <|@
      nr  152  <|@ instruction BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B29" 
    xhandlers
    flags 
    probability 4595482934073994829
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5] <|@ <|@
      nr  158  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: rsi|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5] <|@ <|@
      nr  160  <|@ instruction r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  162  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr  166  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  168  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  170  <|@ instruction BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591653089454111617
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  360  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4591583202766202150
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  374  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4591514014945171778
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  388  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B38" 
    xhandlers
    flags 
    probability 4591445519002351709
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  402  <|@ instruction r10|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  404  <|@ instruction CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B44" 
    xhandlers
    flags 
    probability 4591377708018959841
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction rax|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  432  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  436  <|@ instruction stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  442  <|@ instruction rdx|DWORD = ADD (x: stack:72|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction CMP (x: rcx|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  452  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  448  <|@ instruction BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B48" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rdi|DWORD = INC rdx|DWORD size: DWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B116" 
    xhandlers
    flags 
    probability 4591376811958180904
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction MOV [rbx|QWORD[.] + rdx|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  550  <|@ instruction MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  552  <|@ instruction rdi|DWORD = LEA [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr  554  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B46 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" "B64" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r11|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  676  <|@ instruction rcx|DWORD = NEG rcx|DWORD size: DWORD <|@ <|@
      nr  678  <|@ instruction r9|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = DEC r9|QWORD size: QWORD <|@ <|@
      nr  682  <|@ instruction CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B65" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  734  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B60" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  744  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B70" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594480089372673716
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP r9|QWORD y: 1 size: QWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  792  <|@ instruction rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD <|@ <|@
      nr  794  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD <|@ <|@
      nr  808  <|@ instruction J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  810  <|@ instruction rdx|QWORD = MOVE input: long[2|0x2] <|@ <|@
      nr  812  <|@ instruction JUMP ~[] destination: B74 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" "B73" 
    successors "B76" "B77" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  816  <|@ instruction CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  818  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4588128924659001870
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  828  <|@ instruction MOV [rsi|QWORD[.]] y: 48 size: WORD <|@ <|@
      nr  830  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  832  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B155" 
    xhandlers
    flags 
    probability 4592496514556583070
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1606  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B154 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" "B155" 
    successors "B157" "B155" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4601503713811324062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1612  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1614  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1616  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B134" "B137" 
    successors "B139" "B137" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4601503713811324061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1470  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1472  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1474  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1476  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1478  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B139 falseDestination: B137 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B118" "B119" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1270  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1272  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 1274  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4591012706084053258
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1298  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 1300  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 1302  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 4591076830179213746
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD <|@ <|@
      nr 1310  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1312  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 1314  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 1316  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 1318  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B126" "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 4591494006538225546
    begin_IR
      LIR
      nr 1410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1412  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1414  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1416  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1418  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1420  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1422  <|@ st <@st|@reference-map: [stack:72, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B28" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4590305579439137049
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590249167851377328
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590193320379495204
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B26" "B20" 
    xhandlers
    flags 
    probability 4590138031382331901
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction rbp|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  240  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + r11|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  250  <|@ instruction r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  256  <|@ instruction r13|DWORD = INC r13|DWORD size: DWORD <|@ <|@
      nr  258  <|@ instruction r10|DWORD = ADD (x: stack:84|DWORD, y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  260  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  262  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B26" "B22" 
    xhandlers
    flags 
    probability 4590083295275140231
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr  274  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4590029106529020478
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  288  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4589975459670361922
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  300  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B116" 
    xhandlers
    flags 
    probability 4589922349280289952
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  330  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  332  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  334  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  336  <|@ instruction stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  340  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  342  <|@ instruction r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B27 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B63" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  696  <|@ instruction rdx|QWORD = MOV rdi|DWORD size: DWORD <|@ <|@
      nr  698  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B62" 
    xhandlers
    flags 
    probability 4589976489745303220
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  704  <|@ instruction CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  706  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B65 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction rdx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  802  <|@ instruction JUMP ~[] destination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B75" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580969290490562228
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B171" 
    successors "B174" 
    xhandlers
    flags 
    probability 4576166161872841055
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1734  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1738  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1740  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1742  <|@ st <@st|@reference-map: [r14:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1744  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1746  <|@ instruction rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1750  <|@ instruction JUMP ~[] destination: B172 -> B174 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B78" "B84" "B82" "B80" 
    successors 
    xhandlers
    flags 
    probability 4584796243935277432
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  844  <|@ instruction rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f] <|@ <|@
      nr  892  <|@ instruction MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  894  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  896  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:256, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B51" "B52" 
    successors "B93" "B183" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  950  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  958  <|@ instruction CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  960  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B182" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5] <|@ <|@
      nr  966  <|@ instruction CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr  968  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B181" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  972  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction CMP stack:36|DWORD y: 2 size: DWORD <|@ <|@
      nr  980  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B98" "B180" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = DEC stack:36|DWORD size: DWORD <|@ <|@
      nr  992  <|@ instruction rax|DWORD = ADD (x: r11|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  994  <|@ instruction CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  996  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B102" "B100" 
    xhandlers
    flags 
    probability 4576022096471962990
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3 <|@ <|@
      nr 1002  <|@ instruction rsi|DWORD = MOVSX [r8|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1004  <|@ instruction MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1006  <|@ instruction MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD <|@ <|@
      nr 1008  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1010  <|@ instruction rsi|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1012  <|@ instruction CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1014  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B102 falseDestination: B98 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4575973411725053894
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rdi|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1042  <|@ instruction stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1044  <|@ instruction stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1048  <|@ instruction rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1050  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1052  <|@ instruction r11|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1054  <|@ instruction rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1056  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1058  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1062  <|@ instruction rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1064  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction MOV [rbx|QWORD[.] + rax|DWORD * 2 + 16] y: 69 size: WORD <|@ <|@
      nr 1068  <|@ instruction r10|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr 1070  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr 1076  <|@ instruction rsi|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 1072  <|@ instruction BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1074  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4575254749081685304
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr 1086  <|@ instruction rax|DWORD = LEA [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1088  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1090  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD <|@ <|@
      nr 1092  <|@ instruction rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" "B107" 
    successors "B109" "B178" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1116  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1118  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4575925213825613889
    begin_IR
      LIR
      nr 1122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1124  <|@ instruction r8|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 1126  <|@ instruction CMP rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr 1128  <|@ instruction BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" 
    xhandlers
    flags 
    probability 4575819472173656871
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1132  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1134  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1136  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr 1140  <|@ instruction JUMP ~[] destination: B110 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B37" 
    xhandlers
    flags 
    probability 4562084719323983226
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  366  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B30 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B28" "B13" "B30" "B17" "B15" "B36" "B34" "B32" 
    successors 
    xhandlers
    flags 
    probability 4573736894024993724
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:43, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561995264363459108
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  380  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B32 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561906703952540232
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B34 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4561819029145730543
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f] <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4561347107452113950
    begin_IR
      LIR
      nr 1278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1280  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1282  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1284  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1286  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8] <|@ <|@
      nr 1288  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B51" 
    xhandlers
    flags 
    probability 4560798874451295070
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD = LEA [rdi|QWORD + 16] size: QWORD <|@ <|@
      nr  602  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction stack:56|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  608  <|@ instruction r14|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4560646880560519757
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction rcx|DWORD = DEC stack:40|DWORD size: DWORD <|@ <|@
      nr 1114  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560359906504815777
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B13 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560287699672483334
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  206  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B15 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B37" 
    xhandlers
    flags 
    probability 4560216214908474216
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f] <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B17 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" 
    successors 
    xhandlers
    flags 
    probability 4569048249791654796
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction MOV [r15|QWORD + 668] y: -148065 size: DWORD <|@ <|@
      nr  314  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  316  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145]
locals: stack:32|QWORD[.] rbx|QWORD[.] r13|DWORD stack:40|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:145, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0] <|@ <|@
      nr   78  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4552763695007289344
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD <|@ <|@
      nr   92  <|@ instruction CMP stack:40|DWORD y: 1 size: DWORD <|@ <|@
      nr   94  <|@ instruction BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B51" 
    xhandlers
    flags 
    probability 4551243618661076867
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction r14|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr  100  <|@ instruction r13|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  102  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  106  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  108  <|@ instruction stack:56|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B7 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B177" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 1146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B113" "B114" 
    xhandlers
    flags 
    probability 4550899489742079636
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP rcx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B116" 
    xhandlers
    flags 
    probability 4548087756546021433
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1160  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1162  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1164  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1166  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1168  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1170  <|@ instruction rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1172  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1176  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1180  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1184  <|@ instruction JUMP ~[] destination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B98" "B100" 
    successors 
    xhandlers
    flags 
    probability 4550332513383172872
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1034  <|@ instruction MOV [r15|QWORD + 668] y: -209761 size: DWORD <|@ <|@
      nr 1036  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1038  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306]
locals: stack:32|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:306, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B112" 
    successors "B115" "B176" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1190  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4544704023683396847
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rdx|DWORD = MOVE input: int[1374389535|0x51eb851f] <|@ <|@
      nr 1198  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1200  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD <|@ <|@
      nr 1202  <|@ instruction rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1204  <|@ instruction MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD <|@ <|@
      nr 1206  <|@ instruction rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD <|@ <|@
      nr 1208  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1210  <|@ instruction rax|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE input: int[1717986919|0x66666667] <|@ <|@
      nr 1214  <|@ instruction (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1216  <|@ instruction rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr 1218  <|@ instruction rsi|DWORD = SHR rcx|DWORD y: 31 size: DWORD <|@ <|@
      nr 1220  <|@ instruction rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1222  <|@ instruction rsi|DWORD = LEA [rdx|DWORD + 48] size: DWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1226  <|@ instruction rsi|DWORD = SHL rdx|DWORD y: 3 size: DWORD <|@ <|@
      nr 1228  <|@ instruction rdx|DWORD = SHL rdx|DWORD size: DWORD <|@ <|@
      nr 1230  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1232  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1234  <|@ instruction rsi|DWORD = LEA [rcx|DWORD + 48] size: DWORD <|@ <|@
      nr 1236  <|@ instruction MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: rsi|DWORD) size: WORD <|@ <|@
      nr 1238  <|@ instruction r13|DWORD = LEA [r10|DWORD + 3] size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4541205130146939378
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction rsi|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  124  <|@ instruction rdi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr  126  <|@ instruction r14|QWORD = MOVE input: long[18|0x12] <|@ <|@
      nr  128  <|@ instruction r13|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  130  <|@ instruction rbp|DWORD = MOVE input: int[3|0x3] <|@ <|@
      nr  132  <|@ instruction rax|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  134  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  136  <|@ instruction stack:64|QWORD = MOVE input: long[3|0x3] <|@ <|@
      nr  142  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  456  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: stack:36|DWORD) size: DWORD <|@ <|@
      nr  460  <|@ instruction r10|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  470  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  472  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B116" 
    xhandlers
    flags 
    probability 4533458155408401000
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  478  <|@ instruction stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction r11|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction rcx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction r8|DWORD = MOVE input: int[48|0x30] <|@ <|@
      nr  490  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  492  <|@ instruction stack:104|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  494  <|@ st <@st|@reference-map: [stack:64, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111]
locals: - stack:48|QWORD[.] stack:100|DWORD stack:76|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5] <|@ <|@
      nr  496  <|@ instruction r10|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  498  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD <|@ <|@
      nr  502  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  504  <|@ instruction MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD <|@ <|@
      nr  506  <|@ instruction r13|DWORD = LEA [r10|DWORD + 2] size: DWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B41 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  984  <|@ instruction r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded] <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B96 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" "B96" "B182" "B181" "B180" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1840  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1842  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1844  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:283, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B118" "B124" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1342  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1344  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8]
stack: r13|DWORD 
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction MOV [r15|QWORD + 668] y: -236059 size: DWORD <|@ <|@
      nr   84  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1790  <|@ instruction r11|DWORD = MOVE input: int[-228379|0xfffffffffffc83e5] <|@ <|@
      nr 1792  <|@ instruction JUMP ~[] destination: B176 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" "B176" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1806  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1808  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1810  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1812  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396]
locals: - rbx|QWORD[.] r10|DWORD rcx|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:396, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction r10|DWORD = MOVE input: int[-165659|0xfffffffffffd78e5] <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B42 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" "B48" "B47" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  524  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  588  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  590  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85]
locals: stack:32|QWORD[.] rbx|QWORD[.] r11|DWORD r8|DWORD - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:85, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction r10|DWORD = MOVE input: int[-163355|0xfffffffffffd81e5] <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5] <|@ <|@
      nr  576  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  936  <|@ instruction r10|DWORD = MOVE input: int[-174363|0xfffffffffffd56e5] <|@ <|@
      nr  938  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  940  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  942  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  944  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  946  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197]
locals: stack:32|QWORD[.] rbx|QWORD[.] rdx|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:197, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  930  <|@ instruction r10|DWORD = MOVE input: int[-176411|0xfffffffffffd4ee5] <|@ <|@
      nr  932  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr  726  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5] <|@ <|@
      nr  730  <|@ instruction JUMP ~[] destination: B63 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B66" "B63" "B68" "B62" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  768  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  770  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  774  <|@ st <@st|@reference-map: [rbx:0, stack:80]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229]
locals: stack:32|QWORD[.] rbx|QWORD[.] rbp|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: stack:32|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:229, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction MOV [r15|QWORD + 668] y: -230939 size: DWORD <|@ <|@
      nr 1104  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1106  <|@ st <@st|@reference-map: [rbx:0, rsi:0]
live-base-pointers: []
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363]
locals: rsi|QWORD[.] rbx|QWORD[.] r10|DWORD - - 
sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:363, 5] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction r10|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5] <|@ <|@
      nr 1830  <|@ instruction JUMP ~[] destination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  748  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  750  <|@ instruction r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B66 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction r10|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5] <|@ <|@
      nr  564  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  566  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1796  <|@ instruction r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5] <|@ <|@
      nr 1798  <|@ instruction JUMP ~[] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction r10|DWORD = MOVE input: int[-213019|0xfffffffffffcbfe5] <|@ <|@
      nr 1818  <|@ instruction JUMP ~[] destination: B180 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  762  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  764  <|@ instruction r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed] <|@ <|@
      nr  766  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  714  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924] <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5] <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B62 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B179" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5] <|@ <|@
      nr 1804  <|@ instruction JUMP ~[] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction r10|DWORD = MOVE input: int[-200219|0xfffffffffffcf1e5] <|@ <|@
      nr 1824  <|@ instruction JUMP ~[] destination: B181 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B125" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction r10|DWORD = MOVE input: int[-233235|0xfffffffffffc70ed] <|@ <|@
      nr 1266  <|@ instruction JUMP ~[] destination: B118 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B37" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rax|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5] <|@ <|@
      nr  352  <|@ instruction r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B28 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B184" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1834  <|@ instruction r10|DWORD = MOVE input: int[-195355|0xfffffffffffd04e5] <|@ <|@
      nr 1836  <|@ instruction JUMP ~[] destination: B183 -> B184 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_0       
     2: getfield      #3          // buffer:char[]
     5: invokespecial #11         // getChars:(char[])int
     8: istore_1      
     9: new           #14         // java.lang.String
    12: dup           
    13: aload_0       
    14: getfield      #3          // buffer:char[]
    17: iconst_0      
    18: iload_1       
    19: invokespecial #12         // java.lang.String.<init>:(char[], int, int)void
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604889742450448b5610448b5e1444895c244c448b461c448b4e208b4e0c894c24480fb67e18418bd948c1e30348895c244085ff0f85ea08000083f9010f8d2303000049c7c61200000049c7c510000000bd02000000b801000000ba0000000048c74424380200000083f9010f8dbd06000083f9fe0f8cb4060000428b3ccd0c0000003bfa0f86080b00003bf80f861a0b00006643c744cd0030006643c704ce2e0085c90f85b0030000418bca458bd3448bdd438504c485c90f8c570600004585d20f8c4e060000428b34c50c000000412bf23bce0f8f3b060000412bfa443bdf0f8f2f06000049c1e0034863f94963f34963d2498d7c7810488d74731044895c241ce80000000090448b5c241c44035c244c458beb488b742450448b7620438504f449baaddeaddeaddeadde4183fd010f8cf4030000468b1cf50c000000418bc3412bc585c00f8cc1090000498b4760498b57704181fdffffff000f8324040000418bcdd1e18d491783e1f84863c94c8bc14c03c04c3bc20f87070400004d8947600f188401c00000000f188401000100000f188401400100000f188401800100004489680c48c70001000000c74008addeadde4489742448458bf3453bee418bf5410f4ff64863f64883fe010f8c9e000000448b542448488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d180300004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f5c000000498b7760488d5618493b57700f875e040000498957600f1886d800000049baaddeaddeaddeadde488bd6498b8aa800000048890ec74608addeadde48c1e80389460c44896610488bc2488b6c24604883c468850500000000c5f877c3488d4c7010482bd6488d72f04885f60f8de801000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff48c7c70200000049c7c610000000448be9bd02000000b801000000ba0000000048c74424300200000083f9080f8d11050000438504cc428b04c50c000000468b0ccd0c00000044894c242c49c1e0034963fa443bd90f8fed0100004585d20f8c7c0400004585db0f8c8f040000412bc3443bd00f8f8d040000458bd1452bd3413bd20f8f880400004c8bd34963c3498d7c7810498d74521089542428488bd0e800000000908b5424280354244c8b4c24483b4c244c448b4c242c0f8f4f060000443bca0f86520700008bfaffc7443bcf0f86da070000488b5c244066c74453102e0066c7447b1030008d7a02448befe9bcfcffff448bdd442bd9f7d94c63c9498bc948ffc9443bdd0f8f3b020000448954241c448b54244c413beb0f8f7d070000443bdf0f8fb10700004983f9010f8c0c020000488d746b10498d51fe4885d20f8c2d020000c4c1796e0500000000c5f97e0648c7c202000000483bd10f8f1c02000066c70630008b4c241ce9dcfbffffc5f9efc049c7c2000000000f1f8400000000000f1f8000000000c4a17e7f04514d8d52104c3bd67ef1e9f1fdffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe9cefcffff4585ed0f8c50070000498b4760488d5018493b57700f873a030000498957600f1880d8000000488bf0498b92a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24604883c468850500000000c5f877c3448974244848baaddeaddeaddeadde488bf2418bd5b900000000458bf3e80000000090e90ffcffff89542428453bcd0f86d40600004585d20f8c200300008bf02bf1443bd60f8f22030000448b5c2428418bf12bf1443bde0f8f1e0300008944242444896c2420448954241c498bf0488bd34863e9488d7c7e104a8d745a10488bd54c89442410e80000000090448b6c2420488b5c24406642c7446b102e0041ffc5448b54241c44035424484585d20f8cd1020000448b5c244c442b5c24484585db0f8cbe0200008b442424412bc3443bd00f8fae020000448b4c242c452bcb453be90f8f9d0200004c8b4424104963fa4963f54963d3498d7c7810488d74731044896c242444895c2420e80000000090448b6c242444036c2420e970faffff8b4c241ce904faffff488b742438448954241c448b54244c4803f18bd7483bd60f86e90400003bfd0f87aafdffffe97d05000048c7c200000000e9dbfdffff8b4c241ce9c5f9ffff4c8bf048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc6e985fbffffbe9f18fdff4189b79c0200004d89a7a8020000e80000000090418bca428b3cc50c0000003bf90f865c050000468b14cd0c000000443bd20f86a6040000443bd00f861d050000837c244c020f8c8d030000448b5c244c41ffcb418bc303c5443bd00f86b904000049c1e003410fbf74481066438974cd006643c704ce2e00412bfb8bf1ffc63bf70f8f21020000418bfa412bfb3bef0f8f130200008944244c448954241c488bd34863fe4d63db498d7c7810488d746a10498bd3e800000000908b44244c488b5c244066c74443104500448bd041ffc2837c2448018b74241c0f8dde000000413bf20f86d80300006642c74453102d008d4002ba010000002b5424488bca448bd0413bf20f8648040000458bc241ffc083f90a0f8d4b0100008d4130664289445310458be8e9d0f8ffffb89f92fdff448bda4189879c0200004d89a7a8020000e80000000090b89f92fdff448bdaebe2b89f92fdff448bdaebd8b89f92fdff448bdaebce48beaddeaddeaddeaddeba02000000b901000000e8000000009049baaddeaddeaddeaddee9a8fcffff418bca448bda488b542430488d77104d8bee48895424384c8bf6418bd38b4c2448448b5c244c488b742450e990f7ffff8b4c2448ffc9e939ffffffb89ff5fdff448b5c2428e95bffffffb89ff5fdff448b5c2428e94cffffffb89ff5fdffe942ffffff41c7879c0200009fbdfdff4d89a7a8020000e80000000090418bca42833ccd0c000000000f84f20100006642c704cd100000002d00837c2448010f8dec00000049c7c61400000049c7c512000000bd03000000b802000000ba0100000048c744243803000000488b7424508b4c2448e9e9f6ffff413bf00f86a2020000458d6a0283f9640f8d460000008bc1ba67666666f7eac1fa028d42306642894453108bc2c1e003d1e203c22bc88d4130664289444310e952f7ffff41c7879c0200009fccfcff4d89a7a8020000e80000000090413bf50f865b0100008bc1ba1f85eb51f7eac1fa058d42306642894453106bc2642bc88bc1ba67666666f7eac1fa028bf1c1ee1f03d68d72306642897443108bf2c1e603d1e203f22bce8d7130664289746b10458d6a03e9def6ffff8b742448ffc648c7c70400000049c7c612000000448beebd03000000b802000000ba0100000048c744243003000000488b7424508b4c2448e91af9ffff448b5c2428488b5c24402b4c244c448bd24403d1453bca0f86e7000000418bfaffc7443bcf0f86ba000000897c2420894c2424488bf3448bda418bca41b83000000044895c240c44895424080f1f8000000000e80000000090448b542408488b5c24406642c74453102e008b7c242066c7447b103000458d6a02e922f6ffff41baededfcff4589979c0200004d89a7a8020000e8000000009041baed66fcff4589979c0200004d89a7a8020000e8000000009041c7879c020000e565fcff4d89a7a8020000e8000000009041bbe583fcff45899f9c0200004d89a7a8020000e8000000009041bae578fdff448b44244c4589979c0200004d89a7a8020000e8000000009041bae581fdffebdf41bae56bfdff448b5c2428488b5c2440ebcd41bae556fdff4589979c0200004d89a7a8020000e8000000009041bae54efdffebe449baaddeaddeaddeadde4d8bda41bae543fdff4589979c0200004d899fa8020000e80000000090488b74245041c7879c020000e579fcff4d89a7a8020000e8000000009041bae5f7fcffe9f6feffff49bb000000000000000041baed47fdffebb241bae562fdff448b5c2428488b5c2440e935ffffff41bbe533fcffe910ffffff41bae5bffcffe9b9feffff49bb000000000000000041baed46fdffe972ffffff49baaddeaddeaddeadde4d8bda41bae543fdffe95affffff41bbe531fcffe9cdfeffff41bae5f1fcffe976feffff41baed70fcffe985feffffb8e5e5fdff448b5c2428e9b0fbffff41bae504fdffe951feffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 57 10 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 61 12 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 66 14 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 70 16 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 74 18 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 20 stack:40|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 81 22 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 85 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 92 26 stack:48|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 97 28 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 105 block B1 null  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 108 36 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 114 block B2 null  <||@
  Comment 114 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 40 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 121 42 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 128 44 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 133 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 138 48 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 143 50 stack:56|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 152 52 JUMP ~[] destination: B2 -> B51  <||@
  Comment 152 block B51 null  <||@
  Comment 152 620 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 152 622 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 155 624 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B92  <||@
  Comment 161 block B52 null  <||@
  Comment 161 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 628 CMP rcx|DWORD y: -2 size: DWORD  <||@
  Comment 164 630 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B92 falseDestination: B52 -> B54  <||@
  Comment 170 block B54 null  <||@
  Comment 170 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 640 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5]  <||@
  Comment 170 [rbx:0, rsi:0, r8:0, r9:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 170 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 178 642 CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 180 644 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89  <||@
  Comment 186 block B55 null  <||@
  Comment 186 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 648 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 188 650 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88  <||@
  Comment 194 block B56 null  <||@
  Comment 194 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 654 MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD  <||@
  Comment 202 656 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 209 658 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 211 660 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 217 block B57 null  <||@
  Comment 217 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 664 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 220 666 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 223 668 r11|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 226 670 JUMP ~[] destination: B57 -> B78  <||@
  Comment 226 block B78 null  <||@
  Comment 226 834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 226 836 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5]  <||@
  Comment 226 [rbx:0, r8:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 226 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 230 838 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 232 840 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B86 falseDestination: B78 -> B80  <||@
  Comment 238 block B80 null  <||@
  Comment 238 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 850 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 241 852 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B86 falseDestination: B80 -> B82  <||@
  Comment 247 block B82 null  <||@
  Comment 247 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 862 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 255 864 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 258 866 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 260 868 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B86 falseDestination: B82 -> B84  <||@
  Comment 266 block B84 null  <||@
  Comment 266 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 878 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 269 880 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 272 882 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87  <||@
  Comment 278 block B87 null  <||@
  Comment 278 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 900 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 282 902 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 282 904 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 282 906 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 285 908 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 288 910 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 291 912 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 296 914 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 301 916 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 306 918 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 306 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 312 920 r11|DWORD = ADD (x: stack:84|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 322 922 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 325 926 JUMP ~[] destination: B87 -> B116  <||@
  Comment 325 block B116 null  <||@
  Comment 325 1244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 325 508 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 330 1246 r14|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 334 1248 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:8]  <||@
  Comment 334 [rsi:0, r14:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |r13|DWORD     |    <||@
  Comment 334 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 338 1250 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 338 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 348 1252 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 352 1254 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123  <||@
  Comment 358 block B123 null  <||@
  Comment 358 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 1324 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 366 1326 rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 372 1328 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 374 1330 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126  <||@
  Comment 380 block B126 null  <||@
  Comment 380 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1348 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 384 1350 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 388 1352 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 395 1354 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B131  <||@
  Comment 401 block B127 null  <||@
  Comment 401 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 1358 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 406 1360 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 409 1362 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 412 1364 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 415 1366 r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 421 1368 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 424 1370 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B131 falseDestination: B127 -> B129  <||@
  Comment 430 block B129 null  <||@
  Comment 430 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 1380 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 434 1382 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 442 1384 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 450 1386 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 458 1388 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 466 1390 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1392 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 477 1394 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 477 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 484 1396 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 484 1398 stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 489 1400 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 492 1402 JUMP ~[] destination: B129 -> B132  <||@
  Comment 492 block B132 null  <||@
  Comment 492 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 492 1428 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 495 1430 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 502 1432 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 505 1434 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 509 1436 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B151 falseDestination: B132 -> B134  <||@
  Comment 515 block B134 null  <||@
  Comment 515 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 1444 r10|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 520 1446 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 524 1448 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 532 1450 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 536 1452 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 539 1458 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 546 1454 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B139 falseDestination: B134 -> B137  <||@
  Comment 552 block B139 null  <||@
  Comment 552 1484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 552 1486 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 556 1488 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 559 1490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B142 falseDestination: B139 -> B141  <||@
  Comment 565 block B141 null  <||@
  Comment 565 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 1498 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 571 1500 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 577 1502 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 581 1504 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 584 1506 JUMP ~[] destination: B141 -> B142  <||@
  Comment 584 block B142 null  <||@
  Comment 584 1508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 584 1510 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 588 1512 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 591 1514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B145 falseDestination: B142 -> B144  <||@
  Comment 597 block B144 null  <||@
  Comment 597 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 597 1522 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 603 1524 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 609 1526 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 613 1528 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 616 1530 JUMP ~[] destination: B144 -> B145  <||@
  Comment 616 block B145 null  <||@
  Comment 616 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 616 1534 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 620 1536 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 623 1538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B148 falseDestination: B145 -> B147  <||@
  Comment 629 block B147 null  <||@
  Comment 629 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 1546 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 635 1548 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 641 1550 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 645 1552 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 648 1554 JUMP ~[] destination: B147 -> B148  <||@
  Comment 648 block B148 null  <||@
  Comment 648 1556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 648 1558 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 654 1560 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 657 1562 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150  <||@
  Comment 663 block B150 null  <||@
  Comment 663 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 1570 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 668 1572 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 673 1574 JUMP ~[] destination: B150 -> B151  <||@
  Comment 673 block B151 null  <||@
  Comment 673 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 1578 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 676 1580 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 679 1582 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B171  <||@
  Comment 685 block B171 null  <||@
  Comment 685 1722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 1724 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 689 1726 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 693 1728 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 697 1730 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173  <||@
  Comment 703 block B173 null  <||@
  Comment 703 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 1754 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 707 1756 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 714 1758 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 714 1762 JUMP ~[] destination: B173 -> B174  <||@
  Comment 714 block B174 null  <||@
  Comment 714 1764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 714 1760 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 714 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 724 1766 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 727 1768 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 734 1770 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 737 1772 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 737 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 744 1774 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 748 1776 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 751 1778 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 755 1780 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 758 1782 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 767 12  <||@
  Comment 777 block B152 null  <||@
  Comment 777 1584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 1586 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 782 1588 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 785 1590 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 789 1592 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 792 1594 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 798 block B153 null  <||@
  Comment 798 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 1598 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 805 1600 JUMP ~[] destination: B153 -> B157  <||@
  Comment 805 block B157 null  <||@
  Comment 805 1624 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 805 1626 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 809 1628 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 812 1630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 818 block B159 null  <||@
  Comment 818 1636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 818 1638 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 822 1640 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 828 1642 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 832 1644 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 835 1646 JUMP ~[] destination: B159 -> B160  <||@
  Comment 835 block B160 null  <||@
  Comment 835 1648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 835 1650 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 839 1652 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 842 1654 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 848 block B162 null  <||@
  Comment 848 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 1662 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 852 1664 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 858 1666 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 862 1668 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 865 1670 JUMP ~[] destination: B162 -> B163  <||@
  Comment 865 block B163 null  <||@
  Comment 865 1672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 865 1674 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 869 1676 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 872 1678 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 878 block B165 null  <||@
  Comment 878 1684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 1686 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 882 1688 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 888 1690 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 892 1692 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 895 1694 JUMP ~[] destination: B165 -> B166  <||@
  Comment 895 block B166 null  <||@
  Comment 895 1696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 895 1698 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 898 1700 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 901 1702 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168  <||@
  Comment 907 block B168 null  <||@
  Comment 907 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 907 1710 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 912 1712 JUMP ~[] destination: B168 -> B171  <||@
  Comment 917 block B3 null  <||@
  Comment 917 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 56 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 924 58 r14|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 931 60 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 934 62 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 939 64 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 944 66 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 949 68 stack:64|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 958 70 JUMP ~[] destination: B3 -> B9  <||@
  Comment 958 block B9 null  <||@
  Comment 958 148 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 958 150 CMP rcx|DWORD y: 8 size: DWORD  <||@
  Comment 961 152 BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50  <||@
  Comment 967 block B10 null  <||@
  Comment 967 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 156 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5]  <||@
  Comment 967 [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 967 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 971 158 rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5]  <||@
  Comment 971 [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 971 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 160 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 987 162 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 992 164 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 996 166 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 999 168 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1002 170 BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29  <||@
  Comment 1008 block B29 null  <||@
  Comment 1008 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 358 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1011 360 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 1017 block B31 null  <||@
  Comment 1017 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 372 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1020 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 1026 block B33 null  <||@
  Comment 1026 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 386 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1029 388 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1032 390 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 1038 block B35 null  <||@
  Comment 1038 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1038 402 r10|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1044 404 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1047 406 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38  <||@
  Comment 1053 block B38 null  <||@
  Comment 1053 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 426 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1053 428 r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 430 rax|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1059 432 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1064 434 rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1069 436 stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1073 438 rdx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1076 440 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1076 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1082 442 rdx|DWORD = ADD (x: stack:72|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1090 444 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1094 446 CMP (x: rcx|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1098 452 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1103 448 BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44  <||@
  Comment 1109 block B44 null  <||@
  Comment 1109 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 532 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1112 534 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 1118 block B45 null  <||@
  Comment 1118 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1118 538 rdi|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1122 540 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1125 542 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 1131 block B46 null  <||@
  Comment 1131 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 546 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 548 MOV [rbx|QWORD[.] + rdx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1143 550 MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1150 552 rdi|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 1153 554 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1156 558 JUMP ~[] destination: B46 -> B116  <||@
  Comment 1161 block B58 null  <||@
  Comment 1161 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 674 r11|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1167 676 rcx|DWORD = NEG rcx|DWORD size: DWORD  <||@
  Comment 1169 678 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1172 680 rcx|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 1178 682 CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1181 684 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64  <||@
  Comment 1187 block B64 null  <||@
  Comment 1187 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 734 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1192 736 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1197 738 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1197 block B65 null  <||@
  Comment 1197 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 742 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1200 744 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1206 block B67 null  <||@
  Comment 1206 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 756 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1209 758 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70  <||@
  Comment 1215 block B70 null  <||@
  Comment 1215 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 778 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 1219 780 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1225 block B72 null  <||@
  Comment 1225 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 790 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1230 792 rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 1234 794 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1237 796 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1243 block B74 null  <||@
  Comment 1243 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 806 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1243 {DataSection[0x0]}  <||@
  Comment 1252 808 J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1256 810 rdx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1263 812 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1263 block B75 null  <||@
  Comment 1263 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1263 816 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1266 818 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1272 block B77 null  <||@
  Comment 1272 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 828 MOV [rsi|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1277 830 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1281 832 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1286 block B154 null  <||@
  Comment 1286 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1286 1604 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1290 1606 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1297 1608 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1297 block B155 loop 1 depth 1 header:1709|LoopBegin  <||@
  Comment 1297 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 1612 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 1614 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1322 1616 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1325 1618 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155  <||@
  Comment 1332 block B137 loop 0 depth 1 header:1646|LoopBegin  <||@
  Comment 1332 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1344 1470 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1350 1472 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1356 1474 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1360 1476 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1363 1478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B139 falseDestination: B137 -> B137  <||@
  Comment 1370 block B117 null  <||@
  Comment 1370 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1370 1258 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1373 1260 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 1379 block B119 null  <||@
  Comment 1379 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1379 1270 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1383 1272 rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1387 1274 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1391 1276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 1397 block B121 null  <||@
  Comment 1397 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1397 1296 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1401 1298 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1408 1300 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1408 1302 JUMP ~[] destination: B121 -> B122  <||@
  Comment 1408 block B122 null  <||@
  Comment 1408 1304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1408 1306 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1411 1308 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1418 1310 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1421 1312 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1421 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1428 1314 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1428 {NarrowOop[char[0]{}]}  <||@
  Comment 1435 1316 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1439 1318 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1442 1320 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1451 12  <||@
  Comment 1461 block B131 null  <||@
  Comment 1461 1410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 1406 stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1466 1412 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1466 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1476 1414 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1479 1416 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1482 1418 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1487 1420 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1490 1422 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1490 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1495 [stack:72, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1496 1424 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1501 block B11 null  <||@
  Comment 1501 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 174 stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1505 176 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1508 178 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28  <||@
  Comment 1514 block B12 null  <||@
  Comment 1514 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 182 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1517 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1523 block B14 null  <||@
  Comment 1523 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 196 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1527 198 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1530 200 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 1536 block B16 null  <||@
  Comment 1536 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 212 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1541 214 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1546 216 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1549 218 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1555 block B18 null  <||@
  Comment 1555 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 228 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1559 230 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1564 232 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1569 234 rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 236 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 238 rbp|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1578 240 rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1583 242 rsi|QWORD = LEA [rdx|QWORD[*] + r11|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1588 244 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 1591 246 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 248 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1596 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1602 250 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1607 252 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1612 254 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1620 256 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1623 258 r10|DWORD = ADD (x: stack:84|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1633 260 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1636 262 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20  <||@
  Comment 1642 block B20 null  <||@
  Comment 1642 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 270 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1647 272 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1652 274 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1655 276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22  <||@
  Comment 1661 block B22 null  <||@
  Comment 1661 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 284 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1665 286 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1668 288 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1671 290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 1677 block B24 null  <||@
  Comment 1677 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 298 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1682 300 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1685 302 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1688 304 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27  <||@
  Comment 1694 block B27 null  <||@
  Comment 1694 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1694 320 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 322 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 324 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 326 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1702 328 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1705 330 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1708 332 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1713 334 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1718 336 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1723 338 stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1728 340 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1728 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1734 342 r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 1744 346 JUMP ~[] destination: B27 -> B116  <||@
  Comment 1749 block B71 null  <||@
  Comment 1749 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 784 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1753 786 JUMP ~[] destination: B71 -> B78  <||@
  Comment 1758 block B59 null  <||@
  Comment 1758 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 688 rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1763 690 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1768 692 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1773 694 rsi|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1776 696 rdx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 1778 698 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1781 700 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63  <||@
  Comment 1787 block B60 null  <||@
  Comment 1787 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1787 704 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1789 706 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B65 falseDestination: B60 -> B62  <||@
  Comment 1800 block B73 null  <||@
  Comment 1800 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1800 800 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1807 802 JUMP ~[] destination: B73 -> B75  <||@
  Comment 1812 block B76 null  <||@
  Comment 1812 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 822 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1816 824 JUMP ~[] destination: B76 -> B78  <||@
  Comment 1821 block B172 null  <||@
  Comment 1821 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1821 1734 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1824 1736 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1824 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1834 1738 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1839 1740 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1844 1742 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1844 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1849 [r14:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1850 1744 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1853 1746 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 1750 JUMP ~[] destination: B172 -> B174  <||@
  Comment 1861 block B86 null  <||@
  Comment 1861 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1861 844 rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f]  <||@
  Comment 1866 892 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1873 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1880 896 DEOPT info [bci:256, 5]  <||@
  Comment 1880 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1885 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1886 block B92 null  <||@
  Comment 1886 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 950 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1889 956 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1889 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1889 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1897 958 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1899 960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183  <||@
  Comment 1905 block B93 null  <||@
  Comment 1905 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 964 r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1905 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1905 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1913 966 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1916 968 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182  <||@
  Comment 1922 block B94 null  <||@
  Comment 1922 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1922 972 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1925 974 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181  <||@
  Comment 1931 block B95 null  <||@
  Comment 1931 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1931 978 CMP stack:36|DWORD y: 2 size: DWORD  <||@
  Comment 1936 980 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 1942 block B97 null  <||@
  Comment 1942 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1942 990 r11|DWORD = DEC stack:36|DWORD size: DWORD  <||@
  Comment 1950 992 rax|DWORD = ADD (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1955 994 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1958 996 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180  <||@
  Comment 1964 block B98 null  <||@
  Comment 1964 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1964 1000 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 1968 1002 rsi|DWORD = MOVSX [r8|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1974 1004 MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rsi|DWORD) size: WORD  <||@
  Comment 1980 1006 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 1987 1008 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1990 1010 rsi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1994 1012 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1996 1014 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B102 falseDestination: B98 -> B100  <||@
  Comment 2002 block B100 null  <||@
  Comment 2002 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2002 1022 rdi|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2008 1024 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2010 1026 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B103  <||@
  Comment 2016 block B103 null  <||@
  Comment 2016 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1042 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2020 1044 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2025 1046 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2025 1048 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2028 1050 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2031 1052 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2034 1054 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2039 1056 rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2044 1058 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2047 1060 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2047 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2053 1062 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2057 1064 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 1066 MOV [rbx|QWORD[.] + rax|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2069 1068 r10|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 2075 1070 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 2080 1076 rsi|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2084 1072 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 2090 block B104 null  <||@
  Comment 2090 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2090 1078 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2093 1080 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 2099 block B105 null  <||@
  Comment 2099 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2099 1084 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2107 1086 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 2110 1088 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2115 1090 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 2119 1092 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2121 1094 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2124 1096 JUMP ~[] destination: B105 -> B108  <||@
  Comment 2124 block B108 null  <||@
  Comment 2124 1116 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2124 1118 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2127 1120 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178  <||@
  Comment 2133 block B109 null  <||@
  Comment 2133 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2133 1124 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2139 1126 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 2142 1128 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 2148 block B110 null  <||@
  Comment 2148 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2148 1132 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2151 1134 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2157 1136 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2160 1140 JUMP ~[] destination: B110 -> B116  <||@
  Comment 2165 block B30 null  <||@
  Comment 2165 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2165 364 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2170 366 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2173 368 JUMP ~[] destination: B30 -> B37  <||@
  Comment 2173 block B37 null  <||@
  Comment 2173 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2173 418 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2180 420 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2187 422 DEOPT info [bci:43, 5]  <||@
  Comment 2187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2192 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2193 block B32 null  <||@
  Comment 2193 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 378 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2198 380 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2201 382 JUMP ~[] destination: B32 -> B37  <||@
  Comment 2203 block B34 null  <||@
  Comment 2203 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 394 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2208 396 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2211 398 JUMP ~[] destination: B34 -> B37  <||@
  Comment 2213 block B36 null  <||@
  Comment 2213 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2213 410 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2218 412 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2221 414 JUMP ~[] destination: B36 -> B37  <||@
  Comment 2223 block B120 null  <||@
  Comment 2223 1278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2223 1280 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2223 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2233 1282 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2238 1284 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2243 1286 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2243 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2248 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2249 1288 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 1290 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2249 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2259 1292 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2264 block B50 null  <||@
  Comment 2264 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2264 594 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2267 596 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2270 598 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2275 600 rsi|QWORD = LEA [rdi|QWORD + 16] size: QWORD  <||@
  Comment 2279 602 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2282 604 stack:56|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2287 608 r14|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2290 610 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2293 612 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2297 614 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2302 616 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2307 618 JUMP ~[] destination: B50 -> B51  <||@
  Comment 2312 block B107 null  <||@
  Comment 2312 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2312 1112 rcx|DWORD = DEC stack:40|DWORD size: DWORD  <||@
  Comment 2318 1114 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2323 block B13 null  <||@
  Comment 2323 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2323 188 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2328 190 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2333 192 JUMP ~[] destination: B13 -> B37  <||@
  Comment 2338 block B15 null  <||@
  Comment 2338 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2338 204 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2343 206 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2348 208 JUMP ~[] destination: B15 -> B37  <||@
  Comment 2353 block B17 null  <||@
  Comment 2353 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 222 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2358 224 JUMP ~[] destination: B17 -> B37  <||@
  Comment 2363 block B26 null  <||@
  Comment 2363 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 312 MOV [r15|QWORD + 668] y: -148065 size: DWORD  <||@
  Comment 2374 314 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2381 316 DEOPT info [bci:145, 5]  <||@
  Comment 2381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2386 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |stack:40|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2387 block B4 null  <||@
  Comment 2387 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 74 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2390 76 CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 2390 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2390 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2399 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 2405 block B6 null  <||@
  Comment 2405 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 90 MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD  <||@
  Comment 2416 92 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 2421 94 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2427 block B7 null  <||@
  Comment 2427 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2427 98 r14|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2434 100 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2441 102 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2446 104 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2451 106 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2456 108 stack:56|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2465 114 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2470 116 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2474 118 JUMP ~[] destination: B7 -> B51  <||@
  Comment 2479 block B111 null  <||@
  Comment 2479 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 1144 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2482 1146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177  <||@
  Comment 2488 block B112 null  <||@
  Comment 2488 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2488 1150 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2492 1152 CMP rcx|DWORD y: 100 size: DWORD  <||@
  Comment 2495 1154 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 2501 block B113 null  <||@
  Comment 2501 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2501 1158 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2503 1160 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2508 1162 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2510 1164 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2513 1166 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2516 1168 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2522 1170 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2527 1172 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2529 1174 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2531 1176 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2533 1178 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2536 1180 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2542 1184 JUMP ~[] destination: B113 -> B116  <||@
  Comment 2547 block B102 null  <||@
  Comment 2547 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2547 1034 MOV [r15|QWORD + 668] y: -209761 size: DWORD  <||@
  Comment 2558 1036 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2565 1038 DEOPT info [bci:306, 5]  <||@
  Comment 2565 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2570 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2571 block B114 null  <||@
  Comment 2571 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1188 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2574 1190 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176  <||@
  Comment 2580 block B115 null  <||@
  Comment 2580 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2580 1194 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2582 1196 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 2587 1198 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2589 1200 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 2592 1202 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2595 1204 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2601 1206 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 2604 1208 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2606 1210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2608 1212 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2613 1214 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2615 1216 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2618 1218 rsi|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 2623 1220 rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2625 1222 rsi|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2628 1224 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 2634 1226 rsi|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2639 1228 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2641 1230 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2643 1232 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2645 1234 rsi|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2648 1236 MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 2654 1238 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 2658 1242 JUMP ~[] destination: B115 -> B116  <||@
  Comment 2663 block B8 null  <||@
  Comment 2663 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2663 122 rsi|DWORD = INC stack:40|DWORD size: DWORD  <||@
  Comment 2669 124 rdi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 2676 126 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2683 128 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2686 130 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2691 132 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2696 134 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2701 136 stack:64|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2710 142 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2715 144 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2719 146 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2724 block B39 null  <||@
  Comment 2724 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2724 454 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2729 456 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2734 458 rcx|DWORD = SUB (x: rcx|DWORD, ~y: stack:36|DWORD) size: DWORD  <||@
  Comment 2738 460 r10|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2744 462 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2747 464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 2753 block B40 null  <||@
  Comment 2753 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2753 468 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2758 470 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2761 472 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 2767 block B41 null  <||@
  Comment 2767 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2767 476 stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2771 478 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2775 480 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 482 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2781 486 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2784 488 r8|DWORD = MOVE input: int[48|0x30]  <||@
  Comment 2790 490 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2795 492 stack:104|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2800 494 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5]  <||@
  Comment 2800 8  <||@
  Comment 2807 {HotSpotMethod<Arrays.fill(char[], int, int, char)>}  <||@
  Comment 2812 [stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111, duringCall: true, rethrow: false]
              |0  |1                  |2                |3               |4 
     locals:  |-  |stack:48|QWORD[.]  |stack:100|DWORD  |stack:76|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2813 496 r10|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 2818 498 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2823 500 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2831 502 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2835 504 MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 2842 506 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2846 510 JUMP ~[] destination: B41 -> B116  <||@
  Comment 2851 block B96 null  <||@
  Comment 2851 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2851 984 r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded]  <||@
  Comment 2857 986 JUMP ~[] destination: B96 -> B184  <||@
  Comment 2857 block B184 null  <||@
  Comment 2857 1838 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2857 1840 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2864 1842 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2871 1844 DEOPT info [bci:283, 5]  <||@
  Comment 2871 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2876 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2877 block B124 null  <||@
  Comment 2877 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2877 1334 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2883 1336 JUMP ~[] destination: B124 -> B125  <||@
  Comment 2883 block B125 null  <||@
  Comment 2883 1338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2883 1340 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2890 1342 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2897 1344 DEOPT info [bci:8]  <||@
  Comment 2897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2902 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2903 block B5 null  <||@
  Comment 2903 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2903 82 MOV [r15|QWORD + 668] y: -236059 size: DWORD  <||@
  Comment 2914 84 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2921 86 DEOPT info [bci:0]  <||@
  Comment 2921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2926 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2927 block B176 null  <||@
  Comment 2927 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2927 1790 r11|DWORD = MOVE input: int[-228379|0xfffffffffffc83e5]  <||@
  Comment 2933 1792 JUMP ~[] destination: B176 -> B179  <||@
  Comment 2933 block B179 null  <||@
  Comment 2933 1806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2933 1808 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2940 1810 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2947 1812 DEOPT info [bci:396, 5]  <||@
  Comment 2947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2952 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |rbx|QWORD[.]  |r10|DWORD  |rcx|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2953 block B42 null  <||@
  Comment 2953 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2953 514 r10|DWORD = MOVE input: int[-165659|0xfffffffffffd78e5]  <||@
  Comment 2959 518 JUMP ~[] destination: B42 -> B49  <||@
  Comment 2959 block B49 null  <||@
  Comment 2959 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2959 524 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2964 586 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2971 588 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2978 590 DEOPT info [bci:85, 5]  <||@
  Comment 2978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2983 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |r8|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2984 block B43 null  <||@
  Comment 2984 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2984 522 r10|DWORD = MOVE input: int[-163355|0xfffffffffffd81e5]  <||@
  Comment 2990 526 JUMP ~[] destination: B43 -> B49  <||@
  Comment 2992 block B48 null  <||@
  Comment 2992 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2992 574 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2998 576 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3003 578 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3008 582 JUMP ~[] destination: B48 -> B49  <||@
  Comment 3010 block B89 null  <||@
  Comment 3010 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3010 936 r10|DWORD = MOVE input: int[-174363|0xfffffffffffd56e5]  <||@
  Comment 3016 938 JUMP ~[] destination: B89 -> B90  <||@
  Comment 3016 block B90 null  <||@
  Comment 3016 940 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3016 942 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3023 944 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3030 946 DEOPT info [bci:197, 5]  <||@
  Comment 3030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3035 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 3036 block B88 null  <||@
  Comment 3036 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3036 930 r10|DWORD = MOVE input: int[-176411|0xfffffffffffd4ee5]  <||@
  Comment 3042 932 JUMP ~[] destination: B88 -> B90  <||@
  Comment 3044 block B63 null  <||@
  Comment 3044 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3044 724 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924]  <||@
  Comment 3044 {Object[d.a@351564924]}  <||@
  Comment 3054 726 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3057 728 r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5]  <||@
  Comment 3063 730 JUMP ~[] destination: B63 -> B69  <||@
  Comment 3063 block B69 null  <||@
  Comment 3063 768 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3063 770 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3070 772 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3077 774 DEOPT info [bci:229, 5]  <||@
  Comment 3077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3082 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 3083 block B106 null  <||@
  Comment 3083 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1100 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3088 1102 MOV [r15|QWORD + 668] y: -230939 size: DWORD  <||@
  Comment 3099 1104 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3106 1106 DEOPT info [bci:363, 5]  <||@
  Comment 3106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3111 [rbx:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 3112 block B182 null  <||@
  Comment 3112 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3112 1828 r10|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5]  <||@
  Comment 3118 1830 JUMP ~[] destination: B182 -> B184  <||@
  Comment 3123 block B66 null  <||@
  Comment 3123 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3123 748 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3133 750 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 3139 752 JUMP ~[] destination: B66 -> B69  <||@
  Comment 3141 block B47 null  <||@
  Comment 3141 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3141 562 r10|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5]  <||@
  Comment 3147 564 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3152 566 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 570 JUMP ~[] destination: B47 -> B49  <||@
  Comment 3162 block B177 null  <||@
  Comment 3162 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3162 1796 r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5]  <||@
  Comment 3168 1798 JUMP ~[] destination: B177 -> B179  <||@
  Comment 3173 block B180 null  <||@
  Comment 3173 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3173 1816 r10|DWORD = MOVE input: int[-213019|0xfffffffffffcbfe5]  <||@
  Comment 3179 1818 JUMP ~[] destination: B180 -> B184  <||@
  Comment 3184 block B68 null  <||@
  Comment 3184 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3184 762 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3194 764 r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed]  <||@
  Comment 3200 766 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3205 block B62 null  <||@
  Comment 3205 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 714 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924]  <||@
  Comment 3205 {Object[d.a@351564924]}  <||@
  Comment 3215 716 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3218 718 r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5]  <||@
  Comment 3224 720 JUMP ~[] destination: B62 -> B69  <||@
  Comment 3229 block B178 null  <||@
  Comment 3229 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3229 1802 r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 3235 1804 JUMP ~[] destination: B178 -> B179  <||@
  Comment 3240 block B181 null  <||@
  Comment 3240 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3240 1822 r10|DWORD = MOVE input: int[-200219|0xfffffffffffcf1e5]  <||@
  Comment 3246 1824 JUMP ~[] destination: B181 -> B184  <||@
  Comment 3251 block B118 null  <||@
  Comment 3251 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3251 1264 r10|DWORD = MOVE input: int[-233235|0xfffffffffffc70ed]  <||@
  Comment 3257 1266 JUMP ~[] destination: B118 -> B125  <||@
  Comment 3262 block B28 null  <||@
  Comment 3262 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3262 350 rax|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5]  <||@
  Comment 3267 352 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3272 354 JUMP ~[] destination: B28 -> B37  <||@
  Comment 3277 block B183 null  <||@
  Comment 3277 1832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1834 r10|DWORD = MOVE input: int[-195355|0xfffffffffffd04e5]  <||@
  Comment 3283 1836 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3288 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3288 4  <||@
  Comment 3294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3294 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10052[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  method "HotSpotCompilation-10052[sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString()]"
  date 1527005234059
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107cbd8a0 448b560849c1e203493bc20f85af85b4fe900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604889742450448b5610448b5e1444895c244c448b461c448b4e208b4e0c894c24480fb67e18418bd948c1e30348895c244085ff0f85ea08000083f9010f8d2303000049c7c61200000049c7c510000000bd02000000b801000000ba0000000048c74424380200000083f9010f8dbd06000083f9fe0f8cb4060000428b3ccd0c0000003bfa0f86080b00003bf80f861a0b00006643c744cd0030006643c704ce2e0085c90f85b0030000418bca458bd3448bdd438504c485c90f8c570600004585d20f8c4e060000428b34c50c000000412bf23bce0f8f3b060000412bfa443bdf0f8f2f06000049c1e0034863f94963f34963d2498d7c7810488d74731044895c241ce86953b5fe90448b5c241c44035c244c458beb488b742450448b7620438504f449bad01600c0070000004183fd010f8cf4030000468b1cf50c000000418bc3412bc585c00f8cc1090000498b4760498b57704181fdffffff000f8324040000418bcdd1e18d491783e1f84863c94c8bc14c03c04c3bc20f87070400004d8947600f188401c00000000f188401000100000f188401400100000f188401800100004489680c48c70001000000c74008410000f84489742448458bf3453bee418bf5410f4ff64863f64883fe010f8c9e000000448b542448488d50104a8d0cd5100000004c8d56f04d85d249c7c3000000000f8d180300004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8f5c000000498b7760488d5618493b57700f875e040000498957600f1886d800000049bad01600c007000000488bd6498b8aa800000048890ec74608da0200f848c1e80389460c44896610488bc2488b6c24604883c46885056114bdfcc5f877c3488d4c7010482bd6488d72f04885f60f8de801000049c7c200000000488d72f84c3bd60f8f11000000c5f9efc0c4a17a7f0451498d72084c8bd6488d72fc4c3bd60f8f11000000c5f9efc0c4a1f97e0451498d72044c8bd6488d72fe4c3bd60f8f11000000c5f9efc0c4a1797e0451498d72024c8bd648ffca4c3bd20f8f22ffffff6646892451e918ffffff48c7c70200000049c7c610000000448be9bd02000000b801000000ba0000000048c74424300200000083f9080f8d11050000438504cc428b04c50c000000468b0ccd0c00000044894c242c49c1e0034963fa443bd90f8fed0100004585d20f8c7c0400004585db0f8c8f040000412bc3443bd00f8f8d040000458bd1452bd3413bd20f8f880400004c8bd34963c3498d7c7810498d74521089542428488bd0e86750b5fe908b5424280354244c8b4c24483b4c244c448b4c242c0f8f4f060000443bca0f86520700008bfaffc7443bcf0f86da070000488b5c244066c74453102e0066c7447b1030008d7a02448befe9bcfcffff448bdd442bd9f7d94c63c9498bc948ffc9443bdd0f8f3b020000448954241c448b54244c413beb0f8f7d070000443bdf0f8fb10700004983f9010f8c0c020000488d746b10498d51fe4885d20f8c2d020000c4c1796e05fcfaffffc5f97e0648c7c202000000483bd10f8f1c02000066c70630008b4c241ce9dcfbffffc5f9efc049c7c2000000000f1f8400000000000f1f8000000000c4a17e7f04514d8d52104c3bd67ef1e9f1fdffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe9cefcffff4585ed0f8c50070000498b4760488d5018493b57700f873a030000498957600f1880d8000000488bf0498b92a8000000488910c74008da0200f8c7400c6e7100d844896010488bc6488b6c24604883c4688505b511bdfcc5f877c3448974244848ba080200c007000000488bf2418bd5b900000000458bf3e8698f2dff90e90ffcffff89542428453bcd0f86d40600004585d20f8c200300008bf02bf1443bd60f8f22030000448b5c2428418bf12bf1443bde0f8f1e0300008944242444896c2420448954241c498bf0488bd34863e9488d7c7e104a8d745a10488bd54c89442410e85f4eb5fe90448b6c2420488b5c24406642c7446b102e0041ffc5448b54241c44035424484585d20f8cd1020000448b5c244c442b5c24484585db0f8cbe0200008b442424412bc3443bd00f8fae020000448b4c242c452bcb453be90f8f9d0200004c8b4424104963fa4963f54963d3498d7c7810488d74731044896c242444895c2420e8db4db5fe90448b6c242444036c2420e970faffff8b4c241ce904faffff488b742438448954241c448b54244c4803f18bd7483bd60f86e90400003bfd0f87aafdffffe97d05000048c7c200000000e9dbfdffff8b4c241ce9c5f9ffff4c8bf048be680b00c007000000ba02000000b901000000e8078e2dff90488bf0498bc6e985fbffffbe9f18fdff4189b79c0200004d89a7a8020000e80196b4fe90418bca428b3cc50c0000003bf90f865c050000468b14cd0c000000443bd20f86a6040000443bd00f861d050000837c244c020f8c8d030000448b5c244c41ffcb418bc303c5443bd00f86b904000049c1e003410fbf74481066438974cd006643c704ce2e00412bfb8bf1ffc63bf70f8f21020000418bfa412bfb3bef0f8f130200008944244c448954241c488bd34863fe4d63db498d7c7810488d746a10498bd3e89c4cb5fe908b44244c488b5c244066c74443104500448bd041ffc2837c2448018b74241c0f8dde000000413bf20f86d80300006642c74453102d008d4002ba010000002b5424488bca448bd0413bf20f8648040000458bc241ffc083f90a0f8d4b0100008d4130664289445310458be8e9d0f8ffffb89f92fdff448bda4189879c0200004d89a7a8020000e8ce94b4fe90b89f92fdff448bdaebe2b89f92fdff448bdaebd8b89f92fdff448bdaebce48be680b00c007000000ba02000000b901000000e8788c2dff9049bad01600c007000000e9a8fcffff418bca448bda488b542430488d77104d8bee48895424384c8bf6418bd38b4c2448448b5c244c488b742450e990f7ffff8b4c2448ffc9e939ffffffb89ff5fdff448b5c2428e95bffffffb89ff5fdff448b5c2428e94cffffffb89ff5fdffe942ffffff41c7879c0200009fbdfdff4d89a7a8020000e80c94b4fe90418bca42833ccd0c000000000f84f20100006642c704cd100000002d00837c2448010f8dec00000049c7c61400000049c7c512000000bd03000000b802000000ba0100000048c744243803000000488b7424508b4c2448e9e9f6ffff413bf00f86a2020000458d6a0283f9640f8d460000008bc1ba67666666f7eac1fa028d42306642894453108bc2c1e003d1e203c22bc88d4130664289444310e952f7ffff41c7879c0200009fccfcff4d89a7a8020000e85493b4fe90413bf50f865b0100008bc1ba1f85eb51f7eac1fa058d42306642894453106bc2642bc88bc1ba67666666f7eac1fa028bf1c1ee1f03d68d72306642897443108bf2c1e603d1e203f22bce8d7130664289746b10458d6a03e9def6ffff8b742448ffc648c7c70400000049c7c612000000448beebd03000000b802000000ba0100000048c744243003000000488b7424508b4c2448e91af9ffff448b5c2428488b5c24402b4c244c448bd24403d1453bca0f86e7000000418bfaffc7443bcf0f86ba000000897c2420894c2424488bf3448bda418bca41b83000000044895c240c44895424080f1f8000000000e88481b4fe90448b542408488b5c24406642c74453102e008b7c242066c7447b103000458d6a02e922f6ffff41baededfcff4589979c0200004d89a7a8020000e82292b4fe9041baed66fcff4589979c0200004d89a7a8020000e80892b4fe9041c7879c020000e565fcff4d89a7a8020000e8f091b4fe9041bbe583fcff45899f9c0200004d89a7a8020000e8d691b4fe9041bae578fdff448b44244c4589979c0200004d89a7a8020000e8b791b4fe9041bae581fdffebdf41bae56bfdff448b5c2428488b5c2440ebcd41bae556fdff4589979c0200004d89a7a8020000e88391b4fe9041bae54efdffebe449ba300790bb070000004d8bda41bae543fdff4589979c0200004d899fa8020000e85491b4fe90488b74245041c7879c020000e579fcff4d89a7a8020000e83791b4fe9041bae5f7fcffe9f6feffff49bb000000000000000041baed47fdffebb241bae562fdff448b5c2428488b5c2440e935ffffff41bbe533fcffe910ffffff41bae5bffcffe9b9feffff49bb000000000000000041baed46fdffe972ffffff49ba300790bb070000004d8bda41bae543fdffe95affffff41bbe531fcffe9cdfeffff41bae5f1fcffe976feffff41baed70fcffe985feffffb8e5e5fdff448b5c2428e9b0fbffff41bae504fdffe951feffffe8a3c0f8fe90e87d8fb4fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@5aad6622 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 57 10 r11|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 61 12 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 66 14 r8|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 70 16 r9|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 74 18 rcx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 77 20 stack:40|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 81 22 rdi|DWORD = MOVZXB [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 85 24 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 92 26 stack:48|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 97 28 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 99 30 BRANCH trueDestinationProbability: 0.9997660380889991 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4  <||@
  Comment 105 block B1 null  <||@
  Comment 105 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 34 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 108 36 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 114 block B2 null  <||@
  Comment 114 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 114 40 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 121 42 r13|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 128 44 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 133 46 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 138 48 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 143 50 stack:56|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 152 52 JUMP ~[] destination: B2 -> B51  <||@
  Comment 152 block B51 null  <||@
  Comment 152 620 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 152 622 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 155 624 BRANCH trueDestinationProbability: 0.9989929363705994 condition: < trueDestination: B51 -> B52 falseDestination: B51 -> B92  <||@
  Comment 161 block B52 null  <||@
  Comment 161 626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 628 CMP rcx|DWORD y: -2 size: DWORD  <||@
  Comment 164 630 BRANCH trueDestinationProbability: 0.009242564066160308 condition: < trueDestination: B52 -> B92 falseDestination: B52 -> B54  <||@
  Comment 170 block B54 null  <||@
  Comment 170 638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 640 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:197, 5]  <||@
  Comment 170 [rbx:0, rsi:0, r8:0, r9:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 170 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 178 642 CMP (x: rdi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 180 644 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B54 -> B55 falseDestination: B54 -> B89  <||@
  Comment 186 block B55 null  <||@
  Comment 186 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 648 CMP (x: rdi|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 188 650 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B88  <||@
  Comment 194 block B56 null  <||@
  Comment 194 652 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 654 MOV [r13|QWORD + r9|DWORD[.] * 8] y: 48 size: WORD  <||@
  Comment 202 656 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 209 658 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 211 660 BRANCH trueDestinationProbability: 0.8193763792164618 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B58  <||@
  Comment 217 block B57 null  <||@
  Comment 217 662 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 664 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 220 666 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 223 668 r11|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 226 670 JUMP ~[] destination: B57 -> B78  <||@
  Comment 226 block B78 null  <||@
  Comment 226 834 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 226 836 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:256, 5]  <||@
  Comment 226 [rbx:0, r8:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 226 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 230 838 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 232 840 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B86 falseDestination: B78 -> B80  <||@
  Comment 238 block B80 null  <||@
  Comment 238 848 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 238 850 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 241 852 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B80 -> B86 falseDestination: B80 -> B82  <||@
  Comment 247 block B82 null  <||@
  Comment 247 860 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 862 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 255 864 rsi|DWORD = SUB (x: rsi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 258 866 CMP (x: rcx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 260 868 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B82 -> B86 falseDestination: B82 -> B84  <||@
  Comment 266 block B84 null  <||@
  Comment 266 876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 266 878 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 269 880 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 272 882 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B84 -> B86 falseDestination: B84 -> B87  <||@
  Comment 278 block B87 null  <||@
  Comment 278 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 900 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 282 902 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 282 904 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 282 906 rdi|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 285 908 rsi|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 288 910 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 291 912 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 296 914 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 301 916 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 306 918 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 306 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 312 920 r11|DWORD = ADD (x: stack:84|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 322 922 r13|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 325 926 JUMP ~[] destination: B87 -> B116  <||@
  Comment 325 block B116 null  <||@
  Comment 325 1244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 325 508 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 330 1246 r14|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 334 1248 NULLCHECK [r12|QWORD[*] + r14|DWORD[.] * 8] state [bci:8]  <||@
  Comment 334 [rsi:0, r14:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |- 
     stack:   |r13|DWORD     |    <||@
  Comment 334 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 338 1250 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 338 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 348 1252 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 352 1254 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B116 -> B117 falseDestination: B116 -> B123  <||@
  Comment 358 block B123 null  <||@
  Comment 358 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 358 1324 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 366 1326 rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 372 1328 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 374 1330 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B123 -> B124 falseDestination: B123 -> B126  <||@
  Comment 380 block B126 null  <||@
  Comment 380 1346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1348 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 384 1350 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 388 1352 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 395 1354 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B126 -> B127 falseDestination: B126 -> B131  <||@
  Comment 401 block B127 null  <||@
  Comment 401 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 401 1358 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 406 1360 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 409 1362 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 412 1364 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 415 1366 r8|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 421 1368 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 424 1370 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B127 -> B131 falseDestination: B127 -> B129  <||@
  Comment 430 block B129 null  <||@
  Comment 430 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 1380 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 434 1382 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 442 1384 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 450 1386 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 458 1388 AMD64PREFETCH ~[rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 466 1390 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 470 1392 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 477 1394 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 477 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 484 1396 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 484 1398 stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 489 1400 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 492 1402 JUMP ~[] destination: B129 -> B132  <||@
  Comment 492 block B132 null  <||@
  Comment 492 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 492 1428 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 495 1430 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 502 1432 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 505 1434 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 509 1436 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B132 -> B151 falseDestination: B132 -> B134  <||@
  Comment 515 block B134 null  <||@
  Comment 515 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 515 1444 r10|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 520 1446 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 524 1448 rcx|QWORD[*] = LEA [r10|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 532 1450 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 536 1452 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 539 1458 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 546 1454 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B134 -> B139 falseDestination: B134 -> B137  <||@
  Comment 552 block B139 null  <||@
  Comment 552 1484 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 552 1486 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 556 1488 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 559 1490 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B139 -> B142 falseDestination: B139 -> B141  <||@
  Comment 565 block B141 null  <||@
  Comment 565 1496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 565 1498 xmm0|V128_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 571 1500 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 577 1502 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 581 1504 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 584 1506 JUMP ~[] destination: B141 -> B142  <||@
  Comment 584 block B142 null  <||@
  Comment 584 1508 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 584 1510 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 588 1512 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 591 1514 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B142 -> B145 falseDestination: B142 -> B144  <||@
  Comment 597 block B144 null  <||@
  Comment 597 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 597 1522 xmm0|V64_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 603 1524 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 609 1526 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 613 1528 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 616 1530 JUMP ~[] destination: B144 -> B145  <||@
  Comment 616 block B145 null  <||@
  Comment 616 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 616 1534 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 620 1536 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 623 1538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B145 -> B148 falseDestination: B145 -> B147  <||@
  Comment 629 block B147 null  <||@
  Comment 629 1544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 629 1546 xmm0|V32_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 635 1548 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 641 1550 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 645 1552 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 648 1554 JUMP ~[] destination: B147 -> B148  <||@
  Comment 648 block B148 null  <||@
  Comment 648 1556 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 648 1558 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 654 1560 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 657 1562 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B148 -> B151 falseDestination: B148 -> B150  <||@
  Comment 663 block B150 null  <||@
  Comment 663 1568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 1570 rcx|DWORD = MOVSX [rcx|QWORD[*] + r11|QWORD * 2] size: DWORD  <||@
  Comment 668 1572 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 673 1574 JUMP ~[] destination: B150 -> B151  <||@
  Comment 673 block B151 null  <||@
  Comment 673 1576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 673 1578 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 676 1580 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 679 1582 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B151 -> B152 falseDestination: B151 -> B171  <||@
  Comment 685 block B171 null  <||@
  Comment 685 1722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 685 1724 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 689 1726 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 693 1728 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 697 1730 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B171 -> B172 falseDestination: B171 -> B173  <||@
  Comment 703 block B173 null  <||@
  Comment 703 1752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 1754 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 707 1756 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 714 1758 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 714 1762 JUMP ~[] destination: B173 -> B174  <||@
  Comment 714 block B174 null  <||@
  Comment 714 1764 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 714 1760 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 714 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 724 1766 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 727 1768 rcx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 734 1770 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 737 1772 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 737 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 744 1774 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 748 1776 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 751 1778 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 755 1780 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 758 1782 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 767 12  <||@
  Comment 777 block B152 null  <||@
  Comment 777 1584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 777 1586 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 782 1588 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 785 1590 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 789 1592 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 792 1594 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B152 -> B153 falseDestination: B152 -> B154  <||@
  Comment 798 block B153 null  <||@
  Comment 798 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 1598 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 805 1600 JUMP ~[] destination: B153 -> B157  <||@
  Comment 805 block B157 null  <||@
  Comment 805 1624 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 805 1626 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 809 1628 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 812 1630 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B157 -> B160 falseDestination: B157 -> B159  <||@
  Comment 818 block B159 null  <||@
  Comment 818 1636 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 818 1638 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 822 1640 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 828 1642 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 832 1644 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 835 1646 JUMP ~[] destination: B159 -> B160  <||@
  Comment 835 block B160 null  <||@
  Comment 835 1648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 835 1650 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 839 1652 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 842 1654 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B160 -> B163 falseDestination: B160 -> B162  <||@
  Comment 848 block B162 null  <||@
  Comment 848 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 1662 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 852 1664 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 858 1666 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 862 1668 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 865 1670 JUMP ~[] destination: B162 -> B163  <||@
  Comment 865 block B163 null  <||@
  Comment 865 1672 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 865 1674 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 869 1676 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 872 1678 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B163 -> B166 falseDestination: B163 -> B165  <||@
  Comment 878 block B165 null  <||@
  Comment 878 1684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 878 1686 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 882 1688 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 888 1690 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 892 1692 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 895 1694 JUMP ~[] destination: B165 -> B166  <||@
  Comment 895 block B166 null  <||@
  Comment 895 1696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 895 1698 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 898 1700 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 901 1702 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B166 -> B171 falseDestination: B166 -> B168  <||@
  Comment 907 block B168 null  <||@
  Comment 907 1708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 907 1710 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 912 1712 JUMP ~[] destination: B168 -> B171  <||@
  Comment 917 block B3 null  <||@
  Comment 917 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 917 56 rdi|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 924 58 r14|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 931 60 r13|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 934 62 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 939 64 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 944 66 rdx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 949 68 stack:64|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 958 70 JUMP ~[] destination: B3 -> B9  <||@
  Comment 958 block B9 null  <||@
  Comment 958 148 [] = LABEL numbPhis: 7 align: false label: ?  <||@
  Comment 958 150 CMP rcx|DWORD y: 8 size: DWORD  <||@
  Comment 961 152 BRANCH trueDestinationProbability: 0.9952842720510096 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B50  <||@
  Comment 967 block B10 null  <||@
  Comment 967 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 967 156 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:43, 5]  <||@
  Comment 967 [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 967 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 971 158 rax|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:43, 5]  <||@
  Comment 971 [rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 971 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 979 160 r9|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 987 162 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 992 164 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 996 166 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 999 168 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1002 170 BRANCH trueDestinationProbability: 0.446653665387163 condition: > trueDestination: B10 -> B11 falseDestination: B10 -> B29  <||@
  Comment 1008 block B29 null  <||@
  Comment 1008 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1008 358 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1011 360 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 1017 block B31 null  <||@
  Comment 1017 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1017 372 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1020 374 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33  <||@
  Comment 1026 block B33 null  <||@
  Comment 1026 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1026 386 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1029 388 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1032 390 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B35  <||@
  Comment 1038 block B35 null  <||@
  Comment 1038 400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1038 402 r10|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1044 404 CMP (x: rdx|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1047 406 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B38  <||@
  Comment 1053 block B38 null  <||@
  Comment 1053 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1053 426 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1053 428 r10|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 430 rax|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1059 432 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1064 434 rsi|QWORD = LEA [r10|QWORD[*] + rdx|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1069 436 stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1073 438 rdx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1076 440 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1076 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1082 442 rdx|DWORD = ADD (x: stack:72|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1090 444 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 1094 446 CMP (x: rcx|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 1098 452 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1103 448 BRANCH trueDestinationProbability: 1.3347570742128223E-4 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B44  <||@
  Comment 1109 block B44 null  <||@
  Comment 1109 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 532 CMP (x: r9|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1112 534 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B44 -> B45 falseDestination: B44 -> B48  <||@
  Comment 1118 block B45 null  <||@
  Comment 1118 536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1118 538 rdi|DWORD = INC rdx|DWORD size: DWORD  <||@
  Comment 1122 540 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1125 542 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B45 -> B46 falseDestination: B45 -> B47  <||@
  Comment 1131 block B46 null  <||@
  Comment 1131 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1131 546 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1136 548 MOV [rbx|QWORD[.] + rdx|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1143 550 MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 1150 552 rdi|DWORD = LEA [rdx|DWORD + 2] size: DWORD  <||@
  Comment 1153 554 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1156 558 JUMP ~[] destination: B46 -> B116  <||@
  Comment 1161 block B58 null  <||@
  Comment 1161 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1161 674 r11|DWORD = SUB (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1167 676 rcx|DWORD = NEG rcx|DWORD size: DWORD  <||@
  Comment 1169 678 r9|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1172 680 rcx|QWORD = DEC r9|QWORD size: QWORD  <||@
  Comment 1178 682 CMP (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1181 684 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B64  <||@
  Comment 1187 block B64 null  <||@
  Comment 1187 732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 734 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1192 736 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1197 738 JUMP ~[] destination: B64 -> B65  <||@
  Comment 1197 block B65 null  <||@
  Comment 1197 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1197 742 CMP (x: rbp|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1200 744 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1206 block B67 null  <||@
  Comment 1206 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1206 756 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1209 758 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B70  <||@
  Comment 1215 block B70 null  <||@
  Comment 1215 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1215 778 CMP r9|QWORD y: 1 size: QWORD  <||@
  Comment 1219 780 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1225 block B72 null  <||@
  Comment 1225 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 790 rsi|QWORD[.] = LEA [rbx|QWORD[.] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1230 792 rdx|QWORD = LEA [r9|QWORD - 2] size: QWORD  <||@
  Comment 1234 794 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1237 796 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1243 block B74 null  <||@
  Comment 1243 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1243 806 xmm0|V32_WORD = A od: SIMD<48,48> oe: WORD  <||@
  Comment 1243 {DataSection[0x0]}  <||@
  Comment 1252 808 J (address: [rsi|QWORD[.]], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1256 810 rdx|QWORD = MOVE input: long[2|0x2]  <||@
  Comment 1263 812 JUMP ~[] destination: B74 -> B75  <||@
  Comment 1263 block B75 null  <||@
  Comment 1263 814 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1263 816 CMP (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1266 818 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B75 -> B76 falseDestination: B75 -> B77  <||@
  Comment 1272 block B77 null  <||@
  Comment 1272 826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1272 828 MOV [rsi|QWORD[.]] y: 48 size: WORD  <||@
  Comment 1277 830 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1281 832 JUMP ~[] destination: B77 -> B78  <||@
  Comment 1286 block B154 null  <||@
  Comment 1286 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1286 1604 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1290 1606 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1297 1608 JUMP ~[] destination: B154 -> B155  <||@
  Comment 1297 block B155 loop 1 depth 1 header:1709|LoopBegin  <||@
  Comment 1297 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1312 1612 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1318 1614 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 1322 1616 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1325 1618 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B155 -> B157 falseDestination: B155 -> B155  <||@
  Comment 1332 block B137 loop 0 depth 1 header:1646|LoopBegin  <||@
  Comment 1332 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1344 1470 xmm0|V256_WORD = H [rcx|QWORD[*] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1350 1472 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1356 1474 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1360 1476 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1363 1478 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B139 falseDestination: B137 -> B137  <||@
  Comment 1370 block B117 null  <||@
  Comment 1370 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1370 1258 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1373 1260 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B117 -> B118 falseDestination: B117 -> B119  <||@
  Comment 1379 block B119 null  <||@
  Comment 1379 1268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1379 1270 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1383 1272 rdx|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1387 1274 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1391 1276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B119 -> B120 falseDestination: B119 -> B121  <||@
  Comment 1397 block B121 null  <||@
  Comment 1397 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1397 1296 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1401 1298 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1408 1300 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1408 1302 JUMP ~[] destination: B121 -> B122  <||@
  Comment 1408 block B122 null  <||@
  Comment 1408 1304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1408 1306 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1411 1308 rdx|QWORD = MOV [r10|QWORD + 168] size: QWORD  <||@
  Comment 1418 1310 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1421 1312 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1421 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1428 1314 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1428 {NarrowOop[char[0]{}]}  <||@
  Comment 1435 1316 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1439 1318 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1442 1320 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1451 12  <||@
  Comment 1461 block B131 null  <||@
  Comment 1461 1410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1461 1406 stack:40|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1466 1412 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1466 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1476 1414 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1479 1416 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1482 1418 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1487 1420 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1490 1422 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1490 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1495 [stack:72, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1496 1424 JUMP ~[] destination: B131 -> B132  <||@
  Comment 1501 block B11 null  <||@
  Comment 1501 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 174 stack:72|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1505 176 CMP (x: r9|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1508 178 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B11 -> B12 falseDestination: B11 -> B28  <||@
  Comment 1514 block B12 null  <||@
  Comment 1514 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1514 182 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1517 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14  <||@
  Comment 1523 block B14 null  <||@
  Comment 1523 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 196 rsi|DWORD = SUB (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1527 198 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1530 200 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 1536 block B16 null  <||@
  Comment 1536 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1536 212 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1541 214 rsi|DWORD = SUB (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1546 216 CMP (x: r11|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 1549 218 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1555 block B18 null  <||@
  Comment 1555 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1555 228 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1559 230 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1564 232 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1569 234 rsi|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1572 236 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1575 238 rbp|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 1578 240 rdi|QWORD = LEA [rsi|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1583 242 rsi|QWORD = LEA [rdx|QWORD[*] + r11|DWORD * 2 + 16] size: QWORD  <||@
  Comment 1588 244 rdx|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 1591 246 stack:96|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1596 248 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1596 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1602 250 r13|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1607 252 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1612 254 MOV [rbx|QWORD[.] + r13|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 1620 256 r13|DWORD = INC r13|DWORD size: DWORD  <||@
  Comment 1623 258 r10|DWORD = ADD (x: stack:84|DWORD, y: stack:40|DWORD) size: DWORD  <||@
  Comment 1633 260 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1636 262 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B18 -> B26 falseDestination: B18 -> B20  <||@
  Comment 1642 block B20 null  <||@
  Comment 1642 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1642 270 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1647 272 r11|DWORD = SUB (x: r11|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 1652 274 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1655 276 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B20 -> B26 falseDestination: B20 -> B22  <||@
  Comment 1661 block B22 null  <||@
  Comment 1661 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1661 284 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1665 286 rax|DWORD = SUB (x: rax|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1668 288 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1671 290 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B22 -> B26 falseDestination: B22 -> B24  <||@
  Comment 1677 block B24 null  <||@
  Comment 1677 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1677 298 r9|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1682 300 r9|DWORD = SUB (x: r9|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1685 302 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1688 304 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B27  <||@
  Comment 1694 block B27 null  <||@
  Comment 1694 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1694 320 r8|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 322 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 324 rbx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1699 326 rdi|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1702 328 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1705 330 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1708 332 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1713 334 rsi|QWORD = LEA [rbx|QWORD[*] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1718 336 stack:76|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1723 338 stack:80|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1728 340 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1728 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 1734 342 r13|DWORD = ADD (x: stack:76|DWORD, y: stack:80|DWORD) size: DWORD  <||@
  Comment 1744 346 JUMP ~[] destination: B27 -> B116  <||@
  Comment 1749 block B71 null  <||@
  Comment 1749 782 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1749 784 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1753 786 JUMP ~[] destination: B71 -> B78  <||@
  Comment 1758 block B59 null  <||@
  Comment 1758 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 688 rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 1763 690 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1768 692 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1773 694 rsi|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1776 696 rdx|QWORD = MOV rdi|DWORD size: DWORD  <||@
  Comment 1778 698 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1781 700 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B59 -> B60 falseDestination: B59 -> B63  <||@
  Comment 1787 block B60 null  <||@
  Comment 1787 702 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1787 704 CMP (x: rdi|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1789 706 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B65 falseDestination: B60 -> B62  <||@
  Comment 1800 block B73 null  <||@
  Comment 1800 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1800 800 rdx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1807 802 JUMP ~[] destination: B73 -> B75  <||@
  Comment 1812 block B76 null  <||@
  Comment 1812 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1812 822 rcx|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 1816 824 JUMP ~[] destination: B76 -> B78  <||@
  Comment 1821 block B172 null  <||@
  Comment 1821 1732 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1821 1734 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1824 1736 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1824 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1834 1738 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1839 1740 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1844 1742 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 1844 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1849 [r14:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 1850 1744 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1853 1746 rax|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1856 1750 JUMP ~[] destination: B172 -> B174  <||@
  Comment 1861 block B86 null  <||@
  Comment 1861 890 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1861 844 rsi|DWORD = MOVE input: int[-190305|0xfffffffffffd189f]  <||@
  Comment 1866 892 MOV (x: [r15|QWORD + 668], y: rsi|DWORD) size: DWORD  <||@
  Comment 1873 894 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1880 896 DEOPT info [bci:256, 5]  <||@
  Comment 1880 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1885 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:940) [bci: 256, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1886 block B92 null  <||@
  Comment 1886 954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1886 950 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1889 956 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1889 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1889 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1897 958 CMP (x: rdi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1899 960 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B92 -> B93 falseDestination: B92 -> B183  <||@
  Comment 1905 block B93 null  <||@
  Comment 1905 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1905 964 r10|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD state [bci:283, 5]  <||@
  Comment 1905 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 1905 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1913 966 CMP (x: r10|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 1916 968 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B182  <||@
  Comment 1922 block B94 null  <||@
  Comment 1922 970 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1922 972 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1925 974 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B94 -> B95 falseDestination: B94 -> B181  <||@
  Comment 1931 block B95 null  <||@
  Comment 1931 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1931 978 CMP stack:36|DWORD y: 2 size: DWORD  <||@
  Comment 1936 980 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B95 -> B96 falseDestination: B95 -> B97  <||@
  Comment 1942 block B97 null  <||@
  Comment 1942 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1942 990 r11|DWORD = DEC stack:36|DWORD size: DWORD  <||@
  Comment 1950 992 rax|DWORD = ADD (x: r11|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1955 994 CMP (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1958 996 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B97 -> B98 falseDestination: B97 -> B180  <||@
  Comment 1964 block B98 null  <||@
  Comment 1964 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1964 1000 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4e429140 encoding: base: 0 shift: 3  <||@
  Comment 1968 1002 rsi|DWORD = MOVSX [r8|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1974 1004 MOV (x: [r13|QWORD + r9|DWORD[.] * 8], y: rsi|DWORD) size: WORD  <||@
  Comment 1980 1006 MOV [r14|QWORD + r9|DWORD[.] * 8] y: 46 size: WORD  <||@
  Comment 1987 1008 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 1990 1010 rsi|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1994 1012 CMP (x: rsi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1996 1014 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B98 -> B102 falseDestination: B98 -> B100  <||@
  Comment 2002 block B100 null  <||@
  Comment 2002 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2002 1022 rdi|DWORD = SUB (x: r10|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 2008 1024 CMP (x: rbp|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2010 1026 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B100 -> B102 falseDestination: B100 -> B103  <||@
  Comment 2016 block B103 null  <||@
  Comment 2016 1040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2016 1042 stack:36|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2020 1044 stack:84|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2025 1046 r8|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2025 1048 rdx|QWORD[*] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2028 1050 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2031 1052 r11|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2034 1054 rdi|QWORD = LEA [r8|QWORD[*] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2039 1056 rsi|QWORD = LEA [rdx|QWORD[*] + rbp|DWORD * 2 + 16] size: QWORD  <||@
  Comment 2044 1058 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 2047 1060 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2047 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2053 1062 rax|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2057 1064 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2062 1066 MOV [rbx|QWORD[.] + rax|DWORD * 2 + 16] y: 69 size: WORD  <||@
  Comment 2069 1068 r10|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 2075 1070 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 2080 1076 rsi|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 2084 1072 BRANCH trueDestinationProbability: 0.9016620498614958 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B107  <||@
  Comment 2090 block B104 null  <||@
  Comment 2090 1074 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2090 1078 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2093 1080 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106  <||@
  Comment 2099 block B105 null  <||@
  Comment 2099 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2099 1084 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 2107 1086 rax|DWORD = LEA [rax|DWORD + 2] size: DWORD  <||@
  Comment 2110 1088 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2115 1090 rdx|DWORD = SUB (x: rdx|DWORD, ~y: stack:40|DWORD) size: DWORD  <||@
  Comment 2119 1092 rcx|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2121 1094 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2124 1096 JUMP ~[] destination: B105 -> B108  <||@
  Comment 2124 block B108 null  <||@
  Comment 2124 1116 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2124 1118 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2127 1120 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B108 -> B109 falseDestination: B108 -> B178  <||@
  Comment 2133 block B109 null  <||@
  Comment 2133 1122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2133 1124 r8|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2139 1126 CMP rcx|DWORD y: 10 size: DWORD  <||@
  Comment 2142 1128 BRANCH trueDestinationProbability: 0.9778393351800554 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111  <||@
  Comment 2148 block B110 null  <||@
  Comment 2148 1130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2148 1132 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2151 1134 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2157 1136 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 2160 1140 JUMP ~[] destination: B110 -> B116  <||@
  Comment 2165 block B30 null  <||@
  Comment 2165 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2165 364 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2170 366 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2173 368 JUMP ~[] destination: B30 -> B37  <||@
  Comment 2173 block B37 null  <||@
  Comment 2173 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2173 418 MOV (x: [r15|QWORD + 668], y: rax|DWORD) size: DWORD  <||@
  Comment 2180 420 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2187 422 DEOPT info [bci:43, 5]  <||@
  Comment 2187 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2192 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:912) [bci: 43, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2193 block B32 null  <||@
  Comment 2193 376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2193 378 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2198 380 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2201 382 JUMP ~[] destination: B32 -> B37  <||@
  Comment 2203 block B34 null  <||@
  Comment 2203 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2203 394 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2208 396 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2211 398 JUMP ~[] destination: B34 -> B37  <||@
  Comment 2213 block B36 null  <||@
  Comment 2213 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2213 410 rax|DWORD = MOVE input: int[-159073|0xfffffffffffd929f]  <||@
  Comment 2218 412 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2221 414 JUMP ~[] destination: B36 -> B37  <||@
  Comment 2223 block B120 null  <||@
  Comment 2223 1278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2223 1280 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2223 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2233 1282 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2238 1284 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2243 1286 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:8]  <||@
  Comment 2243 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2248 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2249 1288 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2249 1290 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 2249 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 2259 1292 JUMP ~[] destination: B120 -> B122  <||@
  Comment 2264 block B50 null  <||@
  Comment 2264 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2264 594 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2267 596 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2270 598 rdx|QWORD = MOVE stack:64|QWORD moveKind: QWORD  <||@
  Comment 2275 600 rsi|QWORD = LEA [rdi|QWORD + 16] size: QWORD  <||@
  Comment 2279 602 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 2282 604 stack:56|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2287 608 r14|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2290 610 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2293 612 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2297 614 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2302 616 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2307 618 JUMP ~[] destination: B50 -> B51  <||@
  Comment 2312 block B107 null  <||@
  Comment 2312 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2312 1112 rcx|DWORD = DEC stack:40|DWORD size: DWORD  <||@
  Comment 2318 1114 JUMP ~[] destination: B107 -> B108  <||@
  Comment 2323 block B13 null  <||@
  Comment 2323 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2323 188 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2328 190 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2333 192 JUMP ~[] destination: B13 -> B37  <||@
  Comment 2338 block B15 null  <||@
  Comment 2338 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2338 204 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2343 206 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2348 208 JUMP ~[] destination: B15 -> B37  <||@
  Comment 2353 block B17 null  <||@
  Comment 2353 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 222 rax|DWORD = MOVE input: int[-133729|0xfffffffffffdf59f]  <||@
  Comment 2358 224 JUMP ~[] destination: B17 -> B37  <||@
  Comment 2363 block B26 null  <||@
  Comment 2363 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2363 312 MOV [r15|QWORD + 668] y: -148065 size: DWORD  <||@
  Comment 2374 314 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2381 316 DEOPT info [bci:145, 5]  <||@
  Comment 2381 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2386 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:925) [bci: 145, duringCall: false, rethrow: false]
              |0                  |1             |2          |3               |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r13|DWORD  |stack:40|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2387 block B4 null  <||@
  Comment 2387 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2387 74 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2390 76 CMP [r9|DWORD[.] * 8 + 12] y: 0 size: DWORD state [bci:0]  <||@
  Comment 2390 [rbx:0, r8:0, r9:0, stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2390 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2399 78 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 2405 block B6 null  <||@
  Comment 2405 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2405 90 MOV [r9|DWORD[.] * 8 + 16] y: 45 size: WORD  <||@
  Comment 2416 92 CMP stack:40|DWORD y: 1 size: DWORD  <||@
  Comment 2421 94 BRANCH trueDestinationProbability: 0.8238954719320615 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 2427 block B7 null  <||@
  Comment 2427 96 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2427 98 r14|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2434 100 r13|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2441 102 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2446 104 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2451 106 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2456 108 stack:56|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2465 114 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2470 116 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2474 118 JUMP ~[] destination: B7 -> B51  <||@
  Comment 2479 block B111 null  <||@
  Comment 2479 1142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2479 1144 CMP (x: rsi|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 2482 1146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B177  <||@
  Comment 2488 block B112 null  <||@
  Comment 2488 1148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2488 1150 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2492 1152 CMP rcx|DWORD y: 100 size: DWORD  <||@
  Comment 2495 1154 BRANCH trueDestinationProbability: 0.625 condition: < trueDestination: B112 -> B113 falseDestination: B112 -> B114  <||@
  Comment 2501 block B113 null  <||@
  Comment 2501 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2501 1158 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2503 1160 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2508 1162 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2510 1164 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2513 1166 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2516 1168 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2522 1170 rax|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2527 1172 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2529 1174 rax|DWORD = ADD (x: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2531 1176 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2533 1178 rax|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2536 1180 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2542 1184 JUMP ~[] destination: B113 -> B116  <||@
  Comment 2547 block B102 null  <||@
  Comment 2547 1032 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2547 1034 MOV [r15|QWORD + 668] y: -209761 size: DWORD  <||@
  Comment 2558 1036 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2565 1038 DEOPT info [bci:306, 5]  <||@
  Comment 2565 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2570 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:945) [bci: 306, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2571 block B114 null  <||@
  Comment 2571 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2571 1188 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2574 1190 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B114 -> B115 falseDestination: B114 -> B176  <||@
  Comment 2580 block B115 null  <||@
  Comment 2580 1192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2580 1194 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2582 1196 rdx|DWORD = MOVE input: int[1374389535|0x51eb851f]  <||@
  Comment 2587 1198 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2589 1200 rdx|DWORD = SAR rdx|DWORD y: 5 size: DWORD  <||@
  Comment 2592 1202 rax|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2595 1204 MOV (x: [rbx|QWORD[.] + r10|DWORD * 2 + 16], y: rax|DWORD) size: WORD  <||@
  Comment 2601 1206 rax|DWORD = IMUL rdx|DWORD y: 100 size: DWORD  <||@
  Comment 2604 1208 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 2606 1210 rax|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2608 1212 rdx|DWORD = MOVE input: int[1717986919|0x66666667]  <||@
  Comment 2613 1214 (highResult: rdx|DWORD, lowResult: rax|DWORD) = IMUL (highX: -, lowX: rax|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2615 1216 rdx|DWORD = SAR rdx|DWORD y: 2 size: DWORD  <||@
  Comment 2618 1218 rsi|DWORD = SHR rcx|DWORD y: 31 size: DWORD  <||@
  Comment 2623 1220 rdx|DWORD = ADD (x: rdx|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2625 1222 rsi|DWORD = LEA [rdx|DWORD + 48] size: DWORD  <||@
  Comment 2628 1224 MOV (x: [rbx|QWORD[.] + r8|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 2634 1226 rsi|DWORD = SHL rdx|DWORD y: 3 size: DWORD  <||@
  Comment 2639 1228 rdx|DWORD = SHL rdx|DWORD size: DWORD  <||@
  Comment 2641 1230 rsi|DWORD = ADD (x: rsi|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2643 1232 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2645 1234 rsi|DWORD = LEA [rcx|DWORD + 48] size: DWORD  <||@
  Comment 2648 1236 MOV (x: [rbx|QWORD[.] + r13|DWORD * 2 + 16], y: rsi|DWORD) size: WORD  <||@
  Comment 2654 1238 r13|DWORD = LEA [r10|DWORD + 3] size: DWORD  <||@
  Comment 2658 1242 JUMP ~[] destination: B115 -> B116  <||@
  Comment 2663 block B8 null  <||@
  Comment 2663 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2663 122 rsi|DWORD = INC stack:40|DWORD size: DWORD  <||@
  Comment 2669 124 rdi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 2676 126 r14|QWORD = MOVE input: long[18|0x12]  <||@
  Comment 2683 128 r13|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2686 130 rbp|DWORD = MOVE input: int[3|0x3]  <||@
  Comment 2691 132 rax|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2696 134 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2701 136 stack:64|QWORD = MOVE input: long[3|0x3]  <||@
  Comment 2710 142 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2715 144 rcx|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2719 146 JUMP ~[] destination: B8 -> B9  <||@
  Comment 2724 block B39 null  <||@
  Comment 2724 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2724 454 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2729 456 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2734 458 rcx|DWORD = SUB (x: rcx|DWORD, ~y: stack:36|DWORD) size: DWORD  <||@
  Comment 2738 460 r10|DWORD = ADD (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2744 462 CMP (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 2747 464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B43  <||@
  Comment 2753 block B40 null  <||@
  Comment 2753 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2753 468 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 2758 470 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2761 472 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42  <||@
  Comment 2767 block B41 null  <||@
  Comment 2767 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2767 476 stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 2771 478 stack:76|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2775 480 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2778 482 r11|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2781 486 rcx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2784 488 r8|DWORD = MOVE input: int[48|0x30]  <||@
  Comment 2790 490 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2795 492 stack:104|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2800 494 - = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, r8|DWORD] [] callTarget: HotSpotMethod<Arrays.fill(char[], int, int, char)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:111, 5]  <||@
  Comment 2800 8  <||@
  Comment 2807 {HotSpotMethod<Arrays.fill(char[], int, int, char)>}  <||@
  Comment 2812 [stack:64, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:919) [bci: 111, duringCall: true, rethrow: false]
              |0  |1                  |2                |3               |4 
     locals:  |-  |stack:48|QWORD[.]  |stack:100|DWORD  |stack:76|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2813 496 r10|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 2818 498 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2823 500 MOV [rbx|QWORD[.] + r10|DWORD * 2 + 16] y: 46 size: WORD  <||@
  Comment 2831 502 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2835 504 MOV [rbx|QWORD[.] + rdi|DWORD * 2 + 16] y: 48 size: WORD  <||@
  Comment 2842 506 r13|DWORD = LEA [r10|DWORD + 2] size: DWORD  <||@
  Comment 2846 510 JUMP ~[] destination: B41 -> B116  <||@
  Comment 2851 block B96 null  <||@
  Comment 2851 982 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2851 984 r10|DWORD = MOVE input: int[-201235|0xfffffffffffceded]  <||@
  Comment 2857 986 JUMP ~[] destination: B96 -> B184  <||@
  Comment 2857 block B184 null  <||@
  Comment 2857 1838 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2857 1840 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2864 1842 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2871 1844 DEOPT info [bci:283, 5]  <||@
  Comment 2871 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2876 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:943) [bci: 283, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2877 block B124 null  <||@
  Comment 2877 1332 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2877 1334 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2883 1336 JUMP ~[] destination: B124 -> B125  <||@
  Comment 2883 block B125 null  <||@
  Comment 2883 1338 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2883 1340 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2890 1342 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2897 1344 DEOPT info [bci:8]  <||@
  Comment 2897 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2902 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |- 
     stack:   |r13|DWORD          |    <||@
  Comment 2903 block B5 null  <||@
  Comment 2903 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2903 82 MOV [r15|QWORD + 668] y: -236059 size: DWORD  <||@
  Comment 2914 84 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2921 86 DEOPT info [bci:0]  <||@
  Comment 2921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2926 [stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2927 block B176 null  <||@
  Comment 2927 1788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2927 1790 r11|DWORD = MOVE input: int[-228379|0xfffffffffffc83e5]  <||@
  Comment 2933 1792 JUMP ~[] destination: B176 -> B179  <||@
  Comment 2933 block B179 null  <||@
  Comment 2933 1806 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2933 1808 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2940 1810 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2947 1812 DEOPT info [bci:396, 5]  <||@
  Comment 2947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2952 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:960) [bci: 396, duringCall: false, rethrow: false]
              |0  |1             |2          |3          |4 
     locals:  |-  |rbx|QWORD[.]  |r10|DWORD  |rcx|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2953 block B42 null  <||@
  Comment 2953 512 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2953 514 r10|DWORD = MOVE input: int[-165659|0xfffffffffffd78e5]  <||@
  Comment 2959 518 JUMP ~[] destination: B42 -> B49  <||@
  Comment 2959 block B49 null  <||@
  Comment 2959 584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2959 524 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2964 586 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2971 588 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2978 590 DEOPT info [bci:85, 5]  <||@
  Comment 2978 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2983 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:916) [bci: 85, duringCall: false, rethrow: false]
              |0                  |1             |2          |3         |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD  |r8|DWORD  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 2984 block B43 null  <||@
  Comment 2984 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2984 522 r10|DWORD = MOVE input: int[-163355|0xfffffffffffd81e5]  <||@
  Comment 2990 526 JUMP ~[] destination: B43 -> B49  <||@
  Comment 2992 block B48 null  <||@
  Comment 2992 572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2992 574 r10|DWORD = MOVE input: int[-168987|0xfffffffffffd6be5]  <||@
  Comment 2998 576 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3003 578 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3008 582 JUMP ~[] destination: B48 -> B49  <||@
  Comment 3010 block B89 null  <||@
  Comment 3010 934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3010 936 r10|DWORD = MOVE input: int[-174363|0xfffffffffffd56e5]  <||@
  Comment 3016 938 JUMP ~[] destination: B89 -> B90  <||@
  Comment 3016 block B90 null  <||@
  Comment 3016 940 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3016 942 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3023 944 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3030 946 DEOPT info [bci:197, 5]  <||@
  Comment 3030 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3035 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:933) [bci: 197, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rdx|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 3036 block B88 null  <||@
  Comment 3036 928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3036 930 r10|DWORD = MOVE input: int[-176411|0xfffffffffffd4ee5]  <||@
  Comment 3042 932 JUMP ~[] destination: B88 -> B90  <||@
  Comment 3044 block B63 null  <||@
  Comment 3044 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3044 724 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924]  <||@
  Comment 3044 {Object[d.a@351564924]}  <||@
  Comment 3054 726 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3057 728 r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5]  <||@
  Comment 3063 730 JUMP ~[] destination: B63 -> B69  <||@
  Comment 3063 block B69 null  <||@
  Comment 3063 768 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 3063 770 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 3070 772 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 3077 774 DEOPT info [bci:229, 5]  <||@
  Comment 3077 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3082 [rbx:0, stack:80]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:936) [bci: 229, duringCall: false, rethrow: false]
              |0                  |1             |2          |3  |4 
     locals:  |stack:32|QWORD[.]  |rbx|QWORD[.]  |rbp|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:32|QWORD[.]  |-   <||@
  Comment 3083 block B106 null  <||@
  Comment 3083 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 1100 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3088 1102 MOV [r15|QWORD + 668] y: -230939 size: DWORD  <||@
  Comment 3099 1104 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3106 1106 DEOPT info [bci:363, 5]  <||@
  Comment 3106 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3111 [rbx:0, rsi:0]at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.getChars(FloatingDecimal.java:953) [bci: 363, duringCall: false, rethrow: false]
              |0             |1             |2          |3  |4 
     locals:  |rsi|QWORD[.]  |rbx|QWORD[.]  |r10|DWORD  |-  |- 
  at sun.misc.FloatingDecimal$BinaryToASCIIBuffer.toJavaFormatString(FloatingDecimal.java:301) [bci: 5, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 3112 block B182 null  <||@
  Comment 3112 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3112 1828 r10|DWORD = MOVE input: int[-198683|0xfffffffffffcf7e5]  <||@
  Comment 3118 1830 JUMP ~[] destination: B182 -> B184  <||@
  Comment 3123 block B66 null  <||@
  Comment 3123 746 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3123 748 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3133 750 r10|DWORD = MOVE input: int[-178195|0xfffffffffffd47ed]  <||@
  Comment 3139 752 JUMP ~[] destination: B66 -> B69  <||@
  Comment 3141 block B47 null  <||@
  Comment 3141 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3141 562 r10|DWORD = MOVE input: int[-171291|0xfffffffffffd62e5]  <||@
  Comment 3147 564 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3152 566 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3157 570 JUMP ~[] destination: B47 -> B49  <||@
  Comment 3162 block B177 null  <||@
  Comment 3162 1794 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3162 1796 r11|DWORD = MOVE input: int[-248859|0xfffffffffffc33e5]  <||@
  Comment 3168 1798 JUMP ~[] destination: B177 -> B179  <||@
  Comment 3173 block B180 null  <||@
  Comment 3173 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3173 1816 r10|DWORD = MOVE input: int[-213019|0xfffffffffffcbfe5]  <||@
  Comment 3179 1818 JUMP ~[] destination: B180 -> B184  <||@
  Comment 3184 block B68 null  <||@
  Comment 3184 760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3184 762 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 3194 764 r10|DWORD = MOVE input: int[-178451|0xfffffffffffd46ed]  <||@
  Comment 3200 766 JUMP ~[] destination: B68 -> B69  <||@
  Comment 3205 block B62 null  <||@
  Comment 3205 712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3205 714 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@351564924]  <||@
  Comment 3205 {Object[d.a@351564924]}  <||@
  Comment 3215 716 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3218 718 r10|DWORD = MOVE input: int[-179227|0xfffffffffffd43e5]  <||@
  Comment 3224 720 JUMP ~[] destination: B62 -> B69  <||@
  Comment 3229 block B178 null  <||@
  Comment 3229 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3229 1802 r11|DWORD = MOVE input: int[-249371|0xfffffffffffc31e5]  <||@
  Comment 3235 1804 JUMP ~[] destination: B178 -> B179  <||@
  Comment 3240 block B181 null  <||@
  Comment 3240 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3240 1822 r10|DWORD = MOVE input: int[-200219|0xfffffffffffcf1e5]  <||@
  Comment 3246 1824 JUMP ~[] destination: B181 -> B184  <||@
  Comment 3251 block B118 null  <||@
  Comment 3251 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3251 1264 r10|DWORD = MOVE input: int[-233235|0xfffffffffffc70ed]  <||@
  Comment 3257 1266 JUMP ~[] destination: B118 -> B125  <||@
  Comment 3262 block B28 null  <||@
  Comment 3262 348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3262 350 rax|DWORD = MOVE input: int[-137755|0xfffffffffffde5e5]  <||@
  Comment 3267 352 r11|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 3272 354 JUMP ~[] destination: B28 -> B37  <||@
  Comment 3277 block B183 null  <||@
  Comment 3277 1832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3277 1834 r10|DWORD = MOVE input: int[-195355|0xfffffffffffd04e5]  <||@
  Comment 3283 1836 JUMP ~[] destination: B183 -> B184  <||@
  Comment 3288 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3288 4  <||@
  Comment 3294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 3294 5  <||@
  HexCodeFile>>> <|@
end_nmethod
