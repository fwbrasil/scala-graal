begin_compilation
  name " HotSpotCompilation-8007[org.graalvm.collections.EconomicMapImpl.createHash()]"
  method "HotSpotCompilation-8007[org.graalvm.collections.EconomicMapImpl.createHash()]"
  date 1527005143699
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2079 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2117 v2118 ?309 ?370 ?13 ?210 v2120 ?295 ?647 v2122 ?1590 ?52 ?316 ?200 ?160 v2119 ?670 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2079 a2104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2079 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v1372 
=== Usages ===
a891 v892 v2121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid a1619 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1622 v1656 v1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
a2079 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1607 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid a1609 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1340615007
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1340615007]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1608 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228619
stableDimension: 0
stamp: i32 [-228619] ⇊00000000fffc82f5 ⇈00000000fffc82f5
stampKind: i32
value: int[-228619|0xfffffffffffc82f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2080 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2080  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2079 
=== Succesors ===
=== Usages ===
i2080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2079  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2080 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2121 
=== Succesors ===
next: v1376 
=== Usages ===
v28 
=== Predecessor ===
v1369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2121 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 31]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2080 
y: i27 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2080 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
i2080 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2081 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2081  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2081 i2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2081 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: i2082 
=== Usages ===
i5 
=== Predecessor ===
v1373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: i2082  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2082 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: a2083 
=== Usages ===
i5 
=== Predecessor ===
i2081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: a2083  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2083 a2087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2083 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2119 
=== Succesors ===
next: v10 
=== Usages ===
v1245 v1243 
=== Predecessor ===
i2082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2119 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
=== Inputs ===
value: a2083 
=== Succesors ===
=== Usages ===
i2062 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2083  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:448) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i263 i2062 i235 i2061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1245 v1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2083 
y: a1244 
=== Succesors ===
=== Usages ===
i2061 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2083 y: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1245 
trueValue: i88 
falseValue: i87 
=== Succesors ===
=== Usages ===
i2062 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1245 trueValue: i88 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i2062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1243 
trueValue: i88 
falseValue: i2061 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1243 trueValue: i88 falseValue: i2061  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
stamp: i32
=== Inputs ===
x: i2081 
y: i2082 
=== Succesors ===
=== Usages ===
v14 ?13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2081 y: i2082  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i75 i61 i529 i351 i276 i257 i262 i1587 a1795 a1845 v1979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
a2083 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B131" 
    successors "B5" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612931411988453077
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffffc
valueDescription: i32
=== Inputs ===
merge: v11 
values: i2062 i22 
=== Succesors ===
=== Usages ===
?13 v14 i38 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i2062 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.5530658424857884
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v16 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 533
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i5 i12 - - 
=== Succesors ===
=== Usages ===
v1360 a1716 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i5 i12 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i12 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
stamp: void
trueSuccessorProbability: 0.39168594219503233
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:538) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: j1695 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1695 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1739 
=== Usages ===
v2152 v2153 
=== Predecessor ===
v16 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1739  <|@  <|@
f <@~|@floating>@ <|@
tid v2152 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1695 
index: - 
=== Succesors ===
=== Usages ===
j1739 v1741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1695 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1739 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
=== Succesors ===
next: j1740 
=== Usages ===
j1699 v2154 v2155 a1715 v2160 v2156 v2157 v2158 v2159 
=== Predecessor ===
j1695 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2152 #next: j1740  <|@  <|@
f <@~|@floating>@ <|@
tid v2153 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1695 
index: - 
=== Succesors ===
=== Usages ===
j1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1695 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1740 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2153 
=== Succesors ===
next: v1704 
=== Usages ===
v1705 
=== Predecessor ===
j1739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2153 #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 a1845 a1795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i12 
y: i37 
=== Succesors ===
=== Usages ===
j1903 v1742 v1701 a1716 v1979 i1724 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1700 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1701 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1700 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1700  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 v104 ?210 i591 v375 i383 v449 i199 i1555 i1587 v1588 a1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1743 j1988 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1701 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1702 
=== Usages ===
=== Predecessor ===
j1740 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1701 #trueSuccessor: v1703 #falseSuccessor: v1702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid i1723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1724 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483641 - 2147483639] ⇊0000000000000007 ⇈00000000fffffff7
=== Inputs ===
x: i38 
y: i1723 
=== Succesors ===
=== Usages ===
i1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i1723  <|@  <|@
f <@~|@floating>@ <|@
tid i1693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1694 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i1724 
y: i1693 
=== Succesors ===
=== Usages ===
j1698 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1724 y: i1693  <|@  <|@
f <@~|@floating>@ <|@
tid j1698 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i1694 
=== Succesors ===
=== Usages ===
j1699 v2156 v2157 v2158 v2159 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1694  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i64
=== Inputs ===
x: j1698 
y: j1739 
=== Succesors ===
=== Usages ===
v1705 v1741 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1698 y: j1739  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1740 
y: j1699 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1740 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1705 
=== Succesors ===
trueSuccessor: v1710 
falseSuccessor: v1709 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1705 #trueSuccessor: v1710 #falseSuccessor: v1709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
v1710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
value: j1699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2152 value: j1699 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid v2156 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2156 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2156 #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2157 
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2157 #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2158 
=== Succesors ===
next: v1737 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2158 #next: v1737  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2159 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2159 #next: v1742  <|@  <|@
f <@~|@floating>@ <|@
tid v2154 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2154 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2154 value: i38 stateAfter: - lastLocationAccess: - #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid v2155 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2155 
value: j1692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2155 value: j1692 stateAfter: - lastLocationAccess: - #next: v1747  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2160 
value: v1886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2160 value: v1886 stateAfter: - lastLocationAccess: - #next: v1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1715 
=== Usages ===
=== Predecessor ===
v1747 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1715 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1739 
=== Succesors ===
next: v1717 
=== Usages ===
a1720 
=== Predecessor ===
v1714 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1739 #next: v1717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
a1715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1706  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1706 v1708 
=== Succesors ===
next: a1716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1706 v1708 #next: a1716  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1716 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v1691 i38 i47 
=== Succesors ===
next: v1719 
=== Usages ===
a1720 
=== Predecessor ===
v1707 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v1691 i38 i47 #next: v1719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
a1716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1718 
values: a1715 a1716 
=== Succesors ===
=== Usages ===
v2151 a1604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1718 values: a1715 a1716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1717 v1719 
=== Succesors ===
next: v1981 
=== Usages ===
a1720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1717 v1719 #next: v1981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1910 
=== Usages ===
j1983 
=== Predecessor ===
v1718 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i21 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 v1761 v1777 v1831 v2047 v2048 v2049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1979 
=== Succesors ===
trueSuccessor: v1908 
falseSuccessor: v1909 
=== Usages ===
=== Predecessor ===
v1981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1979 #trueSuccessor: v1908 #falseSuccessor: v1909  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v1910 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1910 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid v2151 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1720 
index: - 
=== Succesors ===
=== Usages ===
j1983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1983 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1981 
address: v2151 
=== Succesors ===
=== Usages ===
v2184 v2185 v2186 v2187 v2188 v2189 v2190 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1981 address: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid j1903 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j2035 j2017 j2023 j2027 j2031 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j2016 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2017 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2017 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483600] ⇈fffffffffffffff0
=== Inputs ===
x: j1903 
y: j2016 
=== Succesors ===
=== Usages ===
v2018 v2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid j1560 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2018 j2006 j2011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j1560 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2017 y: j1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2018 
=== Succesors ===
trueSuccessor: v1911 
falseSuccessor: v1912 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2018 #trueSuccessor: v1911 #falseSuccessor: v1912  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
v1912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B130" 
    successors "B17" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2011 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1915 
values: j1560 j2015 
=== Succesors ===
=== Usages ===
v2190 j2015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1915 values: j1560 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1914 
=== Succesors ===
next: v2056 
=== Usages ===
j2011 v1918 v1919 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1914 #next: v2056  <|@  <|@
f <@~|@floating>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2011 
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2190 
value: v2057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2190 value: v2057 stateAfter: - lastLocationAccess: - #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2011 
y: j884 
=== Succesors ===
=== Usages ===
j2006 j2011 v2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2011 y: j884  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j2015 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2017 y: j2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2020 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1920 
=== Usages ===
=== Predecessor ===
v2056 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2020 #trueSuccessor: v1918 #falseSuccessor: v1920  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1915 
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1915 #next: v1924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2006 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1923 
values: j1560 j2015 
=== Succesors ===
=== Usages ===
v2189 j2010 j2001 v2024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: j1560 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1922 v1924 
=== Succesors ===
next: v1945 
=== Usages ===
j2006 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1922 v1924 #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid j2022 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483616] ⇈fffffffffffffff0
=== Inputs ===
x: j1903 
y: j2022 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2022  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2023 
y: j2006 
=== Succesors ===
=== Usages ===
v1945 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2023 y: j2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2024 
=== Succesors ===
trueSuccessor: v1944 
falseSuccessor: v1943 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2024 #trueSuccessor: v1944 #falseSuccessor: v1943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1944 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2006 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2189 
value: v2060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1933 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2189 value: v2060 stateAfter: - lastLocationAccess: - #next: v1933  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2010 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2006 
y: j881 
=== Succesors ===
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2006 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v2055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2001 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1934 
values: j2010 j2006 
=== Succesors ===
=== Usages ===
v2188 j2005 j1995 v2028 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: j2010 j2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1933 v1948 
=== Succesors ===
next: v1951 
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1933 v1948 #next: v1951  <|@  <|@
f <@~|@floating>@ <|@
tid j2026 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2027 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2027 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483624] ⇊0000000000000008 ⇈fffffffffffffff8
=== Inputs ===
x: j1903 
y: j2026 
=== Succesors ===
=== Usages ===
v2028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2027 
y: j2001 
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2027 y: j2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2028 
=== Succesors ===
trueSuccessor: v1950 
falseSuccessor: v1949 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2028 #trueSuccessor: v1950 #falseSuccessor: v1949  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
v1950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2188 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2001 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2001  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2188 
value: v2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1936 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2188 value: v2059 stateAfter: - lastLocationAccess: - #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid j1745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2005 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2001 
y: j1745 
=== Succesors ===
=== Usages ===
j1995 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2001 y: j1745  <|@  <|@
f <@*|@fixed>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
v2053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1995 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1937 
values: j2005 j2001 
=== Succesors ===
=== Usages ===
v2187 j2000 j1984 v2032 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1937 values: j2005 j2001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1936 v1954 
=== Succesors ===
next: v1957 
=== Usages ===
j1995 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1936 v1954 #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid j2030 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2031 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483628] ⇊000000000000000c ⇈fffffffffffffffc
=== Inputs ===
x: j1903 
y: j2030 
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2030  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2031 
y: j1995 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2031 y: j1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2032 
=== Succesors ===
trueSuccessor: v1956 
falseSuccessor: v1955 
=== Usages ===
=== Predecessor ===
v1937 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2032 #trueSuccessor: v1956 #falseSuccessor: v1955  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@*|@fixed>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
v1956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2187 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1995 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1995  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2187 
value: v2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2187 value: v2058 stateAfter: - lastLocationAccess: - #next: v1939  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2000 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1995 
y: j1999 
=== Succesors ===
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1995 y: j1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1940 
values: j2000 j1995 
=== Succesors ===
=== Usages ===
v2184 j1988 v2036 j2043 v2185 v2186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1940 values: j2000 j1995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1939 v1960 
=== Succesors ===
next: v1963 
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1939 v1960 #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2034 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2035 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483631] ⇊000000000000000f
=== Inputs ===
x: j1903 
y: j2034 
=== Succesors ===
=== Usages ===
v2036 v2038 v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j1984 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2036 
=== Succesors ===
trueSuccessor: v1962 
falseSuccessor: v1961 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2036 #trueSuccessor: v1962 #falseSuccessor: v1961  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1966 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1966  <|@  <|@
f <@*|@fixed>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2047  <|@  <|@
f <@~|@floating>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2184 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1969 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2184 value: i1246 stateAfter: - lastLocationAccess: - #next: v1969  <|@  <|@
f <@~|@floating>@ <|@
tid j1988 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1692 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1692  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j1988 
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2038 
=== Succesors ===
trueSuccessor: v1968 
falseSuccessor: v1967 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2038 #trueSuccessor: v1968 #falseSuccessor: v1967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1972 
=== Usages ===
=== Predecessor ===
v1969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1972  <|@  <|@
f <@*|@fixed>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v1969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2185 <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2185 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1975 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2185 value: i1246 stateAfter: - lastLocationAccess: - #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2043 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j2042 
=== Succesors ===
=== Usages ===
v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j2043 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j2043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2040 
=== Succesors ===
trueSuccessor: v1974 
falseSuccessor: v1973 
=== Usages ===
=== Predecessor ===
v2048 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2040 #trueSuccessor: v1974 #falseSuccessor: v1973  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1978 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2186 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2186 value: i1246 stateAfter: - lastLocationAccess: - #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v2049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" "B33" "B28" "B30" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1926 v1942 v1966 v1972 v1978 
=== Succesors ===
next: a1604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1926 v1942 v1966 v1972 v1978 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1720 
=== Succesors ===
next: v903 
=== Usages ===
a900 
=== Predecessor ===
v1927 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1720 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v903 a2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2122 
value: a900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1755 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2122 value: a900 stateAfter: - lastLocationAccess: - #next: j1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1755 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1761 
=== Usages ===
j1757 
=== Predecessor ===
v903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1761  <|@  <|@
f <@~|@floating>@ <|@
tid i1756 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1757 j1774 j1828 j1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1757 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1755 
y: i1756 
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1755 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid j1760 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 v2165 v2170 v2176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2161 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1757 
index: j1760 
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1757 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2161 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j1755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2161 value: i1246 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2079  <|@  <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?803 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?295 ?806 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1861 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1541 
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1861 
index: - 
=== Succesors ===
=== Usages ===
j1865 j1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1861 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1795 a1845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 v2073 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1820 v1869 v1901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i587 i586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i207 i630 i746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v1761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" "B118" "B106" "B104" "B114" 
    successors "B36" "B129" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627900120446939723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v50 
values: i47 i75 i75 i75 i75 i75 
=== Succesors ===
=== Usages ===
?52 v54 i61 ?160 ?295 i75 ?210 ?647 ?309 ?316 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: i47 i75 i75 i75 i75 i75  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v50 
values: a891 a574 a1029 a1029 a1029 a1029 
=== Succesors ===
=== Usages ===
v2124 a574 v2123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: a891 a574 a1029 a1029 a1029 a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 25.604062034328575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v49 
=== Succesors ===
next: i2084 
=== Usages ===
i51 v57 v76 v78 v546 v547 v548 a574 v1498 v1493 v1488 v1483 v1478 v1385 v1390 v1395 v1400 v1473 v1468 v1453 v1447 v1429 v1441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v49 #next: i2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2084 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v59 
=== Usages ===
v54 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2084 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i2084  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
stamp: void
trueSuccessorProbability: 0.9609436971891705
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i2084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B127" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2085 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2085  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 552
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
v1361 v1622 i2085 i2092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
i2085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2085 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2123 
=== Succesors ===
next: v1386 
=== Usages ===
v910 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2123 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
v2124 i276 v910 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i51 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i2085 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i2085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i2085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v1382 #falseSuccessor: v1385  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2086 
=== Usages ===
a2086 
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2086  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a574 
index: i61 
=== Succesors ===
=== Usages ===
a2086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2086 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1382 
address: v2124 
=== Succesors ===
next: v67 
=== Usages ===
a918 v924 v2125 v2135 v2137 v2139 v2163 a2198 
=== Predecessor ===
v1382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1382 address: v2124 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2086  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: i32
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
i51 i51 i51 i249 i51 i51 i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:554) [bci: 91]
stamp: void
trueSuccessorProbability: 0.0026265616939192067
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
a2086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4589321076878775176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?52 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2087 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2087 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2119 
=== Succesors ===
next: v170 
=== Usages ===
v2162 v1248 v1250 v1251 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2119 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2087 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2087  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
?210 ?311 ?297 ?670 ?647 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 i47 - - - - 
=== Succesors ===
=== Usages ===
?370 ?1590 ?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 i47 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7054647516058844
=== Inputs ===
condition: v1248 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a2087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1248 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625566030427908053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619823718343303052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2087 
y: a1249 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2087 y: a1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8888016474069853
=== Inputs ===
condition: v1250 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1250 #trueSuccessor: v178 #falseSuccessor: v177  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618918819518756973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627374230700750320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v174 v176 
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v174 v176 #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a2198 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2086  <|@  <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@674f320f
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2198 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2198  <|@  <|@
tid ?1590 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1027 
stateDuring: ?1590 
=== Succesors ===
next: v198 
=== Usages ===
i589 i199 i586 
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1027 stateDuring: ?1590 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i194 
y: i201 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i194 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i194 
y: i586 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i194 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2087 
y: a1244 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2087 y: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v1390 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v1390 #falseSuccessor: v1387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B126" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v2162 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2087 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2162 
=== Succesors ===
next: v1396 
=== Usages ===
v1888 
=== Predecessor ===
v1387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2162 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2088 
y: v1887 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2088 y: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1888 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1888 #trueSuccessor: v1392 #falseSuccessor: v1395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2089 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2089  <|@  <|@
f <@~|@floating>@ <|@
tid v2163 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2086 
=== Succesors ===
=== Usages ===
v2089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2163 
=== Succesors ===
next: v2090 
=== Usages ===
v2149 
=== Predecessor ===
v1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2163 #next: v2090  <|@  <|@
f <@~|@floating>@ <|@
tid v2149 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2089 
=== Succesors ===
=== Usages ===
v2090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2090 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2149 
=== Succesors ===
next: v2068 
=== Usages ===
v1526 
=== Predecessor ===
v2089 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2149 #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2090 
y: v1518 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2090 y: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v2068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1526 
=== Succesors ===
trueSuccessor: v2067 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1526 #trueSuccessor: v2067 #falseSuccessor: v1400  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2091 
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2091  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2086 
=== Succesors ===
=== Usages ===
a2091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2091 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2125 
=== Succesors ===
next: i2092 
=== Usages ===
?1594 v2128 v2126 v2127 ?1597 ?526 ?1595 ?1591 ?384 ?1593 ?1592 ?1596 
=== Predecessor ===
v2067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2125 #next: i2092  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
i2092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.canGVN
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2126 
=== Succesors ===
next: v378 
=== Usages ===
i935 
=== Predecessor ===
a2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2126 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2092 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2092  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i935 
y: i47 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i935 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i2092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 9]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2093 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
i2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.startGVNNumber
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 10]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2127 
=== Succesors ===
next: v380 
=== Usages ===
i382 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2127 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
a2094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
?1592 ?1595 v1004 v1010 ?526 ?384 ?1591 ?1593 ?1594 v1007 v995 ?1597 v998 ?1596 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2086  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
?534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Graph$1.hashCode(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Graph.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: ?370 
values: - - 
=== Succesors ===
=== Usages ===
?384 ?1592 ?526 ?1591 ?1597 ?1596 ?1595 ?1594 ?1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?370 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
i2093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B81" 
    successors "B52" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4605414410141645045
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i2093 i528 
=== Succesors ===
=== Usages ===
?384 i590 i524 i420 ?1591 j430 i439 i439 ?1597 i454 ?1596 i466 ?1595 ?1594 i492 ?1593 i503 ?1592 i514 i587 i199 j2078 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i2093 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i47 i529 
=== Succesors ===
=== Usages ===
?384 v391 v2133 ?1591 v2134 ?526 v2136 v995 ?1597 v998 ?1596 v1001 ?1595 v1004 ?1594 v1007 ?1593 v1010 ?1592 i529 v2138 v959 v982 v2076 v2077 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i47 i529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: a2094 
=== Usages ===
i382 i383 v393 v530 v1452 v1446 v1440 v1428 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2094 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2128 
=== Succesors ===
next: a2095 
=== Usages ===
a941 v2131 v2129 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2128 #next: a2095  <|@  <|@
tid ?384 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 570
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1656 a2095 i2096 i2098 v2100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2094 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2129 
=== Succesors ===
next: i2096 
=== Usages ===
a945 v2130 a2196 a2197 
=== Predecessor ===
a2094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2129 #next: i2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2095 
=== Succesors ===
=== Usages ===
i2096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2096 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2130 
=== Succesors ===
next: v396 
=== Usages ===
v391 v982 v2076 v2077 
=== Predecessor ===
a2095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2130 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i2096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B84" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 27]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2094 
=== Succesors ===
=== Usages ===
a2097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2131 
=== Succesors ===
next: i2098 
=== Usages ===
a953 v2132 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2131 #next: i2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2097 
=== Succesors ===
=== Usages ===
i2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2098 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2132 
=== Succesors ===
next: v1430 
=== Usages ===
v959 
=== Predecessor ===
a2097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2132 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2098 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v1425 #falseSuccessor: v1428  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2099 
=== Usages ===
a2099 
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2099  <|@  <|@
f <@~|@floating>@ <|@
tid a953 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2097 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a953 
index: i383 
=== Succesors ===
=== Usages ===
a2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2099 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1425 
address: v2133 
=== Succesors ===
next: v2100 
=== Usages ===
v2150 v1270 v1256 v1258 v1260 v1262 v1264 v1266 v1268 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1425 address: v2133 #next: v2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2150 <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2099 
=== Succesors ===
=== Usages ===
v2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2099  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2150 
=== Succesors ===
next: v410 
=== Usages ===
v407 
=== Predecessor ===
a2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2150 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: v2100 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2100  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 42]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v2100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v408 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 45]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid a1255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1255 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 53]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2076 
=== Succesors ===
trueSuccessor: v1437 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2076 #trueSuccessor: v1437 #falseSuccessor: v1440  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2101 
=== Usages ===
j2101 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid a2197 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2197 
index: i383 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2197 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1437 
address: v2134 
=== Succesors ===
next: i980 
=== Usages ===
v2135 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1437 address: v2134 #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v2135 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2101 
index: a2086 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2101 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2135 
=== Succesors ===
next: v436 
=== Usages ===
i420 
=== Predecessor ===
j2101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2135 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:575) [bci: 67]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i980 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i980  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1665 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1666 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248603
stableDimension: 0
stamp: i32 [-248603] ⇊00000000fffc34e5 ⇈00000000fffc34e5
stampKind: i32
value: int[-248603|0xfffffffffffc34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 72]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid a1257 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1257 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 97]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j432 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1258 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1258 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 80]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1446 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v1443 #falseSuccessor: v1446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2102 
=== Usages ===
j2102 
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2102  <|@  <|@
f <@~|@floating>@ <|@
tid a2196 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2196 
index: i383 
=== Succesors ===
=== Usages ===
j2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2196 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2102 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v2136 
=== Succesors ===
next: j991 
=== Usages ===
v2137 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1443 address: v2136 #next: j991  <|@  <|@
f <@~|@floating>@ <|@
tid v2137 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2102 
index: a2086 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2102 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j991 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2137 
=== Succesors ===
next: v438 
=== Usages ===
j433 j432 
=== Predecessor ===
j2102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2137 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 99]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j991 
y: i431 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j991 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 100]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j432 
y: j991 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j432 y: j991  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 101]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j430 
y: j433 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 102]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j434 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
j991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1447  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid i1668 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251675
stableDimension: 0
stamp: i32 [-251675] ⇊00000000fffc28e5 ⇈00000000fffc28e5
stampKind: i32
value: int[-251675|0xfffffffffffc28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 107]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid a1259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1259 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid a941 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2094 
=== Succesors ===
=== Usages ===
v1010 v1007 v1004 v995 v998 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 115]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i447 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i447  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@69e34d68
stamp: void
targetMethod: HotSpotMethod<Fields.getBoolean(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1592 <|@
d <@d|@=== Debug Properties ===
bci: 121
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
bci: 121
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Fields.getBoolean
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1592 
=== Succesors ===
next: v452 
=== Usages ===
v449 
=== Predecessor ===
v442 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1592 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i47 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i447 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v450 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i453 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 137]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1261 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 145]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: f463 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f463  <|@  <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@adc578f
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1593 <|@
d <@d|@=== Debug Properties ===
bci: 151
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f463 <|@
d <@d|@=== Debug Properties ===
bci: 151
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v998 
stateDuring: ?1593 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
v458 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v998 stateDuring: ?1593 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 159]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
value: f463 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: f463  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 162]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i465 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i465  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
f463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 167]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1263 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 175]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: d475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d475  <|@  <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@18c77031
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1594 <|@
d <@d|@=== Debug Properties ===
bci: 181
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 588
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d475 <|@
d <@d|@=== Debug Properties ===
bci: 181
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1001 
stateDuring: ?1594 
=== Succesors ===
next: v482 
=== Usages ===
j477 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1001 stateDuring: ?1594 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:589) [bci: 188]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
value: d475 
=== Succesors ===
=== Usages ===
j478 j479 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d475  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 201]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j477 
y: i431 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j477 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 202]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j477 
y: j478 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j477 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j2078 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 203]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j479 
y: j2078 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j479 y: j2078  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 204]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j480 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
d475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 209]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1265 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 217]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i490 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i490  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@606e66c
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1595 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i490 <|@
d <@d|@=== Debug Properties ===
bci: 223
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1595 
=== Succesors ===
next: v493 
=== Usages ===
i492 
=== Predecessor ===
v485 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1595 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:593) [bci: 231]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i490 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 236]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1267 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v497 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v496 #falseSuccessor: v497  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 244]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i501 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i501  <|@  <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@75fd63c9
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1596 <|@
d <@d|@=== Debug Properties ===
bci: 250
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
bci: 250
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1007 
stateDuring: ?1596 
=== Succesors ===
next: v504 
=== Usages ===
i503 
=== Predecessor ===
v496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1007 stateDuring: ?1596 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:596) [bci: 258]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i501 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 263]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1269 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v508 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v507 #falseSuccessor: v508  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 271]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i512  <|@  <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@1df522d6
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1597 <|@
d <@d|@=== Debug Properties ===
bci: 277
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 598
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i512 <|@
d <@d|@=== Debug Properties ===
bci: 277
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1010 
stateDuring: ?1597 
=== Succesors ===
next: v515 
=== Usages ===
i514 
=== Predecessor ===
v507 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1010 stateDuring: ?1597 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:599) [bci: 285]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i512 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i512  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:601) [bci: 290]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 324]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2077 
=== Succesors ===
trueSuccessor: v1449 
falseSuccessor: v1452 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2077 #trueSuccessor: v1449 #falseSuccessor: v1452  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2103 
=== Usages ===
j2103 
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2103  <|@  <|@
f <@~|@floating>@ <|@
tid a945 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2138 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a945 
index: i383 
=== Succesors ===
=== Usages ===
j2103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a945 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2103 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1449 
address: v2138 
=== Succesors ===
next: a1021 
=== Usages ===
v2139 
=== Predecessor ===
v1449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1449 address: v2138 #next: a1021  <|@  <|@
f <@~|@floating>@ <|@
tid v2139 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2103 
index: a2086 
=== Succesors ===
=== Usages ===
a1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2103 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1021 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2139 
=== Succesors ===
next: i522 
=== Usages ===
a1022 
=== Predecessor ===
j2103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2139 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a1022 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1021 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1021  <|@  <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3e909fa1
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepHashCode0(Object)>
=== Inputs ===
arguments: a1022 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1022  <|@  <|@
tid ?1591 <|@
d <@d|@=== Debug Properties ===
bci: 338
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 605
stackSize: 1
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 - i383 - - - - - i382 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 - i383 - - - - - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
d <@d|@=== Debug Properties ===
bci: 338
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#NodeClass.deepHashCode0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1023 
stateDuring: ?1591 
=== Succesors ===
next: v525 
=== Usages ===
i524 
=== Predecessor ===
a1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1023 stateDuring: ?1591 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 341]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i522 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" "B66" "B69" "B71" "B73" "B75" "B77" "B78" "B80" "B67" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4600910810514274550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v437 
values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454 
=== Succesors ===
=== Usages ===
?526 i528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v437 values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 
=== Succesors ===
next: v1366 
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 #next: v1366  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 343
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 607
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i439 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i439 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?526 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?526 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 344]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 13
stableDimension: 0
stamp: i32 [13] ⇊000000000000000d ⇈000000000000000d
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 346]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i439 
y: i527 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i439 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 348]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i383 
y: i21 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i383 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid i1670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259355
stableDimension: 0
stamp: i32 [-259355] ⇊00000000fffc0ae5 ⇈00000000fffc0ae5
stampKind: i32
value: int[-259355|0xfffffffffffc0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1429 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid i1662 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245787
stableDimension: 0
stamp: i32 [-245787] ⇊00000000fffc3fe5 ⇈00000000fffc3fe5
stampKind: i32
value: int[-245787|0xfffffffffffc3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B58" "B63" "B83" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1654 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259355 - -241163] ⇊00000000fffc00e5 ⇈00000000fffc7ff5
valueDescription: i32
=== Inputs ===
merge: v1651 
values: i1662 i1666 i1668 i1670 
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1651 values: i1662 i1666 i1668 i1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1665 v1667 v1669 
=== Succesors ===
next: v1656 
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1665 v1667 v1669 #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?384 
actionAndReason: i1654 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?384 actionAndReason: i1654 speculation: a1619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i382 
y: i201 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i587 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i382 y: i587  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B49" "B43" "B87" 
    successors "B89" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i194 i382 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i194 i382  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i589 i590 
=== Succesors ===
=== Usages ===
i629 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i589 i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v198 v549 
=== Succesors ===
next: a2104 
=== Usages ===
i199 i591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v198 v549 #next: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2104 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v2191 
=== Usages ===
a1029 v2191 v2140 v2164 v2195 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v2191  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - i199 
=== Succesors ===
=== Usages ===
v1638 v2191 v2192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2104 
=== Succesors ===
next: a2105 
=== Usages ===
=== Predecessor ===
a2104 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2104 #next: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2105 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2122 
=== Succesors ===
next: v2192 
=== Usages ===
v2192 v2144 v2141 v2142 v2143 
=== Predecessor ===
v2191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2122 #next: v2192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2105 
=== Succesors ===
next: i2106 
=== Usages ===
=== Predecessor ===
a2105 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2105 #next: i2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2140 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
i2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2106 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2140 
=== Succesors ===
next: v1469 
=== Usages ===
v338 v255 v1221 
=== Predecessor ===
v2192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2140 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i61 
y: i21 
=== Succesors ===
=== Usages ===
v2148 v1221 v2146 v2147 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i2106 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i276 y: i2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1465 
falseSuccessor: v1468 
=== Usages ===
=== Predecessor ===
i2106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1465 #falseSuccessor: v1468  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2107 
=== Usages ===
v1242 v1219 v1200 a2107 
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2107  <|@  <|@
f <@~|@floating>@ <|@
tid a1029 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2104 
=== Succesors ===
=== Usages ===
v2147 a574 a574 a574 a574 v2148 v2146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2147 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
a2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2107 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2147 
=== Succesors ===
next: v1545 
=== Usages ===
v2177 v1586 v1826 v2145 v2194 
=== Predecessor ===
v1465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1465 address: v2147 #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2107 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1543 
=== Usages ===
=== Predecessor ===
a2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v1544 #falseSuccessor: v1543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612708208979823762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626909731634411046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2177 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2177 
=== Succesors ===
next: v1556 
=== Usages ===
v1901 
=== Predecessor ===
v1543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2177 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2108 
y: v1894 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2108 y: v1894  <|@  <|@
f <@~|@floating>@ <|@
tid i1587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1901 
trueValue: i21 
falseValue: i47 
=== Succesors ===
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1901 trueValue: i21 falseValue: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v2108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B91" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1552 
values: i47 i1587 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1552 values: i47 i1587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1556 
=== Succesors ===
next: i2109 
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1556 #next: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
i2109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2109 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2142 
=== Succesors ===
next: v341 
=== Usages ===
v1163 v1154 i351 v1053 i630 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2142 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1555 
y: i47 
=== Succesors ===
=== Usages ===
v149 v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1555 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2106 
y: i213 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2106 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v1161 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
i2109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2109 
y: i102 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2109 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i591 
y: i630 
=== Succesors ===
=== Usages ===
v2141 v1053 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i591 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i2109 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i629 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1053 
=== Succesors ===
trueSuccessor: v1470 
falseSuccessor: v1473 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1053 #trueSuccessor: v1470 #falseSuccessor: v1473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2110 
=== Usages ===
i2110 v1061 
=== Predecessor ===
v1474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i629 
index: a2105 
=== Succesors ===
=== Usages ===
v1061 i2110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i629 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2110 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2141 
=== Succesors ===
next: v1061 
=== Usages ===
i1051 i1275 
=== Predecessor ===
v1470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1470 address: v2141 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2141 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
i2110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1470 address: v2141 value: i249 stateAfter: - lastLocationAccess: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i1275 
y: i102 
=== Succesors ===
=== Usages ===
i674 i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1275 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i1051 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
x: i1051 
y: i220 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1051 y: i220  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8594248816973039
=== Inputs ===
condition: v837 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v832 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v837 #trueSuccessor: v831 #falseSuccessor: v832  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625066253664382447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612990182235902300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid i1644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269851
stableDimension: 0
stamp: i32 [-269851] ⇊00000000fffbe1e5 ⇈00000000fffbe1e5
stampKind: i32
value: int[-269851|0xfffffffffffbe1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" "B122" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2106 
y: i27 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2106 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1475 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1475 #falseSuccessor: v1478  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2109 
y: i21 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2109 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i351 
y: i102 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i351 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i207 
y: i591 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i207 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i208 
y: i21 
=== Succesors ===
=== Usages ===
v1154 i262 v2144 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i208 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i257 
y: i2109 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i257 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1154 
=== Succesors ===
trueSuccessor: v1480 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1154 #trueSuccessor: v1480 #falseSuccessor: v1483  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1161 i2111 
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i257 
y: i21 
=== Succesors ===
=== Usages ===
v1163 v2143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i257 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i2109 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i262 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1485 
falseSuccessor: v1488 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1485 #falseSuccessor: v1488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B108" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2111 
=== Usages ===
v1171 i2112 
=== Predecessor ===
v1489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i257 
index: a2105 
=== Succesors ===
=== Usages ===
v1161 i2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i257 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2111 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2144 
=== Succesors ===
next: i2112 
=== Usages ===
i1283 
=== Predecessor ===
v1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1480 address: v2144 #next: i2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i262 
index: a2105 
=== Succesors ===
=== Usages ===
i2112 v1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i262 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2112 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2143 
=== Succesors ===
next: v1161 
=== Usages ===
i1285 
=== Predecessor ===
i2111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1485 address: v2143 #next: v1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2144 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
i2112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1480 address: v2144 value: i249 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i75 
y: i88 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i75 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i263 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2143 
value: i264 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1485 address: v2143 value: i264 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2112 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2112  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i1285 
y: i88 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1285 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2111 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2111  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i235 
y: i1283 
=== Succesors ===
=== Usages ===
v104 i103 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i235 y: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i236 
y: i102 
=== Succesors ===
=== Usages ===
i675 i674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i236 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i47 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8594248816973039
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4617677755065960814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B95" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626629469646584147
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v665 
values: i103 i746 
=== Succesors ===
=== Usages ===
?647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v665 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v835 
=== Succesors ===
next: v149 
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v835 #next: v149  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i675 - - 
=== Succesors ===
=== Usages ===
v1364 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i675 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9601132384921313
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4626392691780227303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?647 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:579) [bci: 143]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2164 
=== Succesors ===
next: v1494 
=== Usages ===
v1890 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2164 #next: v1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2113 
y: v1889 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2113 y: v1889  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1890 
=== Succesors ===
trueSuccessor: v1490 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1890 #trueSuccessor: v1490 #falseSuccessor: v1493  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2114 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2145 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
a2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2114 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2145 
=== Succesors ===
next: v1200 
=== Usages ===
?316 v1200 
=== Predecessor ===
v1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2145 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1200 j1773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a2114 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1773 
=== Usages ===
=== Predecessor ===
a2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a2114 stateAfter: - lastLocationAccess: - #next: j1773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1773 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1777 
=== Usages ===
j1774 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j1774 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1773 
y: i1756 
=== Succesors ===
=== Usages ===
v2165 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1773 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1774 
index: j1760 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1774 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2165 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
j1773 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2165 value: i1246 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?318 
values: a1 i51 a2114 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a1 i51 a2114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1189
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1416319291]
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606015710131423035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B96" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v668 
values: i103 i746 
=== Succesors ===
=== Usages ===
v1873 v1824 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v836 
=== Succesors ===
next: v2115 
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v836 #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid v2195 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2115 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2195 
=== Succesors ===
next: v1499 
=== Usages ===
v2073 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2195 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2115 
y: v1889 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2115 y: v1889  <|@  <|@
tid ?670 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i674 - - 
=== Succesors ===
=== Usages ===
a1795 a1845 v1496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i674 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2073 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2073 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1783 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1783 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1799 
=== Usages ===
v2172 v2171 
=== Predecessor ===
v1495 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2171 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1783 
index: - 
=== Succesors ===
=== Usages ===
v1801 v1851 j1799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1799 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: j1800 
=== Usages ===
v2181 j1805 j1855 j1897 v2193 
=== Predecessor ===
j1783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: j1800  <|@  <|@
f <@~|@floating>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1783 
index: - 
=== Succesors ===
=== Usages ===
j1800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1800 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2172 
=== Succesors ===
next: v125 
=== Usages ===
v1839 
=== Predecessor ===
j1799 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2172 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid j1897 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1799 
y: j888 
=== Succesors ===
=== Usages ===
v1839 v1851 v1801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1799 y: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1800 
y: j1897 
=== Succesors ===
=== Usages ===
v1842 v1791 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1800 y: j1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1242 v1219 j1876 j1827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.6917462436252867
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
j1800 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 113]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1839 
=== Succesors ===
trueSuccessor: v1789 
falseSuccessor: v1790 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1839 #trueSuccessor: v1789 #falseSuccessor: v1790  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582535181112006981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1795 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1795 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1781 i37 i21 
=== Succesors ===
next: j1796 
=== Usages ===
j1796 
=== Predecessor ===
v1789 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1781 i37 i21 #next: j1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1796 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1795 
=== Succesors ===
next: v1806 
=== Usages ===
j1805 
=== Predecessor ===
a1795 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1795 #next: v1806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
j1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612502090758257414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1801 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
value: j1897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1798 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2171 value: j1897 stateAfter: - lastLocationAccess: - #next: v1798  <|@  <|@
f <@~|@floating>@ <|@
tid v2193 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1799 
index: - 
=== Succesors ===
=== Usages ===
v1798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2193 
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2193 #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1805 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1803 
values: j1799 j1796 
=== Succesors ===
=== Usages ===
v2169 v2168 a1572 v2179 v2180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1803 values: j1799 j1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1804 v1806 
=== Succesors ===
next: a1572 
=== Usages ===
j1805 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1804 v1806 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1805 
=== Succesors ===
next: j1816 
=== Usages ===
a1578 
=== Predecessor ===
v1803 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1805 #next: j1816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1816 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
=== Succesors ===
next: v1817 
=== Usages ===
v1817 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2173 #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid v2168 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2168 
value: j1816 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
j1816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2168 value: j1816 stateAfter: - lastLocationAccess: - #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: v1894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1817 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: v1894 stateAfter: - lastLocationAccess: - #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2179 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2179 value: i674 stateAfter: - lastLocationAccess: - #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2180 
value: a2107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1578 
=== Usages ===
=== Predecessor ===
v1824 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2180 value: a2107 stateAfter: - lastLocationAccess: - #next: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1578 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1572 
=== Succesors ===
next: v1579 
=== Usages ===
a1241 ?806 
=== Predecessor ===
v1826 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1572 #next: v1579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
a1578 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1578 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2148 
value: a1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1827 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2148 value: a1241 stateAfter: - lastLocationAccess: - #next: j1827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1827 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2148 
=== Succesors ===
next: v1831 
=== Usages ===
j1828 
=== Predecessor ===
v1242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2148 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid j1828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1827 
y: i1756 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1827 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2170 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1828 
index: j1760 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1828 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2170 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
j1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2170 value: i1246 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 575
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a555 
materializedValue: a1578 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a555 materializedValue: a1578  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?297 
values: a1 i51 a555 
virtualObjectMappings: ?806 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?297 values: a1 i51 a555 virtualObjectMappings: ?806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?295 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?295 #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:572) [bci: 84]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1839 
=== Succesors ===
trueSuccessor: v1840 
falseSuccessor: v1841 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1839 #trueSuccessor: v1840 #falseSuccessor: v1841  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577283490744886527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1845 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1781 i37 i21 
=== Succesors ===
next: j1846 
=== Usages ===
j1846 
=== Predecessor ===
v1840 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1781 i37 i21 #next: j1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1846 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1845 
=== Succesors ===
next: v1856 
=== Usages ===
j1855 
=== Predecessor ===
a1845 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1845 #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
j1846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607419889699361561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
value: j1897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1841 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2171 value: j1897 stateAfter: - lastLocationAccess: - #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1799 
index: - 
=== Succesors ===
=== Usages ===
v1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2181 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2181 #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1855 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1853 
values: j1799 j1846 
=== Succesors ===
=== Usages ===
v2175 v2174 a1562 v2182 v2183 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: j1799 j1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1856 
=== Succesors ===
next: a1562 
=== Usages ===
j1855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1856 #next: a1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1855 
=== Succesors ===
next: j1865 
=== Usages ===
a1568 
=== Predecessor ===
v1853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1855 #next: j1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
=== Succesors ===
next: v1866 
=== Usages ===
v1866 
=== Predecessor ===
a1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2173 #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2174 
value: j1865 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1869 
=== Usages ===
=== Predecessor ===
j1865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2174 value: j1865 stateAfter: - lastLocationAccess: - #next: v1869  <|@  <|@
f <@~|@floating>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2175 
value: v1894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2175 value: v1894 stateAfter: - lastLocationAccess: - #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2182 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2116 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2182 value: i674 stateAfter: - lastLocationAccess: - #next: a2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
a2116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2116 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2194 
=== Succesors ===
next: v1875 
=== Usages ===
v1875 
=== Predecessor ===
v1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2194 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid v2183 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2183 
value: a2116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1568 
=== Usages ===
=== Predecessor ===
a2116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2183 value: a2116 stateAfter: - lastLocationAccess: - #next: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1562 
=== Succesors ===
next: v1569 
=== Usages ===
a1218 ?803 
=== Predecessor ===
v1875 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1562 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
a1568 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid a1218 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2148 
value: a1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1876 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2148 value: a1218 stateAfter: - lastLocationAccess: - #next: j1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2148 
=== Succesors ===
next: v1880 
=== Usages ===
j1877 
=== Predecessor ===
v1219 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2148 #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid j1877 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1876 
y: i1756 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1876 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1877 
index: j1760 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1877 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2176 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
j1876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2176 value: i1246 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?803 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a551 
materializedValue: a1568 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a551 materializedValue: a1568  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: a1 i51 a551 
virtualObjectMappings: ?803 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: a1 i51 a551 virtualObjectMappings: ?803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1359
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1416319291]
stamp: void
=== Inputs ===
stateBefore: ?670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1649 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1649  <|@  <|@
f <@~|@floating>@ <|@
tid i1650 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i1648 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285723
stableDimension: 0
stamp: i32 [-285723] ⇊00000000fffba3e5 ⇈00000000fffba3e5
stampKind: i32
value: int[-285723|0xfffffffffffba3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid i1646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347419
stableDimension: 0
stamp: i32 [-347419] ⇊00000000fffab2e5 ⇈00000000fffab2e5
stampKind: i32
value: int[-347419|0xfffffffffffab2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B97" "B122" "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1636 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-347419 - -263947] ⇊00000000fffa80e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1633 
values: i1642 i1644 i1646 i1648 i1650 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1633 values: i1642 i1644 i1646 i1648 i1650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1641 v1643 v1645 v1647 v1649 
=== Succesors ===
next: v1638 
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1641 v1643 v1645 v1647 v1649 #next: v1638  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
actionAndReason: i1636 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?200 actionAndReason: i1636 speculation: a1619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1629  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237091
stableDimension: 0
stamp: i32 [-237091] ⇊00000000fffc61dd ⇈00000000fffc61dd
stampKind: i32
value: int[-237091|0xfffffffffffc61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236083
stableDimension: 0
stamp: i32 [-236083] ⇊00000000fffc65cd ⇈00000000fffc65cd
stampKind: i32
value: int[-236083|0xfffffffffffc65cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233243
stableDimension: 0
stamp: i32 [-233243] ⇊00000000fffc70e5 ⇈00000000fffc70e5
stampKind: i32
value: int[-233243|0xfffffffffffc70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B45" "B126" "B125" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1620 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-238347 - -231947] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1616 
values: i1624 i1626 i1628 i1630 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1616 values: i1624 i1626 i1628 i1630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1623 v1625 v1627 v1629 
=== Succesors ===
next: v1622 
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1623 v1625 v1627 v1629 #next: v1622  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i1620 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i1620 speculation: a1619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1915 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1915  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609673205922147754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?13 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i12 
y: i21 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@~|@floating>@ <|@
tid a1615 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1099189008
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1099189008]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1614 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229651
stableDimension: 0
stamp: i32 [-229651] ⇊00000000fffc7eed ⇈00000000fffc7eed
stampKind: i32
value: int[-229651|0xfffffffffffc7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" "B132" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1610 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-229651 - -228619] ⇊00000000fffc02e5 ⇈00000000fffcfefd
valueDescription: i32
=== Inputs ===
merge: v1606 
values: i1608 i1614 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1606 values: i1608 i1614  <|@  <|@
f <@~|@floating>@ <|@
tid a1611 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1606 
values: a1609 a1615 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1606 values: a1609 a1615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1607 v1613 
=== Succesors ===
next: v1612 
=== Usages ===
i1610 a1611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1607 v1613 #next: v1612  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 529
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1610 
speculation: a1611 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1610 speculation: a1611  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a2079 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v2117 v2118 ?309 ?370 ?13 ?210 v2120 ?295 ?647 v2122 ?1590 ?52 ?316 ?200 ?160 v2119 ?670 j1755 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2120 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2079 a2104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2079 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v1372 
=== Usages ===
a891 v892 v2121 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v1372  <|@  <|@
f <@~|@floating>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
v1372 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2079  <|@  <|@
f <@~|@floating>@ <|@
tid a1619 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1622 v1656 v1638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v892 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1369 
=== Usages ===
=== Predecessor ===
a2079 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v892 #trueSuccessor: v1371 #falseSuccessor: v1369  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1607 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1607  <|@  <|@
f <@~|@floating>@ <|@
tid a1609 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1340615007
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1340615007]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1608 <|@
result int[-228619|0xfffffffffffc82f5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -228619
stableDimension: 0
stamp: i32 [-228619] ⇊00000000fffc82f5 ⇈00000000fffc82f5
stampKind: i32
value: int[-228619|0xfffffffffffc82f5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
v1371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228619|0xfffffffffffc82f5], v2|QWORD[.]] destination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2080 
=== Usages ===
=== Predecessor ===
v1372 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2080  <|@  <|@
f <@~|@floating>@ <|@
tid v2121 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2079 
=== Succesors ===
=== Usages ===
i2080 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2079  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2080 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 30]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2121 
=== Succesors ===
next: v1376 
=== Usages ===
v28 
=== Predecessor ===
v1369 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2121 #next: v1376  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 31]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072] ⇊0000000000020000 ⇈0000000000020000
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 v255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v28 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2080 
y: i27 
=== Succesors ===
=== Usages ===
v1376 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2080 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1376 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v28 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
i2080 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v28 #trueSuccessor: v1373 #falseSuccessor: v1375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 12] y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2081 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2081  <|@  <|@
f <@~|@floating>@ <|@
tid v2117 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2081 i2084 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2081 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: i2082 
=== Usages ===
i5 
=== Predecessor ===
v1373 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: i2082  <|@  <|@
f <@~|@floating>@ <|@
tid v2118 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i2082 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2082 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.deletedEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2118 
=== Succesors ===
next: a2083 
=== Usages ===
i5 
=== Predecessor ===
i2081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2118 #next: a2083  <|@  <|@
f <@~|@floating>@ <|@
tid v2119 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a2083 a2087 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2083 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2119 
=== Succesors ===
next: v10 
=== Usages ===
v1245 v1243 
=== Predecessor ===
i2082 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2119 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid v1243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
=== Inputs ===
value: a2083 
=== Succesors ===
=== Usages ===
i2062 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2083  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:448) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i263 i2062 i235 i2061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1244 <|@
result NarrowOop[Equivalence$3@1213634123] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: Equivalence$3@1213634123
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$3;
stampKind: n -
value: NarrowOop[Equivalence$3@1213634123]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1245 v1251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1245 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2083 
y: a1244 
=== Succesors ===
=== Usages ===
i2061 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2083 y: a1244  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:450) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2061 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2061 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1245 
trueValue: i88 
falseValue: i87 
=== Succesors ===
=== Usages ===
i2062 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1245 trueValue: i88 falseValue: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i2062 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
stamp: i32 [4 - 8] ⇈000000000000000c
=== Inputs ===
condition: v1243 
trueValue: i88 
falseValue: i2061 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1243 trueValue: i88 falseValue: i2061  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
stamp: i32
=== Inputs ===
x: i2081 
y: i2082 
=== Succesors ===
=== Usages ===
v14 ?13 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i2081 y: i2082  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 16]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i22 i75 i61 i529 i351 i276 i257 i262 i1587 a1795 a1845 v1979 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
a2083 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v3|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B131" 
    successors "B5" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612931411988453077
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffffc
valueDescription: i32
=== Inputs ===
merge: v11 
values: i2062 i22 
=== Succesors ===
=== Usages ===
?13 v14 i38 i22 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v11 values: i2062 i22  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.5530658424857884
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v10 
=== Succesors ===
next: v20 
=== Usages ===
i12 v16 v23 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v10 #next: v20  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 533
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 i5 i12 - - 
=== Succesors ===
=== Usages ===
v1360 a1716 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i5 i12 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i12 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i5 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 12]
stamp: void
trueSuccessorProbability: 0.39168594219503233
=== Inputs ===
condition: v14 
=== Succesors ===
trueSuccessor: v16 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v14 #trueSuccessor: v16 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:538) [bci: 22]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: j1695 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: j1695  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1695 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1739 
=== Usages ===
v2152 v2153 
=== Predecessor ===
v16 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1739  <|@  <|@
f <@~|@floating>@ <|@
tid v2152 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1695 
index: - 
=== Succesors ===
=== Usages ===
j1739 v1741 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1695 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1739 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
=== Succesors ===
next: j1740 
=== Usages ===
j1699 v2154 v2155 a1715 v2160 v2156 v2157 v2158 v2159 
=== Predecessor ===
j1695 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2152 #next: j1740  <|@  <|@
f <@~|@floating>@ <|@
tid v2153 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1695 
index: - 
=== Succesors ===
=== Usages ===
j1740 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1695 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1740 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2153 
=== Succesors ===
next: v1704 
=== Usages ===
v1705 
=== Predecessor ===
j1739 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2153 #next: v1704  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i38 a1845 a1795 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i38 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:545) [bci: 56]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i12 
y: i37 
=== Succesors ===
=== Usages ===
j1903 v1742 v1701 a1716 v1979 i1724 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i1700 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1701 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1701 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i1700 
=== Succesors ===
=== Usages ===
v1704 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i38 y: i1700  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 72]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 v104 ?210 i591 v375 i383 v449 i199 i1555 i1587 v1588 a1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1692 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1743 j1988 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v1701 
=== Succesors ===
trueSuccessor: v1703 
falseSuccessor: v1702 
=== Usages ===
=== Predecessor ===
j1740 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1701 #trueSuccessor: v1703 #falseSuccessor: v1702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1711 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1711  <|@  <|@
f <@~|@floating>@ <|@
tid i1723 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1724 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1724 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483641 - 2147483639] ⇊0000000000000007 ⇈00000000fffffff7
=== Inputs ===
x: i38 
y: i1723 
=== Succesors ===
=== Usages ===
i1694 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i38 y: i1723  <|@  <|@
f <@~|@floating>@ <|@
tid i1693 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1694 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1694 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i32 [-2147483648 - 2147483632] ⇈00000000fffffff0
=== Inputs ===
x: i1724 
y: i1693 
=== Succesors ===
=== Usages ===
j1698 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i1724 y: i1693  <|@  <|@
f <@~|@floating>@ <|@
tid j1698 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i1694 
=== Succesors ===
=== Usages ===
j1699 v2156 v2157 v2158 v2159 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1694  <|@  <|@
f <@~|@floating>@ <|@
tid j1699 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: i64
=== Inputs ===
x: j1698 
y: j1739 
=== Succesors ===
=== Usages ===
v1705 v1741 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1698 y: j1739  <|@  <|@
f <@~|@floating>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1740 
y: j1699 
=== Succesors ===
=== Usages ===
v1711 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1740 y: j1699  <|@  <|@
f <@*|@fixed>@ <|@
tid v1711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1705 
=== Succesors ===
trueSuccessor: v1710 
falseSuccessor: v1709 
=== Usages ===
=== Predecessor ===
v1703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1705 #trueSuccessor: v1710 #falseSuccessor: v1709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = ADD (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
v1710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v1711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2152 
value: j1699 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1709 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2152 value: j1699 stateAfter: - lastLocationAccess: - #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid v2156 <|@
result [v17|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1728 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2156 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v1741 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2156 #next: v1731  <|@  <|@
f <@~|@floating>@ <|@
tid v2157 <|@
result [v17|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1731 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2157 
=== Succesors ===
next: v1734 
=== Usages ===
=== Predecessor ===
v1728 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2157 #next: v1734  <|@  <|@
f <@~|@floating>@ <|@
tid v2158 <|@
result [v17|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1734 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1734 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2158 
=== Succesors ===
next: v1737 
=== Usages ===
=== Predecessor ===
v1731 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2158 #next: v1737  <|@  <|@
f <@~|@floating>@ <|@
tid v2159 <|@
result [v17|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j1698 
index: j1739 
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1698 index: j1739  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
address: v2159 
=== Succesors ===
next: v1742 
=== Usages ===
=== Predecessor ===
v1734 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2159 #next: v1742  <|@  <|@
f <@~|@floating>@ <|@
tid v2154 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2154 
value: i38 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2154 value: i38 stateAfter: - lastLocationAccess: - #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid v2155 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1743 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2155 
value: j1692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v1742 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2155 value: j1692 stateAfter: - lastLocationAccess: - #next: v1747  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1739 
index: - 
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1739 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1886 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1747 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2160 
value: v1886 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1714 
=== Usages ===
=== Predecessor ===
v1743 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2160 value: v1886 stateAfter: - lastLocationAccess: - #next: v1714  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1714 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1715 
=== Usages ===
=== Predecessor ===
v1747 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a1715  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1715 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j1739 
=== Succesors ===
next: v1717 
=== Usages ===
a1720 
=== Predecessor ===
v1714 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1739 #next: v1717  <|@  <|@
f <@*|@fixed>@ <|@
tid v1717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
a1715 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v1704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1706  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1707 
=== Predecessor ===
v1702 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1707 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1706 v1708 
=== Succesors ===
next: a1716 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1706 v1708 #next: a1716  <|@  <|@
f <@~|@floating>@ <|@
tid v1691 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1716 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
arguments: v1691 i38 i47 
=== Succesors ===
next: v1719 
=== Usages ===
a1720 
=== Predecessor ===
v1707 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 arguments: v1691 i38 i47 #next: v1719  <|@  <|@
f <@*|@fixed>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1718 
=== Predecessor ===
a1716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v10|DWORD v11|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1720 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v1718 
values: a1715 a1716 
=== Succesors ===
=== Usages ===
v2151 a1604 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1718 values: a1715 a1716  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1717 v1719 
=== Succesors ===
next: v1981 
=== Usages ===
a1720 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1717 v1719 #next: v1981  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1981 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v1910 
=== Usages ===
j1983 
=== Predecessor ===
v1718 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid v1979 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i38 
y: i21 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i38 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i1246 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1880 v1761 v1777 v1831 v2047 v2048 v2049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1979 
=== Succesors ===
trueSuccessor: v1908 
falseSuccessor: v1909 
=== Usages ===
=== Predecessor ===
v1981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1979 #trueSuccessor: v1908 #falseSuccessor: v1909  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1926 
=== Usages ===
=== Predecessor ===
v1910 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1926  <|@  <|@
f <@*|@fixed>@ <|@
tid v1926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1908 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1913 
=== Usages ===
=== Predecessor ===
v1910 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1913  <|@  <|@
f <@~|@floating>@ <|@
tid v2151 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1720 
index: - 
=== Succesors ===
=== Usages ===
j1983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1720 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1983 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v1981 
address: v2151 
=== Succesors ===
=== Usages ===
v2184 v2185 v2186 v2187 v2188 v2189 v2190 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v1981 address: v2151  <|@  <|@
f <@~|@floating>@ <|@
tid j1903 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483632] ⇈fffffffffffffff0
=== Inputs ===
value: i38 
=== Succesors ===
=== Usages ===
j2035 j2017 j2023 j2027 j2031 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i38  <|@  <|@
f <@~|@floating>@ <|@
tid j2016 <|@
result long[-32|0xffffffffffffffe0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -32
stableDimension: 0
stamp: i64 [-32] ⇊ffffffffffffffe0 ⇈ffffffffffffffe0
stampKind: i64
value: long[-32|0xffffffffffffffe0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2017 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2017 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483680 - 2147483600] ⇈fffffffffffffff0
=== Inputs ===
x: j1903 
y: j2016 
=== Succesors ===
=== Usages ===
v2018 v2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2016  <|@  <|@
f <@~|@floating>@ <|@
tid j1560 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2018 j2006 j2011 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2018 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j1560 
=== Succesors ===
=== Usages ===
v1913 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2017 y: j1560  <|@  <|@
f <@*|@fixed>@ <|@
tid v1913 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v2018 
=== Succesors ===
trueSuccessor: v1911 
falseSuccessor: v1912 
=== Usages ===
=== Predecessor ===
v1909 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2018 #trueSuccessor: v1911 #falseSuccessor: v1912  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1922 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1922  <|@  <|@
f <@*|@fixed>@ <|@
tid v1922 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1912 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v1913 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@~|@floating>@ <|@
tid j884 <|@
result long[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashThreshold(EconomicMapImpl.java:447) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:532) [bci: 6]
rawvalue: 32
stableDimension: 0
stamp: i64 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i64
value: long[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2015 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2057 <|@
result v26|V256_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1915 
=== Predecessor ===
v1912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B130" 
    successors "B17" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2011 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1915 
values: j1560 j2015 
=== Succesors ===
=== Usages ===
v2190 j2015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1915 values: j1560 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1915 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v1914 
=== Succesors ===
next: v2056 
=== Usages ===
j2011 v1918 v1919 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v1914 #next: v2056  <|@  <|@
f <@~|@floating>@ <|@
tid v2190 <|@
result [v23|QWORD[.] + v27|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2011 
=== Succesors ===
=== Usages ===
v2056 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2011  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2056 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2190 
value: v2057 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1921 
=== Usages ===
=== Predecessor ===
v1915 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2190 value: v2057 stateAfter: - lastLocationAccess: - #next: v1921  <|@  <|@
f <@~|@floating>@ <|@
tid j2015 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2011 
y: j884 
=== Succesors ===
=== Usages ===
j2006 j2011 v2020 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2011 y: j884  <|@  <|@
f <@~|@floating>@ <|@
tid v2020 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2017 
y: j2015 
=== Succesors ===
=== Usages ===
v1921 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2017 y: j2015  <|@  <|@
f <@*|@fixed>@ <|@
tid v1921 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2020 
=== Succesors ===
trueSuccessor: v1918 
falseSuccessor: v1920 
=== Usages ===
=== Predecessor ===
v2056 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2020 #trueSuccessor: v1918 #falseSuccessor: v1920  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v27|QWORD * 1], input: v26|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v1915 
=== Succesors ===
next: v1924 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v1915 #next: v1924  <|@  <|@
f <@*|@fixed>@ <|@
tid v1924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1923 
=== Predecessor ===
v1918 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2006 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1923 
values: j1560 j2015 
=== Succesors ===
=== Usages ===
v2189 j2010 j2001 v2024 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1923 values: j1560 j2015  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1922 v1924 
=== Succesors ===
next: v1945 
=== Usages ===
j2006 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1922 v1924 #next: v1945  <|@  <|@
f <@~|@floating>@ <|@
tid j2022 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483616] ⇈fffffffffffffff0
=== Inputs ===
x: j1903 
y: j2022 
=== Succesors ===
=== Usages ===
v2024 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2022  <|@  <|@
f <@~|@floating>@ <|@
tid v2024 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2023 
y: j2006 
=== Succesors ===
=== Usages ===
v1945 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2023 y: j2006  <|@  <|@
f <@*|@fixed>@ <|@
tid v1945 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2024 
=== Succesors ===
trueSuccessor: v1944 
falseSuccessor: v1943 
=== Usages ===
=== Predecessor ===
v1923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2024 #trueSuccessor: v1944 #falseSuccessor: v1943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v24|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1944 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1948 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1948  <|@  <|@
f <@*|@fixed>@ <|@
tid v1948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v1944 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v1945 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v2189 <|@
result [v23|QWORD[.] + v29|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2006 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2006  <|@  <|@
f <@~|@floating>@ <|@
tid v2060 <|@
result v31|V128_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2189 
value: v2060 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1933 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2189 value: v2060 stateAfter: - lastLocationAccess: - #next: v1933  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.size(EconomicMapImpl.java:587) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 1]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2010 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2010 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2006 
y: j881 
=== Succesors ===
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2006 y: j881  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1934 
=== Predecessor ===
v2055 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 1], input: v31|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2001 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1934 
values: j2010 j2006 
=== Succesors ===
=== Usages ===
v2188 j2005 j1995 v2028 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1934 values: j2010 j2006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1933 v1948 
=== Succesors ===
next: v1951 
=== Usages ===
j2001 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1933 v1948 #next: v1951  <|@  <|@
f <@~|@floating>@ <|@
tid j2026 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2027 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2027 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483624] ⇊0000000000000008 ⇈fffffffffffffff8
=== Inputs ===
x: j1903 
y: j2026 
=== Succesors ===
=== Usages ===
v2028 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2026  <|@  <|@
f <@~|@floating>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2027 
y: j2001 
=== Succesors ===
=== Usages ===
v1951 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2027 y: j2001  <|@  <|@
f <@*|@fixed>@ <|@
tid v1951 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2028 
=== Succesors ===
trueSuccessor: v1950 
falseSuccessor: v1949 
=== Usages ===
=== Predecessor ===
v1934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2028 #trueSuccessor: v1950 #falseSuccessor: v1949  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1954 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1954  <|@  <|@
f <@*|@fixed>@ <|@
tid v1954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
v1950 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v1951 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v2188 <|@
result [v23|QWORD[.] + v33|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j2001 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j2001  <|@  <|@
f <@~|@floating>@ <|@
tid v2059 <|@
result v35|V64_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8,i8,i8,i8,i8>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2188 
value: v2059 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1936 
=== Usages ===
=== Predecessor ===
v1949 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2188 value: v2059 stateAfter: - lastLocationAccess: - #next: v1936  <|@  <|@
f <@~|@floating>@ <|@
tid j1745 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2005 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2005 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2001 
y: j1745 
=== Succesors ===
=== Usages ===
j1995 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2001 y: j1745  <|@  <|@
f <@*|@fixed>@ <|@
tid v1936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1937 
=== Predecessor ===
v2053 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 1], input: v35|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1995 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1937 
values: j2005 j2001 
=== Succesors ===
=== Usages ===
v2187 j2000 j1984 v2032 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1937 values: j2005 j2001  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1937 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1936 v1954 
=== Succesors ===
next: v1957 
=== Usages ===
j1995 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1936 v1954 #next: v1957  <|@  <|@
f <@~|@floating>@ <|@
tid j2030 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2031 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2031 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483628] ⇊000000000000000c ⇈fffffffffffffffc
=== Inputs ===
x: j1903 
y: j2030 
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2030  <|@  <|@
f <@~|@floating>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2031 
y: j1995 
=== Succesors ===
=== Usages ===
v1957 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2031 y: j1995  <|@  <|@
f <@*|@fixed>@ <|@
tid v1957 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2032 
=== Succesors ===
trueSuccessor: v1956 
falseSuccessor: v1955 
=== Usages ===
=== Predecessor ===
v1937 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2032 #trueSuccessor: v1956 #falseSuccessor: v1955  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v24|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1960 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1960  <|@  <|@
f <@*|@fixed>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
v1956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v1957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v2187 <|@
result [v23|QWORD[.] + v37|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1995 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1995  <|@  <|@
f <@~|@floating>@ <|@
tid v2058 <|@
result v39|V32_BYTE <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000,i8 [0] ⇈0000000000000000>
stampKind: <i8,i8,i8,i8>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2187 
value: v2058 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1939 
=== Usages ===
=== Predecessor ===
v1955 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2187 value: v2058 stateAfter: - lastLocationAccess: - #next: v1939  <|@  <|@
f <@~|@floating>@ <|@
tid j1999 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2000 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2000 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1995 
y: j1999 
=== Succesors ===
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1995 y: j1999  <|@  <|@
f <@*|@fixed>@ <|@
tid v1939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1940 
=== Predecessor ===
v2051 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v37|QWORD * 1], input: v39|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1940 
values: j2000 j1995 
=== Succesors ===
=== Usages ===
v2184 j1988 v2036 j2043 v2185 v2186 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1940 values: j2000 j1995  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1939 v1960 
=== Succesors ===
next: v1963 
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1939 v1960 #next: v1963  <|@  <|@
f <@~|@floating>@ <|@
tid j2034 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2035 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2035 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483631] ⇊000000000000000f
=== Inputs ===
x: j1903 
y: j2034 
=== Succesors ===
=== Usages ===
v2036 v2038 v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1903 y: j2034  <|@  <|@
f <@~|@floating>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j1984 
=== Succesors ===
=== Usages ===
v1963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j1984  <|@  <|@
f <@*|@fixed>@ <|@
tid v1963 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2036 
=== Succesors ===
trueSuccessor: v1962 
falseSuccessor: v1961 
=== Usages ===
=== Predecessor ===
v1940 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2036 #trueSuccessor: v1962 #falseSuccessor: v1961  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = DEC v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1966 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1966  <|@  <|@
f <@*|@fixed>@ <|@
tid v1966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2047 
=== Usages ===
=== Predecessor ===
v1963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2047  <|@  <|@
f <@~|@floating>@ <|@
tid v2184 <|@
result [v23|QWORD[.] + v41|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2047 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2184 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1969 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2184 value: i1246 stateAfter: - lastLocationAccess: - #next: v1969  <|@  <|@
f <@~|@floating>@ <|@
tid j1988 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1692 
=== Succesors ===
=== Usages ===
v2038 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1692  <|@  <|@
f <@~|@floating>@ <|@
tid v2038 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j1988 
=== Succesors ===
=== Usages ===
v1969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j1988  <|@  <|@
f <@*|@fixed>@ <|@
tid v1969 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2038 
=== Succesors ===
trueSuccessor: v1968 
falseSuccessor: v1967 
=== Usages ===
=== Predecessor ===
v2047 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2038 #trueSuccessor: v1968 #falseSuccessor: v1967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = INC v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1972 
=== Usages ===
=== Predecessor ===
v1969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1972  <|@  <|@
f <@*|@fixed>@ <|@
tid v1972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2048 
=== Usages ===
=== Predecessor ===
v1969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2048  <|@  <|@
f <@~|@floating>@ <|@
tid v2185 <|@
result [v23|QWORD[.] + v41|QWORD * 1 + 1] <|@
d <@d|@=== Debug Properties ===
displacement: 1
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2048 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2185 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1975 
=== Usages ===
=== Predecessor ===
v1967 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2185 value: i1246 stateAfter: - lastLocationAccess: - #next: v1975  <|@  <|@
f <@~|@floating>@ <|@
tid j2042 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2043 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2043 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j2042 
=== Succesors ===
=== Usages ===
v2040 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j2042  <|@  <|@
f <@~|@floating>@ <|@
tid v2040 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2035 
y: j2043 
=== Succesors ===
=== Usages ===
v1975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2035 y: j2043  <|@  <|@
f <@*|@fixed>@ <|@
tid v1975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v2040 
=== Succesors ===
trueSuccessor: v1974 
falseSuccessor: v1973 
=== Usages ===
=== Predecessor ===
v2048 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2040 #trueSuccessor: v1974 #falseSuccessor: v1973  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1978 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1978  <|@  <|@
f <@*|@fixed>@ <|@
tid v1978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v1974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2049 
=== Usages ===
=== Predecessor ===
v1975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2049  <|@  <|@
f <@~|@floating>@ <|@
tid v2186 <|@
result [v23|QWORD[.] + v41|QWORD * 1 + 2] <|@
d <@d|@=== Debug Properties ===
displacement: 2
scale: Times1
stamp: void*
=== Inputs ===
base: j1983 
index: j1984 
=== Succesors ===
=== Usages ===
v2049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1983 index: j1984  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2049 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2186 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1942 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2186 value: i1246 stateAfter: - lastLocationAccess: - #next: v1942  <|@  <|@
f <@*|@fixed>@ <|@
tid v1942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1927 
=== Predecessor ===
v2049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" "B33" "B28" "B30" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1926 v1942 v1966 v1972 v1978 
=== Succesors ===
next: a1604 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1926 v1942 v1966 v1972 v1978 #next: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1604 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 67]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a1720 
=== Succesors ===
next: v903 
=== Usages ===
a900 
=== Predecessor ===
v1927 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1720 #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v2122 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v903 a2105 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a900 <|@
result v45|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
op: Compress
stamp: n! -
=== Inputs ===
value: a1604 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2122 
value: a900 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1755 
=== Usages ===
=== Predecessor ===
a1604 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2122 value: a900 stateAfter: - lastLocationAccess: - #next: j1755  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1755 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v1761 
=== Usages ===
j1757 
=== Predecessor ===
v903 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v1761  <|@  <|@
f <@~|@floating>@ <|@
tid i1756 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1757 j1774 j1828 j1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1757 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1755 
y: i1756 
=== Succesors ===
=== Usages ===
v2161 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1755 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid j1760 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2161 v2165 v2170 v2176 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2161 <|@
result [v46|QWORD[*] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1757 
index: j1760 
=== Succesors ===
=== Usages ===
v1761 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1757 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1761 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:551) [bci: 69]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2161 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
j1755 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2161 value: i1246 stateAfter: - lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a891 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2079 
=== Succesors ===
=== Usages ===
a574 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2079  <|@  <|@
tid a551 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 0
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?309 ?803 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid a555 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@9f36f5a
hasIdentity: true
objectId: 1
stamp: a!# Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?295 ?806 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1541 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1861 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1541 
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1541  <|@  <|@
f <@~|@floating>@ <|@
tid v2173 <|@
result [v49|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1861 
index: - 
=== Succesors ===
=== Usages ===
j1865 j1816 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1861 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1781 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1795 a1845 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j888 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 27]
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1897 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1889 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1890 v2073 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1894 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1820 v1869 v1901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i220 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 255
stableDimension: 0
stamp: i32 [255] ⇊00000000000000ff ⇈00000000000000ff
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i201 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i587 i586 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i102 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i103 i207 i630 i746 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:307) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 512
stableDimension: 0
stamp: i32 [512] ⇊0000000000000200 ⇈0000000000000200
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1249 <|@
result NarrowOop[Equivalence$1@1642007824] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Equivalence$1@1642007824
stableDimension: 0
stamp: n!# Lorg/graalvm/collections/Equivalence$1;
stampKind: n -
value: NarrowOop[Equivalence$1@1642007824]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
v1761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v48|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" "B118" "B106" "B104" "B114" 
    successors "B36" "B129" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627900120446939723
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i51 <|@
result v51|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v50 
values: i47 i75 i75 i75 i75 i75 
=== Succesors ===
=== Usages ===
?52 v54 i61 ?160 ?295 i75 ?210 ?647 ?309 ?316 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: i47 i75 i75 i75 i75 i75  <|@  <|@
f <@~|@floating>@ <|@
tid a574 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a [Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v50 
values: a891 a574 a1029 a1029 a1029 a1029 
=== Succesors ===
=== Usages ===
v2124 a574 v2123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v50 values: a891 a574 a1029 a1029 a1029 a1029  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 25.604062034328575
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v49 
=== Succesors ===
next: i2084 
=== Usages ===
i51 v57 v76 v78 v546 v547 v548 a574 v1498 v1493 v1488 v1483 v1478 v1385 v1390 v1395 v1400 v1473 v1468 v1453 v1447 v1429 v1441 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v49 #next: i2084  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2084 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.totalEntries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2117 
=== Succesors ===
next: v59 
=== Usages ===
v54 
=== Predecessor ===
v50 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2117 #next: v59  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i51 
y: i2084 
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i51 y: i2084  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 79]
stamp: void
trueSuccessorProbability: 0.9609436971891705
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v55 
falseSuccessor: v57 
=== Usages ===
=== Predecessor ===
i2084 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v55 #falseSuccessor: v57  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B127" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2085 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2085  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 74
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 552
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
v1361 v1622 i2085 i2092 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
f <@~|@floating>@ <|@
tid v2123 <|@
result [v52|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a574 
index: - 
=== Succesors ===
=== Usages ===
i2085 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2085 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2123 
=== Succesors ===
next: v1386 
=== Usages ===
v910 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2123 #next: v1386  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
v2124 i276 v910 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i51 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i61 
y: i2085 
=== Succesors ===
=== Usages ===
v1386 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i61 y: i2085  <|@  <|@
f <@*|@fixed>@ <|@
tid v1386 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v910 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1385 
=== Usages ===
=== Predecessor ===
i2085 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v910 #trueSuccessor: v1382 #falseSuccessor: v1385  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction CMP (x: v53|DWORD, y: [v52|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2086 
=== Usages ===
a2086 
=== Predecessor ===
v1386 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2086  <|@  <|@
f <@~|@floating>@ <|@
tid v2124 <|@
result [v52|QWORD[.] + v53|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a574 
index: i61 
=== Succesors ===
=== Usages ===
a2086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a574 index: i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2086 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1382 
address: v2124 
=== Succesors ===
next: v67 
=== Usages ===
a918 v924 v2125 v2135 v2137 v2139 v2163 a2198 
=== Predecessor ===
v1382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1382 address: v2124 #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2086  <|@  <|@
f <@~|@floating>@ <|@
tid i75 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: i32
=== Inputs ===
x: i51 
y: i21 
=== Succesors ===
=== Usages ===
i51 i51 i51 i249 i51 i51 i263 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i51 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:554) [bci: 91]
stamp: void
trueSuccessorProbability: 0.0026265616939192067
=== Inputs ===
condition: v924 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
a2086 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v924 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v52|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD[.], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4589321076878775176
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1361 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?52 #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v52|QWORD[.]] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 94]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2087 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2087 <|@
result v56|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.strategy
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/collections/Equivalence;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2119 
=== Succesors ===
next: v170 
=== Usages ===
v2162 v1248 v1250 v1251 
=== Predecessor ===
v66 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2119 #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2087 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2087  <|@  <|@
tid ?160 <|@
d <@d|@=== Debug Properties ===
bci: 99
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 555
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - i51 - 
=== Succesors ===
=== Usages ===
?210 ?311 ?297 ?670 ?647 ?318 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - i51 -  <|@  <|@
tid ?210 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 561
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 i47 - - - - 
=== Succesors ===
=== Usages ===
?370 ?1590 ?200 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 i47 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7054647516058844
=== Inputs ===
condition: v1248 
=== Succesors ===
trueSuccessor: v168 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
a2087 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1248 #trueSuccessor: v168 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD[.], y: v56|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625566030427908053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
f <@*|@fixed>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v168 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619823718343303052
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2087 
y: a1249 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2087 y: a1249  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:391) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8888016474069853
=== Inputs ===
condition: v1250 
=== Succesors ===
trueSuccessor: v178 
falseSuccessor: v177 
=== Usages ===
=== Predecessor ===
v169 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1250 #trueSuccessor: v178 #falseSuccessor: v177  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618918819518756973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v176  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
v178 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627374230700750320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v174 v176 
=== Succesors ===
next: i194 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v174 v176 #next: i194  <|@  <|@
f <@~|@floating>@ <|@
tid a2198 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
v1027 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2086  <|@  <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@674f320f
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2198 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2198  <|@  <|@
tid ?1590 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 398
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
i194 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i194 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1027 
stateDuring: ?1590 
=== Succesors ===
next: v198 
=== Usages ===
i589 i199 i586 
=== Predecessor ===
v175 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1027 stateDuring: ?1590 #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid i586 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i194 
y: i201 
=== Succesors ===
=== Usages ===
i589 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i194 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i589 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i194 
y: i586 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i194 y: i586  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
i194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHR v58|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = XOR (x: v58|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v60|DWORD] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1391 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1391  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2087 
y: a1244 
=== Succesors ===
=== Usages ===
v1391 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2087 y: a1244  <|@  <|@
f <@*|@fixed>@ <|@
tid v1391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v1390 
falseSuccessor: v1387 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v1390 #falseSuccessor: v1387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1625 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1625  <|@  <|@
f <@~|@floating>@ <|@
tid i1626 <|@
result int[-235795|0xfffffffffffc66ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -235795
stableDimension: 0
stamp: i32 [-235795] ⇊00000000fffc66ed ⇈00000000fffc66ed
stampKind: i32
value: int[-235795|0xfffffffffffc66ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B45 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B126" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:392) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v1391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v2162 <|@
result [v56|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2087 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2087  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2162 
=== Succesors ===
next: v1396 
=== Usages ===
v1888 
=== Predecessor ===
v1387 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2162 #next: v1396  <|@  <|@
f <@~|@floating>@ <|@
tid v1887 <|@
result meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1888 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1888 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2088 
y: v1887 
=== Succesors ===
=== Usages ===
v1396 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2088 y: v1887  <|@  <|@
f <@*|@fixed>@ <|@
tid v1396 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1888 
=== Succesors ===
trueSuccessor: v1392 
falseSuccessor: v1395 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1888 #trueSuccessor: v1392 #falseSuccessor: v1395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v56|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2089 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2089  <|@  <|@
f <@~|@floating>@ <|@
tid v2163 <|@
result [v54|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2086 
=== Succesors ===
=== Usages ===
v2089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2089 <|@
result v61|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:161) [bci: 40]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2163 
=== Succesors ===
next: v2090 
=== Usages ===
v2149 
=== Predecessor ===
v1392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2163 #next: v2090  <|@  <|@
f <@~|@floating>@ <|@
tid v2149 <|@
result [v61|DWORD * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v2089 
=== Succesors ===
=== Usages ===
v2090 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v2089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2090 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: PrimarySupers:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 54]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*
=== Inputs ===
stateBefore: - 
guard: - 
address: v2149 
=== Succesors ===
next: v2068 
=== Usages ===
v1526 
=== Predecessor ===
v2089 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2149 #next: v2068  <|@  <|@
f <@~|@floating>@ <|@
tid v1518 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1526 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:162) [bci: 58]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2090 
y: v1518 
=== Succesors ===
=== Usages ===
v2068 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2090 y: v1518  <|@  <|@
f <@*|@fixed>@ <|@
tid v2068 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1526 
=== Succesors ===
trueSuccessor: v2067 
falseSuccessor: v1400 
=== Usages ===
=== Predecessor ===
v2090 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1526 #trueSuccessor: v2067 #falseSuccessor: v1400  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v54|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: [v61|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2091 
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2091  <|@  <|@
f <@~|@floating>@ <|@
tid v2125 <|@
result [v54|DWORD[.] * 8 + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2086 
=== Succesors ===
=== Usages ===
a2091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2091 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Node.nodeClass
nodeSourcePosition: at org.graalvm.compiler.graph.Node.getNodeClass(Node.java:717) [bci: 1]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Lorg/graalvm/compiler/graph/NodeClass;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2125 
=== Succesors ===
next: i2092 
=== Usages ===
?1594 v2128 v2126 v2127 ?1597 ?526 ?1595 ?1591 ?384 ?1593 ?1592 ?1596 
=== Predecessor ===
v2067 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2125 #next: i2092  <|@  <|@
f <@~|@floating>@ <|@
tid v2126 <|@
result [v63|DWORD[.] * 8 + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
i2092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2092 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.canGVN
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: ?52 
guard: - 
address: v2126 
=== Succesors ===
next: v378 
=== Usages ===
i935 
=== Predecessor ===
a2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?52 guard: - address: v2126 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid i935 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 3]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i2092 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2092  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i935 
y: i47 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i935 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:568) [bci: 6]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v376 
falseSuccessor: v377 
=== Usages ===
=== Predecessor ===
i2092 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v376 #falseSuccessor: v377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v54|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v64|DWORD = MOVZXB [v63|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v196  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B49 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 9]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2093 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2093  <|@  <|@
f <@~|@floating>@ <|@
tid v2127 <|@
result [v63|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
i2093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2093 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: NodeClass.startGVNNumber
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:569) [bci: 10]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2127 
=== Succesors ===
next: v380 
=== Usages ===
i382 
=== Predecessor ===
v377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2127 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v2128 <|@
result [v63|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2091 
=== Succesors ===
=== Usages ===
a2094 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2091  <|@  <|@
f <@~|@floating>@ <|@
tid a918 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a2086 
=== Succesors ===
=== Usages ===
?1592 ?1595 v1004 v1010 ?526 ?384 ?1591 ?1593 ?1594 v1007 v995 ?1597 v998 ?1596 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2086  <|@  <|@
tid ?370 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 395
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - - 
=== Succesors ===
=== Usages ===
?534 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - -  <|@  <|@
tid ?534 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Graph$1.hashCode(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Graph.java
sourceLine: 150
stackSize: 0
=== Inputs ===
outerFrameState: ?370 
values: - - 
=== Succesors ===
=== Usages ===
?384 ?1592 ?526 ?1591 ?1597 ?1596 ?1595 ?1594 ?1593 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?370 values: - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
i2093 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|DWORD, int[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B81" 
    successors "B52" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4605414410141645045
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i382 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i2093 i528 
=== Succesors ===
=== Usages ===
?384 i590 i524 i420 ?1591 j430 i439 i439 ?1597 i454 ?1596 i466 ?1595 ?1594 i492 ?1593 i503 ?1592 i514 i587 i199 j2078 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i2093 i528  <|@  <|@
f <@~|@floating>@ <|@
tid i383 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v381 
values: i47 i529 
=== Succesors ===
=== Usages ===
?384 v391 v2133 ?1591 v2134 ?526 v2136 v995 ?1597 v998 ?1596 v1001 ?1595 v1004 ?1594 v1007 ?1593 v1010 ?1592 i529 v2138 v959 v982 v2076 v2077 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v381 values: i47 i529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v380 
=== Succesors ===
next: a2094 
=== Usages ===
i382 i383 v393 v530 v1452 v1446 v1440 v1428 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v380 #next: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2094 <|@
result v69|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: FieldIntrospection.data
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2128 
=== Succesors ===
next: a2095 
=== Usages ===
a941 v2131 v2129 
=== Predecessor ===
v381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2128 #next: a2095  <|@  <|@
tid ?384 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 570
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1656 a2095 i2096 i2098 v2100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v2129 <|@
result [v69|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2094 
=== Succesors ===
=== Usages ===
a2095 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2095 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.offsets
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: n# [J
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2129 
=== Succesors ===
next: i2096 
=== Usages ===
a945 v2130 a2196 a2197 
=== Predecessor ===
a2094 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2129 #next: i2096  <|@  <|@
f <@~|@floating>@ <|@
tid v2130 <|@
result [v70|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2095 
=== Succesors ===
=== Usages ===
i2096 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2095  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2096 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 4]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2130 
=== Succesors ===
next: v396 
=== Usages ===
v391 v982 v2076 v2077 
=== Predecessor ===
a2095 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2130 #next: v396  <|@  <|@
f <@~|@floating>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 24]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v391 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
i2096 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v391 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v63|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v70|DWORD[.] = MOV [v69|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B84" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 27]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2097 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid v2131 <|@
result [v69|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2094 
=== Succesors ===
=== Usages ===
a2097 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2094  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2097 <|@
result v72|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fields.types
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2131 
=== Succesors ===
next: i2098 
=== Usages ===
a953 v2132 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2131 #next: i2098  <|@  <|@
f <@~|@floating>@ <|@
tid v2132 <|@
result [v72|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2097 
=== Succesors ===
=== Usages ===
i2098 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2097  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2098 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2132 
=== Succesors ===
next: v1430 
=== Usages ===
v959 
=== Predecessor ===
a2097 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2132 #next: v1430  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2098 
=== Succesors ===
=== Usages ===
v1430 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2098  <|@  <|@
f <@*|@fixed>@ <|@
tid v1430 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v959 
=== Succesors ===
trueSuccessor: v1425 
falseSuccessor: v1428 
=== Usages ===
=== Predecessor ===
i2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v959 #trueSuccessor: v1425 #falseSuccessor: v1428  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v69|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v72|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2099 
=== Usages ===
a2099 
=== Predecessor ===
v1430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2099  <|@  <|@
f <@~|@floating>@ <|@
tid a953 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [Ljava/lang/Class;
=== Inputs ===
value: a2097 
=== Succesors ===
=== Usages ===
v2133 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2097  <|@  <|@
f <@~|@floating>@ <|@
tid v2133 <|@
result [v73|QWORD[.] + v68|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a953 
index: i383 
=== Succesors ===
=== Usages ===
a2099 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a953 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2099 <|@
result v74|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: v1425 
address: v2133 
=== Succesors ===
next: v2100 
=== Usages ===
v2150 v1270 v1256 v1258 v1260 v1262 v1264 v1266 v1268 
=== Predecessor ===
v1425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1425 address: v2133 #next: v2100  <|@  <|@
f <@~|@floating>@ <|@
tid v2150 <|@
result [v74|DWORD[.] * 8 + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2099 
=== Succesors ===
=== Usages ===
v2100 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2099  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2100 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class._klass:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:89) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: true
stamp: Klass*
=== Inputs ===
stateBefore: ?384 
guard: - 
address: v2150 
=== Succesors ===
next: v410 
=== Usages ===
v407 
=== Predecessor ===
a2099 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?384 guard: - address: v2150 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.isPrimitive(HotSpotClassSubstitutions.java:90) [bci: 6]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 39]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: v2100 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: v2100  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:572) [bci: 42]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v407 
=== Succesors ===
trueSuccessor: v408 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v2100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v407 #trueSuccessor: v408 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v73|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v75|QWORD = MOV [v74|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 45]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid a1255 <|@
result NarrowOop[Class:int] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:int
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:int]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1255 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1255  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:573) [bci: 50]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1256 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v414 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1256 #trueSuccessor: v413 #falseSuccessor: v414  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 53]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1442 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1442  <|@  <|@
f <@~|@floating>@ <|@
tid v2076 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1442 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2076 
=== Succesors ===
trueSuccessor: v1437 
falseSuccessor: v1440 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2076 #trueSuccessor: v1437 #falseSuccessor: v1440  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2101 
=== Usages ===
j2101 
=== Predecessor ===
v1442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2101  <|@  <|@
f <@~|@floating>@ <|@
tid a2197 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2134 <|@
result [v76|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2197 
index: i383 
=== Succesors ===
=== Usages ===
j2101 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2197 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2101 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1437 
address: v2134 
=== Succesors ===
next: i980 
=== Usages ===
v2135 
=== Predecessor ===
v1437 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1437 address: v2134 #next: i980  <|@  <|@
f <@~|@floating>@ <|@
tid v2135 <|@
result [v77|QWORD + v54|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2101 
index: a2086 
=== Succesors ===
=== Usages ===
i980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2101 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i980 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getInt(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v2135 
=== Succesors ===
next: v436 
=== Usages ===
i420 
=== Predecessor ===
j2101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2135 #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid i420 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:575) [bci: 67]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i980 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i980  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i980 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v67|DWORD, ~y: [v77|QWORD + v54|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B56 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getInt(Fields.java:353) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:574) [bci: 59]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1665 
=== Usages ===
=== Predecessor ===
v1440 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1665  <|@  <|@
f <@~|@floating>@ <|@
tid i1666 <|@
result int[-248603|0xfffffffffffc34e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -248603
stableDimension: 0
stamp: i32 [-248603] ⇊00000000fffc34e5 ⇈00000000fffc34e5
stampKind: i32
value: int[-248603|0xfffffffffffc34e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248603|0xfffffffffffc34e5]] destination: B58 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 72]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v415 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid a1257 <|@
result NarrowOop[Class:long] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:long
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:long]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1258 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1258 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1257 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1257  <|@  <|@
f <@~|@floating>@ <|@
tid i431 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 97]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
j432 j478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:576) [bci: 77]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1258 
=== Succesors ===
trueSuccessor: v423 
falseSuccessor: v424 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1258 #trueSuccessor: v423 #falseSuccessor: v424  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 80]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1448 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1448  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1448 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v982 
=== Succesors ===
trueSuccessor: v1443 
falseSuccessor: v1446 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v982 #trueSuccessor: v1443 #falseSuccessor: v1446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2102 
=== Usages ===
j2102 
=== Predecessor ===
v1448 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2102  <|@  <|@
f <@~|@floating>@ <|@
tid a2196 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2136 <|@
result [v79|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a2196 
index: i383 
=== Succesors ===
=== Usages ===
j2102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2196 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2102 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1443 
address: v2136 
=== Succesors ===
next: j991 
=== Usages ===
v2137 
=== Predecessor ===
v1443 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1443 address: v2136 #next: j991  <|@  <|@
f <@~|@floating>@ <|@
tid v2137 <|@
result [v80|QWORD + v54|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2102 
index: a2086 
=== Succesors ===
=== Usages ===
j991 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2102 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j991 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getLong(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2137 
=== Succesors ===
next: v438 
=== Usages ===
j433 j432 
=== Predecessor ===
j2102 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2137 #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j430 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j432 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 99]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j991 
y: i431 
=== Succesors ===
=== Usages ===
j433 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j991 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j433 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 100]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j432 
y: j991 
=== Succesors ===
=== Usages ===
j434 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j432 y: j991  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 101]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j430 
y: j433 
=== Succesors ===
=== Usages ===
i435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j430 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid i435 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 102]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j434 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
j991 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v79|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v80|QWORD + v54|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SHR v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = XOR (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = ADD (x: v82|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV v85|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD] destination: B61 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1447 
=== Usages ===
=== Predecessor ===
v1448 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1447  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1667 
=== Usages ===
=== Predecessor ===
v1446 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1667  <|@  <|@
f <@~|@floating>@ <|@
tid i1668 <|@
result int[-251675|0xfffffffffffc28e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -251675
stableDimension: 0
stamp: i32 [-251675] ⇊00000000fffc28e5 ⇈00000000fffc28e5
stampKind: i32
value: int[-251675|0xfffffffffffc28e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1667 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1447 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251675|0xfffffffffffc28e5]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 107]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid a1259 <|@
result NarrowOop[Class:boolean] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:boolean
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:boolean]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1260 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1260 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1259 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1259  <|@  <|@
f <@~|@floating>@ <|@
tid a941 <|@
result v87|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 18]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a Lorg/graalvm/compiler/core/common/Fields;
=== Inputs ===
value: a2094 
=== Succesors ===
=== Usages ===
v1010 v1007 v1004 v995 v998 v1001 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:579) [bci: 112]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1260 
=== Succesors ===
trueSuccessor: v442 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1260 #trueSuccessor: v442 #falseSuccessor: v443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 115]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i447 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i447  <|@  <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@69e34d68
stamp: void
targetMethod: HotSpotMethod<Fields.getBoolean(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1592 <|@
d <@d|@=== Debug Properties ===
bci: 121
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i447 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i447 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 121
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Fields.getBoolean
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v995 
stateDuring: ?1592 
=== Succesors ===
next: v452 
=== Usages ===
v449 
=== Predecessor ===
v442 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v995 stateDuring: ?1592 #next: v452  <|@  <|@
f <@~|@floating>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i447 
y: i47 
=== Succesors ===
=== Usages ===
v452 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i447 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:581) [bci: 128]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v449 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v449 #trueSuccessor: v450 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B66 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
f <@~|@floating>@ <|@
tid i453 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 7
stableDimension: 0
stamp: i32 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i454 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i454 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:582) [bci: 131]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i453 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i453  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 134]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA [v67|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD] destination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 137]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@~|@floating>@ <|@
tid a1261 <|@
result NarrowOop[Class:float] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:float
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:float]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1262 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1261 
=== Succesors ===
=== Usages ===
v460 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1261  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:584) [bci: 142]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1262 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v459 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1262 #trueSuccessor: v458 #falseSuccessor: v459  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 145]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: f463 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: f463  <|@  <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f32
signature: [Ljdk.vm.ci.meta.JavaType;@adc578f
stamp: void
targetMethod: HotSpotMethod<Fields.getFloat(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1593 <|@
d <@d|@=== Debug Properties ===
bci: 151
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 585
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
f463 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid f463 <|@
result v90|SINGLE <|@
d <@d|@=== Debug Properties ===
bci: 151
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f32
targetMethod: Direct#Fields.getFloat
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v998 
stateDuring: ?1593 
=== Succesors ===
next: v467 
=== Usages ===
i465 
=== Predecessor ===
v458 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v998 stateDuring: ?1593 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Float.floatToRawIntBits(float) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 159]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
value: f463 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: f463  <|@  <|@
f <@~|@floating>@ <|@
tid i466 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586) [bci: 162]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i465 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i465  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
f463 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v90|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = VMOVD v90|SINGLE <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v91|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD] destination: B69 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 167]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v460 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid a1263 <|@
result NarrowOop[Class:double] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:double
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:double]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1263 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1263  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:587) [bci: 172]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1264 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1264 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 175]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: d475 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: d475  <|@  <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: f64
signature: [Ljdk.vm.ci.meta.JavaType;@18c77031
stamp: void
targetMethod: HotSpotMethod<Fields.getDouble(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1594 <|@
d <@d|@=== Debug Properties ===
bci: 181
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 588
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
d475 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid d475 <|@
result v93|DOUBLE <|@
d <@d|@=== Debug Properties ===
bci: 181
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: f64
targetMethod: Direct#Fields.getDouble
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1001 
stateDuring: ?1594 
=== Succesors ===
next: v482 
=== Usages ===
j477 
=== Predecessor ===
v470 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1001 stateDuring: ?1594 #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
result v94|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Double.doubleToRawLongBits(double) [bci: -1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:589) [bci: 188]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
value: d475 
=== Succesors ===
=== Usages ===
j478 j479 
=== Predecessor ===
- >@ <|@
instruction <@Reinterpret|@org.graalvm.compiler.nodes.calc.ReinterpretNode>@ value: d475  <|@  <|@
f <@~|@floating>@ <|@
tid j478 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 201]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 4294967295] ⇈00000000ffffffff
=== Inputs ===
x: j477 
y: i431 
=== Succesors ===
=== Usages ===
j479 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j477 y: i431  <|@  <|@
f <@~|@floating>@ <|@
tid j479 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 202]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j477 
y: j478 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: j477 y: j478  <|@  <|@
f <@~|@floating>@ <|@
tid j2078 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:578) [bci: 92]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i382 
=== Succesors ===
=== Usages ===
j480 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i382  <|@  <|@
f <@~|@floating>@ <|@
tid j480 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 203]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
=== Inputs ===
x: j479 
y: j2078 
=== Succesors ===
=== Usages ===
i481 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j479 y: j2078  <|@  <|@
f <@~|@floating>@ <|@
tid i481 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:590) [bci: 204]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32
=== Inputs ===
value: j480 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j480  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
d475 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v93|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = VMOVQ v93|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = SHR v94|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = XOR (x: v94|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = ADD (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV v98|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 209]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid a1265 <|@
result NarrowOop[Class:short] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:short
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:short]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1266 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1266 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1265 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1265  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:591) [bci: 214]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1266 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1266 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 217]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i490 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i490  <|@  <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-32768 - 32767]
signature: [Ljdk.vm.ci.meta.JavaType;@606e66c
stamp: void
targetMethod: HotSpotMethod<Fields.getShort(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1595 <|@
d <@d|@=== Debug Properties ===
bci: 223
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 592
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i490 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i490 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 223
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-32768 - 32767]
targetMethod: Direct#Fields.getShort
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1004 
stateDuring: ?1595 
=== Succesors ===
next: v493 
=== Usages ===
i492 
=== Predecessor ===
v485 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1004 stateDuring: ?1595 #next: v493  <|@  <|@
f <@~|@floating>@ <|@
tid i492 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:593) [bci: 231]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i490 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i490  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i490 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v100|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 236]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid a1267 <|@
result NarrowOop[Class:char] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:char
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:char]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1268 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1267 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1267  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:594) [bci: 241]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1268 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v497 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1268 #trueSuccessor: v496 #falseSuccessor: v497  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 244]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i501 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i501  <|@  <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [0 - 65535] ⇈000000000000ffff
signature: [Ljdk.vm.ci.meta.JavaType;@75fd63c9
stamp: void
targetMethod: HotSpotMethod<Fields.getChar(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1596 <|@
d <@d|@=== Debug Properties ===
bci: 250
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 595
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i501 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i501 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 250
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [0 - 65535] ⇈000000000000ffff
targetMethod: Direct#Fields.getChar
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1007 
stateDuring: ?1596 
=== Succesors ===
next: v504 
=== Usages ===
i503 
=== Predecessor ===
v496 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1007 stateDuring: ?1596 #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:596) [bci: 258]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i501 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i501  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 263]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v509 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v509  <|@  <|@
f <@~|@floating>@ <|@
tid a1269 <|@
result NarrowOop[Class:byte] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: Class:byte
stableDimension: 0
stamp: n!# Ljava/lang/Class;
stampKind: n -
value: NarrowOop[Class:byte]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2099 
y: a1269 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a2099 y: a1269  <|@  <|@
f <@*|@fixed>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:597) [bci: 268]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v1270 
=== Succesors ===
trueSuccessor: v507 
falseSuccessor: v508 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1270 #trueSuccessor: v507 #falseSuccessor: v508  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 271]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i512 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i512  <|@  <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32 [-128 - 127]
signature: [Ljdk.vm.ci.meta.JavaType;@1df522d6
stamp: void
targetMethod: HotSpotMethod<Fields.getByte(Object, int)>
=== Inputs ===
arguments: a941 a918 i383 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a941 a918 i383  <|@  <|@
tid ?1597 <|@
d <@d|@=== Debug Properties ===
bci: 277
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 598
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i382 i383 - - - - - 
=== Succesors ===
=== Usages ===
i512 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i382 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i512 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 277
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32 [-128 - 127]
targetMethod: Direct#Fields.getByte
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1010 
stateDuring: ?1597 
=== Succesors ===
next: v515 
=== Usages ===
i514 
=== Predecessor ===
v507 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1010 stateDuring: ?1597 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid i514 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:599) [bci: 285]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i512 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i512  <|@  <|@
f <@*|@fixed>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i512 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v104|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:601) [bci: 290]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
v508 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 324]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1454 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1454  <|@  <|@
f <@~|@floating>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getLong(Fields.java:358) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:577) [bci: 86]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i383 
y: i2096 
=== Succesors ===
=== Usages ===
v1454 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i383 y: i2096  <|@  <|@
f <@*|@fixed>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2077 
=== Succesors ===
trueSuccessor: v1449 
falseSuccessor: v1452 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2077 #trueSuccessor: v1449 #falseSuccessor: v1452  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2103 
=== Usages ===
j2103 
=== Predecessor ===
v1454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2103  <|@  <|@
f <@~|@floating>@ <|@
tid a945 <|@
result v106|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getCount(Fields.java:82) [bci: 1]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 21]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a# [J
=== Inputs ===
value: a2095 
=== Succesors ===
=== Usages ===
v2138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2095  <|@  <|@
f <@~|@floating>@ <|@
tid v2138 <|@
result [v106|QWORD[.] + v68|DWORD * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: a945 
index: i383 
=== Succesors ===
=== Usages ===
j2103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a945 index: i383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2103 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: long
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: v1449 
address: v2138 
=== Succesors ===
next: a1021 
=== Usages ===
v2139 
=== Predecessor ===
v1449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1449 address: v2138 #next: a1021  <|@  <|@
f <@~|@floating>@ <|@
tid v2139 <|@
result [v107|QWORD + v54|DWORD[.] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j2103 
index: a2086 
=== Succesors ===
=== Usages ===
a1021 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2103 index: a2086  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1021 <|@
result v108|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n -
=== Inputs ===
stateBefore: - 
guard: - 
address: v2139 
=== Succesors ===
next: i522 
=== Usages ===
a1022 
=== Predecessor ===
j2103 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2139 #next: i522  <|@  <|@
f <@~|@floating>@ <|@
tid a1022 <|@
result v109|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at sun.misc.Unsafe.getObject(Object, long) [bci: -1]
at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 36]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a -
=== Inputs ===
value: a1021 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1021  <|@  <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3e909fa1
stamp: void
targetMethod: HotSpotMethod<NodeClass.deepHashCode0(Object)>
=== Inputs ===
arguments: a1022 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1022  <|@  <|@
tid ?1591 <|@
d <@d|@=== Debug Properties ===
bci: 338
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: true
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 605
stackSize: 1
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 - i383 - - - - - i382 
=== Succesors ===
=== Usages ===
i522 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 - i383 - - - - - i382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i522 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 338
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
polymorphic: false
stamp: i32
targetMethod: Direct#NodeClass.deepHashCode0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1023 
stateDuring: ?1591 
=== Succesors ===
next: v525 
=== Usages ===
i524 
=== Predecessor ===
a1021 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1023 stateDuring: ?1591 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 341]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i522 
=== Succesors ===
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i382 y: i522  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
i522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [v106|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = MOV [v107|QWORD + v54|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v109|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: v67|DWORD 
locals: v63|DWORD[.] v66|QWORD[.] - v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" "B66" "B69" "B71" "B73" "B75" "B77" "B78" "B80" "B67" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4600910810514274550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i439 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v437 
values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454 
=== Succesors ===
=== Usages ===
?526 i528 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v437 values: i420 i435 i382 i466 i481 i492 i503 i514 i382 i524 i454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 
=== Succesors ===
next: v1366 
=== Usages ===
i439 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v436 v438 v455 v467 v482 v493 v504 v515 v516 v525 v533 #next: v1366  <|@  <|@
tid ?526 <|@
d <@d|@=== Debug Properties ===
bci: 343
code: ResolvedJavaMethodBytecode<NodeClass.valueNumber(Node)>
duringCall: false
localsSize: 9
locksSize: 0
rethrowException: false
sourceFile: NodeClass.java
sourceLine: 607
stackSize: 0
=== Inputs ===
outerFrameState: ?534 
values: a2091 a918 i439 i383 - - - - - 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?534 values: a2091 a918 i439 i383 - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?526 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?526 #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i527 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 344]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rawvalue: 13
stableDimension: 0
stamp: i32 [13] ⇊000000000000000d ⇈000000000000000d
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.MulNode$$Lambda$125/271184744@39a592fe
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 346]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i439 
y: i527 
=== Succesors ===
=== Usages ===
i382 
=== Predecessor ===
- >@ <|@
instruction <@*|@org.graalvm.compiler.nodes.calc.MulNode>@ x: i439 y: i527  <|@  <|@
f <@~|@floating>@ <|@
tid i529 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 348]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i383 
y: i21 
=== Succesors ===
=== Usages ===
i383 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i383 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
loopBegin: v381 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: v63|DWORD[.] v66|QWORD[.] v112|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = IMUL v112|DWORD y: 13 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v114|DWORD] destination: B81 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1453 
=== Usages ===
=== Predecessor ===
v1454 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getObject(Fields.java:373) [bci: 35]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:604) [bci: 330]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1669 
=== Usages ===
=== Predecessor ===
v1452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1669  <|@  <|@
f <@~|@floating>@ <|@
tid i1670 <|@
result int[-259355|0xfffffffffffc0ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -259355
stableDimension: 0
stamp: i32 [-259355] ⇊00000000fffc0ae5 ⇈00000000fffc0ae5
stampKind: i32
value: int[-259355|0xfffffffffffc0ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1453 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259355|0xfffffffffffc0ae5]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v1429 
=== Usages ===
=== Predecessor ===
v1430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v1429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.core.common.Fields.getType(Fields.java:246) [bci: 5]
at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:571) [bci: 32]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1661 
=== Usages ===
=== Predecessor ===
v1428 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1661  <|@  <|@
f <@~|@floating>@ <|@
tid i1662 <|@
result int[-245787|0xfffffffffffc3fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -245787
stableDimension: 0
stamp: i32 [-245787] ⇊00000000fffc3fe5 ⇈00000000fffc3fe5
stampKind: i32
value: int[-245787|0xfffffffffffc3fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1661 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1651 
=== Predecessor ===
v1429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245787|0xfffffffffffc3fe5]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B58" "B63" "B83" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1654 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-259355 - -241163] ⇊00000000fffc00e5 ⇈00000000fffc7ff5
valueDescription: i32
=== Inputs ===
merge: v1651 
values: i1662 i1666 i1668 i1670 
=== Succesors ===
=== Usages ===
v1656 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1651 values: i1662 i1666 i1668 i1670  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1661 v1665 v1667 v1669 
=== Succesors ===
next: v1656 
=== Usages ===
i1654 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1661 v1665 v1667 v1669 #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?384 
actionAndReason: i1654 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1651 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?384 actionAndReason: i1654 speculation: a1619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:610) [bci: 354]
at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v381 
=== Succesors ===
next: v549 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v381 #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid i587 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i382 
y: i201 
=== Succesors ===
=== Usages ===
i590 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i382 y: i201  <|@  <|@
f <@~|@floating>@ <|@
tid i590 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i382 
y: i587 
=== Succesors ===
=== Usages ===
i591 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i382 y: i587  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v197 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR v67|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = XOR (x: v67|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v117|DWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B49" "B43" "B87" 
    successors "B89" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i194 i382 
=== Succesors ===
=== Usages ===
?200 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i194 i382  <|@  <|@
f <@~|@floating>@ <|@
tid i591 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v197 
values: i47 i589 i590 
=== Succesors ===
=== Usages ===
i629 i208 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v197 values: i47 i589 i590  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v196 v198 v549 
=== Succesors ===
next: a2104 
=== Usages ===
i199 i591 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v196 v198 v549 #next: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2104 <|@
result v120|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.entries
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2120 
=== Succesors ===
next: v2191 
=== Usages ===
a1029 v2191 v2140 v2164 v2195 
=== Predecessor ===
v197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2120 #next: v2191  <|@  <|@
tid ?200 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 400
stackSize: 0
=== Inputs ===
outerFrameState: ?210 
values: a1 - i199 
=== Succesors ===
=== Usages ===
v1638 v2191 v2192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?210 values: a1 - i199  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2104 
=== Succesors ===
next: a2105 
=== Usages ===
=== Predecessor ===
a2104 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2104 #next: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2105 <|@
result v121|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl.hashArray
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n# [B
=== Inputs ===
stateBefore: - 
guard: - 
address: v2122 
=== Succesors ===
next: v2192 
=== Usages ===
v2192 v2144 v2141 v2142 v2143 
=== Predecessor ===
v2191 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2122 #next: v2192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
object: a2105 
=== Succesors ===
next: i2106 
=== Usages ===
=== Predecessor ===
a2105 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?200 object: a2105 #next: i2106  <|@  <|@
f <@~|@floating>@ <|@
tid v2140 <|@
result [v120|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
i2106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2106 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2140 
=== Succesors ===
next: v1469 
=== Usages ===
v338 v255 v1221 
=== Predecessor ===
v2192 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2140 #next: v1469  <|@  <|@
f <@~|@floating>@ <|@
tid i276 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i61 
y: i21 
=== Succesors ===
=== Usages ===
v2148 v1221 v2146 v2147 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i61 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i276 
y: i2106 
=== Succesors ===
=== Usages ===
v1469 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i276 y: i2106  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1221 
=== Succesors ===
trueSuccessor: v1465 
falseSuccessor: v1468 
=== Usages ===
=== Predecessor ===
i2106 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1221 #trueSuccessor: v1465 #falseSuccessor: v1468  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD, v119|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v120|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v121|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2107 
=== Usages ===
v1242 v1219 v1200 a2107 
=== Predecessor ===
v1469 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2107  <|@  <|@
f <@~|@floating>@ <|@
tid a1029 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a2104 
=== Succesors ===
=== Usages ===
v2147 a574 a574 a574 a574 v2148 v2146 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2104  <|@  <|@
f <@~|@floating>@ <|@
tid v2147 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
a2107 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2107 <|@
result v125|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 121]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2147 
=== Succesors ===
next: v1545 
=== Usages ===
v2177 v1586 v1826 v2145 v2194 
=== Predecessor ===
v1465 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1465 address: v2147 #next: v1545  <|@  <|@
f <@~|@floating>@ <|@
tid v1586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
value: a2107 
=== Succesors ===
=== Usages ===
v1545 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a2107  <|@  <|@
f <@*|@fixed>@ <|@
tid v1545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 15]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.09999999999999998
=== Inputs ===
condition: v1586 
=== Succesors ===
trueSuccessor: v1544 
falseSuccessor: v1543 
=== Usages ===
=== Predecessor ===
a2107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1586 #trueSuccessor: v1544 #falseSuccessor: v1543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = UNCOMPRESSPOINTER (input: v120|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[.] = MOV [v124|QWORD[.] + v123|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v125|DWORD[.], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612708208979823762
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1553 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1553  <|@  <|@
f <@*|@fixed>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v1544 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626909731634411046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:141) [bci: 28]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2108 
=== Usages ===
=== Predecessor ===
v1545 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2108  <|@  <|@
f <@~|@floating>@ <|@
tid v2177 <|@
result [v125|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2108 <|@
result v126|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2177 
=== Succesors ===
next: v1556 
=== Usages ===
v1901 
=== Predecessor ===
v1543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2177 #next: v1556  <|@  <|@
f <@~|@floating>@ <|@
tid v1901 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2108 
y: v1894 
=== Succesors ===
=== Usages ===
i1587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2108 y: v1894  <|@  <|@
f <@~|@floating>@ <|@
tid i1587 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
condition: v1901 
trueValue: i21 
falseValue: i47 
=== Succesors ===
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1901 trueValue: i21 falseValue: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1552 
=== Predecessor ===
v2108 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV [v125|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v126|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B91" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1555 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1552 
values: i47 i1587 
=== Succesors ===
=== Usages ===
v1588 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1552 values: i47 i1587  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1553 v1556 
=== Succesors ===
next: i2109 
=== Usages ===
i1555 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1553 v1556 #next: i2109  <|@  <|@
f <@~|@floating>@ <|@
tid v2142 <|@
result [v121|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2105 
=== Succesors ===
=== Usages ===
i2109 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2109 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v2142 
=== Succesors ===
next: v341 
=== Usages ===
v1163 v1154 i351 v1053 i630 
=== Predecessor ===
v1552 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2142 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid v1588 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1555 
y: i47 
=== Succesors ===
=== Usages ===
v149 v125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1555 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2106 
y: i213 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2106 y: i213  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i75 
=== Succesors ===
=== Usages ===
v1161 v1061 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i75  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:519) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.7476633120338436
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v339 
falseSuccessor: v340 
=== Usages ===
=== Predecessor ===
i2109 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v339 #falseSuccessor: v340  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:520) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1474 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1474  <|@  <|@
f <@~|@floating>@ <|@
tid i630 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i2109 
y: i102 
=== Succesors ===
=== Usages ===
i629 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2109 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i629 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i591 
y: i630 
=== Succesors ===
=== Usages ===
v2141 v1053 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i591 y: i630  <|@  <|@
f <@~|@floating>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i629 
y: i2109 
=== Succesors ===
=== Usages ===
v1474 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i629 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1474 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1053 
=== Succesors ===
trueSuccessor: v1470 
falseSuccessor: v1473 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1053 #trueSuccessor: v1470 #falseSuccessor: v1473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = DEC v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND (x: v119|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2110 
=== Usages ===
i2110 v1061 
=== Predecessor ===
v1474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v2141 <|@
result [v131|DWORD + v121|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i629 
index: a2105 
=== Succesors ===
=== Usages ===
v1061 i2110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i629 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2110 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2141 
=== Succesors ===
next: v1061 
=== Usages ===
i1051 i1275 
=== Predecessor ===
v1470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1470 address: v2141 #next: v1061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1470 
address: v2141 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
i2110 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1470 address: v2141 value: i249 stateAfter: - lastLocationAccess: - #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i1275 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
i746 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid i746 <|@
result v134|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 254]
=== Inputs ===
x: i1275 
y: i102 
=== Succesors ===
=== Usages ===
i674 i675 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i1275 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i1051 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:308) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i2110 
=== Succesors ===
=== Usages ===
v837 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2110  <|@  <|@
f <@~|@floating>@ <|@
tid v837 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
x: i1051 
y: i220 
=== Succesors ===
=== Usages ===
v833 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i1051 y: i220  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8594248816973039
=== Inputs ===
condition: v837 
=== Succesors ===
trueSuccessor: v831 
falseSuccessor: v832 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v837 #trueSuccessor: v831 #falseSuccessor: v832  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVSXB [v131|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|DWORD + v121|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVZXB v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = DEC v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVSXB v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v135|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625066253664382447
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v831 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|DWORD] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612990182235902300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v836 
=== Usages ===
=== Predecessor ===
v833 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v836  <|@  <|@
f <@*|@fixed>@ <|@
tid v836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v832 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|DWORD] destination: B96 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:320) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1643 
=== Usages ===
=== Predecessor ===
v1474 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1643  <|@  <|@
f <@~|@floating>@ <|@
tid i1644 <|@
result int[-269851|0xfffffffffffbe1e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -269851
stableDimension: 0
stamp: i32 [-269851] ⇊00000000fffbe1e5 ⇈00000000fffbe1e5
stampKind: i32
value: int[-269851|0xfffffffffffbe1e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269851|0xfffffffffffbe1e5]] destination: B97 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" "B122" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1479 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1479  <|@  <|@
f <@~|@floating>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:321) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2106 
y: i27 
=== Succesors ===
=== Usages ===
v1479 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2106 y: i27  <|@  <|@
f <@*|@fixed>@ <|@
tid v1479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v255 
=== Succesors ===
trueSuccessor: v1475 
falseSuccessor: v1478 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v255 #trueSuccessor: v1475 #falseSuccessor: v1478  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1484 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i351 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:522) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i2109 
y: i21 
=== Succesors ===
=== Usages ===
i207 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i2109 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid i207 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 1073741822]
=== Inputs ===
x: i351 
y: i102 
=== Succesors ===
=== Usages ===
i208 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i351 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid i208 <|@
result v138|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32
=== Inputs ===
x: i207 
y: i591 
=== Succesors ===
=== Usages ===
i257 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i207 y: i591  <|@  <|@
f <@~|@floating>@ <|@
tid i257 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:322) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i208 
y: i21 
=== Succesors ===
=== Usages ===
v1154 i262 v2144 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i208 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1154 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i257 
y: i2109 
=== Succesors ===
=== Usages ===
v1484 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i257 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1154 
=== Succesors ===
trueSuccessor: v1480 
falseSuccessor: v1483 
=== Usages ===
=== Predecessor ===
v1475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1154 #trueSuccessor: v1480 #falseSuccessor: v1483  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = SHR v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = DEC v136|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = AND (x: v137|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SHL v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1489 
=== Usages ===
v1161 i2111 
=== Predecessor ===
v1484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1489  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v140|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 50]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i257 
y: i21 
=== Succesors ===
=== Usages ===
v1163 v2143 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i257 y: i21  <|@  <|@
f <@~|@floating>@ <|@
tid v1163 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i262 
y: i2109 
=== Succesors ===
=== Usages ===
v1489 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i262 y: i2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v1489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1163 
=== Succesors ===
trueSuccessor: v1485 
falseSuccessor: v1488 
=== Usages ===
=== Predecessor ===
v1480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1163 #trueSuccessor: v1485 #falseSuccessor: v1488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B108" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: i2111 
=== Usages ===
v1171 i2112 
=== Predecessor ===
v1489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i2111  <|@  <|@
f <@~|@floating>@ <|@
tid v2144 <|@
result [v139|DWORD + v121|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i257 
index: a2105 
=== Succesors ===
=== Usages ===
v1161 i2111 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i257 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2111 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2144 
=== Succesors ===
next: i2112 
=== Usages ===
i1283 
=== Predecessor ===
v1485 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1480 address: v2144 #next: i2112  <|@  <|@
f <@~|@floating>@ <|@
tid v2143 <|@
result [v140|DWORD + v121|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: i262 
index: a2105 
=== Succesors ===
=== Usages ===
i2112 v1171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: i262 index: a2105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i2112 <|@
result v142|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: i8
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2143 
=== Succesors ===
next: v1161 
=== Usages ===
i1285 
=== Predecessor ===
i2111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v1485 address: v2143 #next: v1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:323) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1480 
address: v2144 
value: i249 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1171 
=== Usages ===
=== Predecessor ===
i2112 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1480 address: v2144 value: i249 stateAfter: - lastLocationAccess: - #next: v1171  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i75 
y: i88 
=== Succesors ===
=== Usages ===
i264 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i75 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 8
stamp: i8
=== Inputs ===
value: i263 
=== Succesors ===
=== Usages ===
v1171 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: i263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1171 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: byte
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:324) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1485 
address: v2143 
value: i264 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v1161 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1485 address: v2143 value: i264 stateAfter: - lastLocationAccess: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid i1285 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2112 
=== Succesors ===
=== Usages ===
i235 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2112  <|@  <|@
f <@~|@floating>@ <|@
tid i235 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65280] ⇈000000000000ff00
=== Inputs ===
x: i1285 
y: i88 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i1285 y: i88  <|@  <|@
f <@~|@floating>@ <|@
tid i1283 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
resultBits: 32
stamp: i32 [0 - 255] ⇈00000000000000ff
=== Inputs ===
value: i2111 
=== Succesors ===
=== Usages ===
i236 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2111  <|@  <|@
f <@~|@floating>@ <|@
tid i236 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.OrNode$$Lambda$69/599890587@2745c573
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i235 
y: i1283 
=== Succesors ===
=== Usages ===
v104 i103 
=== Predecessor ===
- >@ <|@
instruction <@||@org.graalvm.compiler.nodes.calc.OrNode>@ x: i235 y: i1283  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v148|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i236 
y: i102 
=== Succesors ===
=== Usages ===
i675 i674 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i236 y: i102  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:563) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i236 
y: i47 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i236 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:569) [bci: 51]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.8594248816973039
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v119 
falseSuccessor: v120 
=== Usages ===
=== Predecessor ===
v1171 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v119 #falseSuccessor: v120  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSXB [v139|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVSXB [v140|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v139|DWORD + v121|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SAR v55|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v140|DWORD + v121|DWORD[.] * 8 + 16], y: v143|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVZXB v142|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SHL v144|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVZXB v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = OR (x: v145|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = DEC v147|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|DWORD, y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4617677755065960814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 135]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v666 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v666  <|@  <|@
f <@*|@fixed>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v665 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B95" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626629469646584147
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i675 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v665 
values: i103 i746 
=== Succesors ===
=== Usages ===
?647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v665 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v666 v835 
=== Succesors ===
next: v149 
=== Usages ===
i675 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v666 v835 #next: v149  <|@  <|@
tid ?647 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i675 - - 
=== Succesors ===
=== Usages ===
v1364 v1491 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i675 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 137]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.9601132384921313
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v148 
falseSuccessor: v147 
=== Usages ===
=== Predecessor ===
v665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v148 #falseSuccessor: v147  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4626392691780227303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 160]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1364 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1364 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?647 #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 3
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1364 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v149|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B104 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:579) [bci: 143]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2113 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2113  <|@  <|@
f <@~|@floating>@ <|@
tid v2164 <|@
result [v120|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2164 
=== Succesors ===
next: v1494 
=== Usages ===
v1890 
=== Predecessor ===
v147 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2164 #next: v1494  <|@  <|@
f <@~|@floating>@ <|@
tid v1890 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2113 
y: v1889 
=== Succesors ===
=== Usages ===
v1494 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2113 y: v1889  <|@  <|@
f <@*|@fixed>@ <|@
tid v1494 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1890 
=== Succesors ===
trueSuccessor: v1490 
falseSuccessor: v1493 
=== Usages ===
=== Predecessor ===
v2113 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1890 #trueSuccessor: v1490 #falseSuccessor: v1493  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2114 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2114  <|@  <|@
f <@~|@floating>@ <|@
tid v2145 <|@
result [v125|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
a2114 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2114 <|@
result v150|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 154]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2145 
=== Succesors ===
next: v1200 
=== Usages ===
?316 v1200 
=== Predecessor ===
v1490 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2145 #next: v1200  <|@  <|@
f <@~|@floating>@ <|@
tid v2146 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1200 j1773 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2146 
value: a2114 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1773 
=== Usages ===
=== Predecessor ===
a2114 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2146 value: a2114 stateAfter: - lastLocationAccess: - #next: j1773  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1773 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2146 
=== Succesors ===
next: v1777 
=== Usages ===
j1774 
=== Predecessor ===
v1200 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2146 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j1774 <|@
result v151|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1773 
y: i1756 
=== Succesors ===
=== Usages ===
v2165 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1773 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2165 <|@
result [v151|QWORD[*] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1774 
index: j1760 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1774 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2165 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
j1773 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2165 value: i1246 stateAfter: - lastLocationAccess: - #next: v1363  <|@  <|@
tid ?318 <|@
d <@d|@=== Debug Properties ===
bci: 157
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?318 
values: a1 i51 a2114 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?318 values: a1 i51 a2114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?316 
=== Succesors ===
next: v546 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?316 #next: v546  <|@  <|@
f <@*|@fixed>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 2
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1363 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v125|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[*] = SHR v152|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v151|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v150|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B106 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1491 
=== Usages ===
=== Predecessor ===
v1494 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1491  <|@  <|@
f <@*|@fixed>@ <|@
tid v1491 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1189
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1416319291]
stamp: void
=== Inputs ===
stateBefore: ?647 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1493 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v153|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v149|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606015710131423035
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:570) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B96" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i674 <|@
result v154|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-1 - 65534]
valueDescription: i32
=== Inputs ===
merge: v668 
values: i103 i746 
=== Succesors ===
=== Usages ===
v1873 v1824 ?670 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v668 values: i103 i746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v836 
=== Succesors ===
next: v2115 
=== Usages ===
i674 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v836 #next: v2115  <|@  <|@
f <@~|@floating>@ <|@
tid v2195 <|@
result [v120|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2104 
=== Succesors ===
=== Usages ===
v2115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2104  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2115 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v2195 
=== Succesors ===
next: v1499 
=== Usages ===
v2073 
=== Predecessor ===
v668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2195 #next: v1499  <|@  <|@
f <@~|@floating>@ <|@
tid v2073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v2115 
y: v1889 
=== Succesors ===
=== Usages ===
v1499 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v2115 y: v1889  <|@  <|@
tid ?670 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:567) [bci: 38]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 568
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: a1 - i51 - - i674 - - 
=== Succesors ===
=== Usages ===
a1795 a1845 v1496 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: a1 - i51 - - i674 - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1499 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2073 
=== Succesors ===
trueSuccessor: v1495 
falseSuccessor: v1498 
=== Usages ===
=== Predecessor ===
v2115 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2073 #trueSuccessor: v1495 #falseSuccessor: v1498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOV [v120|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: j1783 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1783  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1783 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1799 
=== Usages ===
v2172 v2171 
=== Predecessor ===
v1495 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1799  <|@  <|@
f <@~|@floating>@ <|@
tid v2171 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1783 
index: - 
=== Succesors ===
=== Usages ===
v1801 v1851 j1799 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1799 <|@
result v156|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
=== Succesors ===
next: j1800 
=== Usages ===
v2181 j1805 j1855 j1897 v2193 
=== Predecessor ===
j1783 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2171 #next: j1800  <|@  <|@
f <@~|@floating>@ <|@
tid v2172 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1783 
index: - 
=== Succesors ===
=== Usages ===
j1800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1783 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1800 <|@
result v157|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2172 
=== Succesors ===
next: v125 
=== Usages ===
v1839 
=== Predecessor ===
j1799 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2172 #next: v125  <|@  <|@
f <@~|@floating>@ <|@
tid j1897 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1799 
y: j888 
=== Succesors ===
=== Usages ===
v1839 v1851 v1801 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1799 y: j888  <|@  <|@
f <@~|@floating>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1800 
y: j1897 
=== Succesors ===
=== Usages ===
v1842 v1791 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1800 y: j1897  <|@  <|@
f <@~|@floating>@ <|@
tid v2148 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1029 
index: i276 
=== Succesors ===
=== Usages ===
v1242 v1219 j1876 j1827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1029 index: i276  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:571) [bci: 78]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
trueSuccessorProbability: 0.6917462436252867
=== Inputs ===
condition: v1588 
=== Succesors ===
trueSuccessor: v124 
falseSuccessor: v123 
=== Usages ===
=== Predecessor ===
j1800 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1588 #trueSuccessor: v124 #falseSuccessor: v123  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = LEA [v156|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 113]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1791 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1791  <|@  <|@
f <@*|@fixed>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1839 
=== Succesors ===
trueSuccessor: v1789 
falseSuccessor: v1790 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1839 #trueSuccessor: v1789 #falseSuccessor: v1790  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582535181112006981
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1795 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1795 <|@
result v159|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1781 i37 i21 
=== Succesors ===
next: j1796 
=== Usages ===
j1796 
=== Predecessor ===
v1789 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1781 i37 i21 #next: j1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1796 <|@
result v159|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1795 
=== Succesors ===
next: v1806 
=== Usages ===
j1805 
=== Predecessor ===
a1795 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1795 #next: v1806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
j1796 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612502090758257414
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1801 
=== Usages ===
=== Predecessor ===
v1791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
value: j1897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1798 
=== Usages ===
=== Predecessor ===
v1790 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2171 value: j1897 stateAfter: - lastLocationAccess: - #next: v1798  <|@  <|@
f <@~|@floating>@ <|@
tid v2193 <|@
result [v156|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1799 
index: - 
=== Succesors ===
=== Usages ===
v1798 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2193 
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
v1801 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2193 #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v156|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1805 <|@
result v160|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1803 
values: j1799 j1796 
=== Succesors ===
=== Usages ===
v2169 v2168 a1572 v2179 v2180 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1803 values: j1799 j1796  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1804 v1806 
=== Succesors ===
next: a1572 
=== Usages ===
j1805 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1804 v1806 #next: a1572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1572 <|@
result v161|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1805 
=== Succesors ===
next: j1816 
=== Usages ===
a1578 
=== Predecessor ===
v1803 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1805 #next: j1816  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1816 <|@
result v162|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
=== Succesors ===
next: v1817 
=== Usages ===
v1817 
=== Predecessor ===
a1572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2173 #next: v1817  <|@  <|@
f <@~|@floating>@ <|@
tid v2168 <|@
result [v160|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1817 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1817 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2168 
value: j1816 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1820 
=== Usages ===
=== Predecessor ===
j1816 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2168 value: j1816 stateAfter: - lastLocationAccess: - #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v2169 <|@
result [v160|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2169 
value: v1894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1824 
=== Usages ===
=== Predecessor ===
v1817 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2169 value: v1894 stateAfter: - lastLocationAccess: - #next: v1824  <|@  <|@
f <@~|@floating>@ <|@
tid v2179 <|@
result [v160|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1824 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1824 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2179 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1826 
=== Usages ===
=== Predecessor ===
v1820 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2179 value: i674 stateAfter: - lastLocationAccess: - #next: v1826  <|@  <|@
f <@~|@floating>@ <|@
tid v2180 <|@
result [v160|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1805 
index: - 
=== Succesors ===
=== Usages ===
v1826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1805 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1826 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2180 
value: a2107 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1578 
=== Usages ===
=== Predecessor ===
v1824 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2180 value: a2107 stateAfter: - lastLocationAccess: - #next: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1578 <|@
result v161|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1572 
=== Succesors ===
next: v1579 
=== Usages ===
a1241 ?806 
=== Predecessor ===
v1826 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1572 #next: v1579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1579 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1242 
=== Usages ===
=== Predecessor ===
a1578 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1242  <|@  <|@
f <@~|@floating>@ <|@
tid a1241 <|@
result v163|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1578 
=== Succesors ===
=== Usages ===
v1242 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1578  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1242 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2148 
value: a1241 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1827 
=== Usages ===
=== Predecessor ===
v1579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2148 value: a1241 stateAfter: - lastLocationAccess: - #next: j1827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1827 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2148 
=== Succesors ===
next: v1831 
=== Usages ===
j1828 
=== Predecessor ===
v1242 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2148 #next: v1831  <|@  <|@
f <@~|@floating>@ <|@
tid j1828 <|@
result v164|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1827 
y: i1756 
=== Succesors ===
=== Usages ===
v2170 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1827 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2170 <|@
result [v164|QWORD[*] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1828 
index: j1760 
=== Succesors ===
=== Usages ===
v1831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1828 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2170 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1365 
=== Usages ===
=== Predecessor ===
j1827 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2170 value: i1246 stateAfter: - lastLocationAccess: - #next: v1365  <|@  <|@
tid ?297 <|@
d <@d|@=== Debug Properties ===
bci: 129
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 575
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?806 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a555 
materializedValue: a1578 
=== Succesors ===
=== Usages ===
?295 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a555 materializedValue: a1578  <|@  <|@
tid ?295 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?297 
values: a1 i51 a555 
virtualObjectMappings: ?806 
=== Succesors ===
=== Usages ===
v1365 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?297 values: a1 i51 a555 virtualObjectMappings: ?806  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?295 
=== Succesors ===
next: v548 
=== Usages ===
=== Predecessor ===
v1831 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?295 #next: v548  <|@  <|@
f <@*|@fixed>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 4
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v160|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOV [v49|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*]], y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v160|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*] + 12], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*] + 16], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[.] = COMPRESSPOINTER (input: v161|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v163|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[*] = SHR v165|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v164|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v161|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B114 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:572) [bci: 84]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1839 
=== Succesors ===
trueSuccessor: v1840 
falseSuccessor: v1841 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1839 #trueSuccessor: v1840 #falseSuccessor: v1841  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577283490744886527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1845 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1845 <|@
result v166|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?670 
arguments: v1781 i37 i21 
=== Succesors ===
next: j1846 
=== Usages ===
j1846 
=== Predecessor ===
v1840 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?670 arguments: v1781 i37 i21 #next: j1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1846 <|@
result v166|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1845 
=== Succesors ===
next: v1856 
=== Usages ===
j1855 
=== Predecessor ===
a1845 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1845 #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
j1846 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v50|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD[.]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607419889699361561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1851 
=== Usages ===
=== Predecessor ===
v1842 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1851  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1851 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2171 
value: j1897 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1848 
=== Usages ===
=== Predecessor ===
v1841 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2171 value: j1897 stateAfter: - lastLocationAccess: - #next: v1848  <|@  <|@
f <@~|@floating>@ <|@
tid v2181 <|@
result [v156|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1799 
index: - 
=== Succesors ===
=== Usages ===
v1848 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v2181 
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v1851 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v2181 #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v156|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1855 <|@
result v167|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1853 
values: j1799 j1846 
=== Succesors ===
=== Usages ===
v2175 v2174 a1562 v2182 v2183 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: j1799 j1846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1856 
=== Succesors ===
next: a1562 
=== Usages ===
j1855 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1856 #next: a1562  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1562 <|@
result v168|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1855 
=== Succesors ===
next: j1865 
=== Usages ===
a1568 
=== Predecessor ===
v1853 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1855 #next: j1865  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1865 <|@
result v169|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v2173 
=== Succesors ===
next: v1866 
=== Usages ===
v1866 
=== Predecessor ===
a1562 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2173 #next: v1866  <|@  <|@
f <@~|@floating>@ <|@
tid v2174 <|@
result [v167|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1866 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1866 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2174 
value: j1865 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1869 
=== Usages ===
=== Predecessor ===
j1865 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2174 value: j1865 stateAfter: - lastLocationAccess: - #next: v1869  <|@  <|@
f <@~|@floating>@ <|@
tid v2175 <|@
result [v167|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2175 
value: v1894 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1873 
=== Usages ===
=== Predecessor ===
v1866 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2175 value: v1894 stateAfter: - lastLocationAccess: - #next: v1873  <|@  <|@
f <@~|@floating>@ <|@
tid v2182 <|@
result [v167|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1873 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2182 
value: i674 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a2116 
=== Usages ===
=== Predecessor ===
v1869 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2182 value: i674 stateAfter: - lastLocationAccess: - #next: a2116  <|@  <|@
f <@~|@floating>@ <|@
tid v2194 <|@
result [v125|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a2107 
=== Succesors ===
=== Usages ===
a2116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a2107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2116 <|@
result v170|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 99]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v2194 
=== Succesors ===
next: v1875 
=== Usages ===
v1875 
=== Predecessor ===
v1873 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v2194 #next: v1875  <|@  <|@
f <@~|@floating>@ <|@
tid v2183 <|@
result [v167|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1855 
index: - 
=== Succesors ===
=== Usages ===
v1875 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1855 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1875 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2183 
value: a2116 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1568 
=== Usages ===
=== Predecessor ===
a2116 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2183 value: a2116 stateAfter: - lastLocationAccess: - #next: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1568 <|@
result v168|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1562 
=== Succesors ===
next: v1569 
=== Usages ===
a1218 ?803 
=== Predecessor ===
v1875 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1562 #next: v1569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
a1568 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1219  <|@  <|@
f <@~|@floating>@ <|@
tid a1218 <|@
result v171|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
op: Compress
stamp: n -
=== Inputs ===
value: a1568 
=== Succesors ===
=== Usages ===
v1219 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1465 
address: v2148 
value: a1218 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1876 
=== Usages ===
=== Predecessor ===
v1569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1465 address: v2148 value: a1218 stateAfter: - lastLocationAccess: - #next: j1876  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1876 <|@
result [v124|QWORD[.] + v123|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v2148 
=== Succesors ===
next: v1880 
=== Usages ===
j1877 
=== Predecessor ===
v1219 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v2148 #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid j1877 <|@
result v172|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1876 
y: i1756 
=== Succesors ===
=== Usages ===
v2176 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1876 y: i1756  <|@  <|@
f <@~|@floating>@ <|@
tid v2176 <|@
result [v172|QWORD[*] + v47|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1877 
index: j1760 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1877 index: j1760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v2176 
value: i1246 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1362 
=== Usages ===
=== Predecessor ===
j1876 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v2176 value: i1246 stateAfter: - lastLocationAccess: - #next: v1362  <|@  <|@
tid ?311 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 573
stackSize: 0
=== Inputs ===
outerFrameState: ?160 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?160 values: - - - - - - - -  <|@  <|@
tid ?803 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a551 
materializedValue: a1568 
=== Succesors ===
=== Usages ===
?309 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a551 materializedValue: a1568  <|@  <|@
tid ?309 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setRawValue(int, Object)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:791) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 792
stackSize: 0
=== Inputs ===
outerFrameState: ?311 
values: a1 i51 a551 
virtualObjectMappings: ?803 
=== Succesors ===
=== Usages ===
v1362 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?311 values: a1 i51 a551 virtualObjectMappings: ?803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?309 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v1880 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?309 #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 102]
stamp: void
=== Inputs ===
loopBegin: v50 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1362 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = MOVE v167|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOV [v49|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*]], y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v167|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*] + 12], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD[.] = MOV [v125|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*] + 16], y: v170|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = COMPRESSPOINTER (input: v168|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v171|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = SHR v173|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v172|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v168|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B118 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1496 
=== Usages ===
=== Predecessor ===
v1499 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1496  <|@  <|@
f <@*|@fixed>@ <|@
tid v1496 <|@
d <@d|@=== Debug Properties ===
action: InvalidateRecompile
debugId: 1359
reason: OptimizedTypeCheckViolated
speculation: Object[d.a@1416319291]
stamp: void
=== Inputs ===
stateBefore: ?670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1498 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v174|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1649 
=== Usages ===
=== Predecessor ===
v1489 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1649  <|@  <|@
f <@~|@floating>@ <|@
tid i1650 <|@
result int[-288283|0xfffffffffffb99e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -288283
stableDimension: 0
stamp: i32 [-288283] ⇊00000000fffb99e5 ⇈00000000fffb99e5
stampKind: i32
value: int[-288283|0xfffffffffffb99e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1649 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:311) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:562) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1647 
=== Usages ===
=== Predecessor ===
v1484 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1647  <|@  <|@
f <@~|@floating>@ <|@
tid i1648 <|@
result int[-285723|0xfffffffffffba3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -285723
stableDimension: 0
stamp: i32 [-285723] ⇊00000000fffba3e5 ⇈00000000fffba3e5
stampKind: i32
value: int[-285723|0xfffffffffffba3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285723|0xfffffffffffba3e5]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:521) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:401) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1645 
=== Usages ===
=== Predecessor ===
v1479 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1645  <|@  <|@
f <@~|@floating>@ <|@
tid i1646 <|@
result int[-274451|0xfffffffffffbcfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -274451
stableDimension: 0
stamp: i32 [-274451] ⇊00000000fffbcfed ⇈00000000fffbcfed
stampKind: i32
value: int[-274451|0xfffffffffffbcfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:795) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1641 
=== Usages ===
=== Predecessor ===
v1469 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1641  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
result int[-347419|0xfffffffffffab2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -347419
stableDimension: 0
stamp: i32 [-347419] ⇊00000000fffab2e5 ⇈00000000fffab2e5
stampKind: i32
value: int[-347419|0xfffffffffffab2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1633 
=== Predecessor ===
v1468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347419|0xfffffffffffab2e5]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B97" "B122" "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1636 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-347419 - -263947] ⇊00000000fffa80e5 ⇈00000000fffbfffd
valueDescription: i32
=== Inputs ===
merge: v1633 
values: i1642 i1644 i1646 i1648 i1650 
=== Succesors ===
=== Usages ===
v1638 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1633 values: i1642 i1644 i1646 i1648 i1650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1641 v1643 v1645 v1647 v1649 
=== Succesors ===
next: v1638 
=== Usages ===
i1636 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1641 v1643 v1645 v1647 v1649 #next: v1638  <|@  <|@
f <@*|@fixed>@ <|@
tid v1638 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?200 
actionAndReason: i1636 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1633 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?200 actionAndReason: i1636 speculation: a1619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v175|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1629 
=== Usages ===
=== Predecessor ===
v2068 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1629  <|@  <|@
f <@~|@floating>@ <|@
tid i1630 <|@
result int[-237091|0xfffffffffffc61dd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -237091
stableDimension: 0
stamp: i32 [-237091] ⇊00000000fffc61dd ⇈00000000fffc61dd
stampKind: i32
value: int[-237091|0xfffffffffffc61dd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1629 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237091|0xfffffffffffc61dd]] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Lorg/graalvm/compiler/graph/Graph$1; target_method=hashCode target_method_class=Lorg/graalvm/compiler/graph/Graph$1; position=at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1627 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1627  <|@  <|@
f <@~|@floating>@ <|@
tid i1628 <|@
result int[-236083|0xfffffffffffc65cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -236083
stableDimension: 0
stamp: i32 [-236083] ⇊00000000fffc65cd ⇈00000000fffc65cd
stampKind: i32
value: int[-236083|0xfffffffffffc65cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1627 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1395 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236083|0xfffffffffffc65cd]] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getKey(EconomicMapImpl.java:773) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:553) [bci: 84]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v1623 
=== Usages ===
=== Predecessor ===
v1386 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v1623  <|@  <|@
f <@~|@floating>@ <|@
tid i1624 <|@
result int[-233243|0xfffffffffffc70e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -233243
stableDimension: 0
stamp: i32 [-233243] ⇊00000000fffc70e5 ⇈00000000fffc70e5
stampKind: i32
value: int[-233243|0xfffffffffffc70e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1616 
=== Predecessor ===
v1385 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233243|0xfffffffffffc70e5]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B45" "B126" "B125" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1620 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-238347 - -231947] ⇊00000000fffc40c5 ⇈00000000fffc7ffd
valueDescription: i32
=== Inputs ===
merge: v1616 
values: i1624 i1626 i1628 i1630 
=== Succesors ===
=== Usages ===
v1622 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1616 values: i1624 i1626 i1628 i1630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1623 v1625 v1627 v1629 
=== Succesors ===
next: v1622 
=== Usages ===
i1620 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1623 v1625 v1627 v1629 #next: v1622  <|@  <|@
f <@*|@fixed>@ <|@
tid v1622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?52 
actionAndReason: i1620 
speculation: a1619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1616 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?52 actionAndReason: i1620 speculation: a1619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v50 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v59 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v50 #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:558) [bci: 108]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1919 
=== Usages ===
=== Predecessor ===
v1921 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1919  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v1915 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1920 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v1915  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B130 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609673205922147754
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1360 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?13 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?13 #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
result v177|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:534) [bci: 17]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i12 
y: i21 
=== Succesors ===
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i12 y: i21  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v10|DWORD v11|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|DWORD] destination: B131 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:540) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1613 
=== Usages ===
=== Predecessor ===
v1376 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1613  <|@  <|@
f <@~|@floating>@ <|@
tid a1615 <|@
result v178|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1099189008
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1099189008]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1614 <|@
result int[-229651|0xfffffffffffc7eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229651
stableDimension: 0
stamp: i32 [-229651] ⇊00000000fffc7eed ⇈00000000fffc7eed
stampKind: i32
value: int[-229651|0xfffffffffffc7eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1606 
=== Predecessor ===
v1375 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229651|0xfffffffffffc7eed], v178|QWORD[.]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" "B132" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1610 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-229651 - -228619] ⇊00000000fffc02e5 ⇈00000000fffcfefd
valueDescription: i32
=== Inputs ===
merge: v1606 
values: i1608 i1614 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1606 values: i1608 i1614  <|@  <|@
f <@~|@floating>@ <|@
tid a1611 <|@
result v180|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v1606 
values: a1609 a1615 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1606 values: a1609 a1615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1607 v1613 
=== Succesors ===
next: v1612 
=== Usages ===
i1610 a1611 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1607 v1613 #next: v1612  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.createHash()>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: EconomicMapImpl.java
sourceLine: 529
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - - - - 
=== Succesors ===
=== Usages ===
v1612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v1612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1610 
speculation: a1611 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1606 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1610 speculation: a1611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|DWORD, v180|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v1|DWORD[.], y: v1|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|DWORD[.] * 8 + 12] y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: v7|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD[.], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = CMOVE (falseValue: v6|DWORD, ~trueValue: v9|DWORD) condition: = <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = SUB (x: v3|DWORD, ~y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609673205922147754
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v10|DWORD v11|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = SHL v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v177|DWORD] destination: B131 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B131" 
    successors "B5" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612931411988453077
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SHL v11|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = LEA [v14|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = AND v15|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = ADD (x: v17|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v18|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v14|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD - 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v24|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 1], input: v31|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v24|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 1], input: v35|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v24|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v37|QWORD * 1], input: v39|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v37|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = DEC v24|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = INC v41|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v43|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v44|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v23|QWORD[.] + v41|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" "B33" "B28" "B30" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v45|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v46|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], v48|QWORD[.]] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" "B118" "B106" "B104" "B114" 
    successors "B36" "B129" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627900120446939723
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|DWORD, v52|QWORD[.]] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v51|DWORD, y: [v0|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B127" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHL v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction CMP (x: v53|DWORD, y: [v52|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = MOV [v52|QWORD[.] + v53|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = INC v51|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v54|DWORD[.], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD[.] = MOV [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD[.], y: v56|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625566030427908053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627374230700750320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v57|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v58|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = SHR v58|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = XOR (x: v58|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|DWORD, v60|DWORD] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B49" "B43" "B87" 
    successors "B89" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD, v119|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v120|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v121|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v120|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = INC v53|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = UNCOMPRESSPOINTER (input: v120|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|DWORD[.] = MOV [v124|QWORD[.] + v123|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v125|DWORD[.], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626909731634411046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|DWORD = MOV [v125|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v126|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B91" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = MOV [v121|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 512 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v130|DWORD = DEC v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = AND (x: v119|DWORD, y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVSXB [v131|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v131|DWORD + v121|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = MOVZXB v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v134|DWORD = DEC v133|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOVSXB v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v135|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625066253664382447
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|DWORD] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B95" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626629469646584147
    begin_IR
      LIR
      nr   -1  <|@ instruction [v149|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4626392691780227303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v149|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B104 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619823718343303052
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618918819518756973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" "B122" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v122|DWORD y: 131072 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = SHR v129|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = DEC v136|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|DWORD = AND (x: v137|DWORD, y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = SHL v138|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = INC v139|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v129|DWORD, y: v140|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B108" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSXB [v139|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVSXB [v140|DWORD + v121|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v139|DWORD + v121|DWORD[.] * 8 + 16], y: v55|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v143|DWORD = SAR v55|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v140|DWORD + v121|DWORD[.] * 8 + 16], y: v143|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVZXB v142|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = SHL v144|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVZXB v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = OR (x: v145|DWORD, y: v146|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = DEC v147|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v147|DWORD, y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4617677755065960814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612990182235902300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v134|DWORD] destination: B96 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B96" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr   -1  <|@ instruction [v154|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = MOV [v120|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = LEA [v156|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612502090758257414
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v156|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v160|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE v160|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD = MOV [v49|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*]], y: v162|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v160|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*] + 12], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v160|QWORD[*] + 16], y: v125|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[.] = COMPRESSPOINTER (input: v161|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v163|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[*] = SHR v165|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v164|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v161|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B114 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612708208979823762
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v158|QWORD, y: v157|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607419889699361561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v158|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v156|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v156|QWORD] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr   -1  <|@ instruction [v167|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v168|QWORD[.] = MOVE v167|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD = MOV [v49|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*]], y: v169|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v167|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*] + 12], y: v154|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v170|DWORD[.] = MOV [v125|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v167|QWORD[*] + 16], y: v170|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v171|DWORD[.] = COMPRESSPOINTER (input: v168|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v171|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v173|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v172|QWORD[*] = SHR v173|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v172|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v168|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B118 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606015710131423035
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v148|DWORD] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v120|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v125|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v124|QWORD[.] + v123|DWORD * 4 + 16], y: v150|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|QWORD[.] = LEA [v124|QWORD[.] + v123|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[*] = SHR v152|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v151|QWORD[*] + v47|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: v0|QWORD[.] v51|DWORD v150|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v124|QWORD[.]] destination: B106 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v56|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B126" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v56|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD = MOV [v54|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: [v61|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v54|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v64|DWORD = MOVZXB [v63|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v64|DWORD, y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v54|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v65|DWORD, int[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B84" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[.] = MOV [v69|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction CMP (x: v68|DWORD, y: [v72|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v72|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v74|DWORD[.] = MOV [v73|QWORD[.] + v68|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v75|QWORD = MOV [v74|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|QWORD, y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v106|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = MOV [v106|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD[.] = MOV [v107|QWORD + v54|DWORD[.] * 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = UNCOMPRESSPOINTER (input: v108|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v109|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: v67|DWORD 
locals: v63|DWORD[.] v66|QWORD[.] - v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v111|DWORD = ADD (x: v110|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|DWORD] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" "B66" "B69" "B71" "B73" "B75" "B77" "B78" "B80" "B67" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4600910810514274550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: v63|DWORD[.] v66|QWORD[.] v112|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = IMUL v112|DWORD y: 13 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = INC v68|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD, v114|DWORD] destination: B81 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B81" 
    successors "B52" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4605414410141645045
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|DWORD, v68|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|DWORD[.] = MOV [v63|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v70|DWORD[.] = MOV [v69|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction v71|DWORD = MOV [v70|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[.] = UNCOMPRESSPOINTER (input: v69|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v74|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOV [v76|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = ADD (x: v67|DWORD, ~y: [v77|QWORD + v54|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B56 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|DWORD, y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = MOV [v79|QWORD[.] + v68|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [v80|QWORD + v54|DWORD[.] * 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = SHR v81|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = XOR (x: v83|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = ADD (x: v82|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = MOV v85|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v86|DWORD] destination: B61 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v88|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA [v67|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v89|DWORD] destination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v90|SINGLE = VMOVE xmm0|SINGLE <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = VMOVD v90|SINGLE <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = ADD (x: v91|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|DWORD] destination: B69 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD] destination: B66 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v93|DOUBLE = VMOVE xmm0|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v94|QWORD = VMOVQ v93|DOUBLE <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = SHR v94|QWORD y: 32 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD = XOR (x: v94|QWORD, y: v95|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = ADD (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOV v98|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|DWORD] destination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = ADD (x: v100|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v101|DWORD] destination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = ADD (x: v102|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|DWORD] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v87|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v66|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = ADD (x: v104|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v105|DWORD] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR v67|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = XOR (x: v67|DWORD, y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v117|DWORD] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0], int[0|0x0]] destination: B49 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4589321076878775176
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v55|DWORD, v52|QWORD[.]] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582535181112006981
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v182|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v159|QWORD[.]] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577283490744886527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v181|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v166|QWORD[.]] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B130 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B130" 
    successors "B17" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v27|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v27|QWORD * 1], input: v26|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 32] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v14|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: v0|QWORD[.] v10|DWORD v11|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-233243|0xfffffffffffc70e5]] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B45" "B126" "B125" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-259355|0xfffffffffffc0ae5]] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B58" "B63" "B83" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v115|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: v63|DWORD[.] v66|QWORD[.] v67|DWORD v68|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-235795|0xfffffffffffc66ed]] destination: B45 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-248603|0xfffffffffffc34e5]] destination: B58 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-245787|0xfffffffffffc3fe5]] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-347419|0xfffffffffffab2e5]] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B97" "B122" "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v175|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: v0|QWORD[.] - v118|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: v0|QWORD[.] - v51|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-228619|0xfffffffffffc82f5], v2|QWORD[.]] destination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" "B132" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|DWORD, v180|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v180|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0]
locals: v0|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-236083|0xfffffffffffc65cd]] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-237091|0xfffffffffffc61dd]] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-274451|0xfffffffffffbcfed]] destination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-269851|0xfffffffffffbe1e5]] destination: B97 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229651|0xfffffffffffc7eed], v178|QWORD[.]] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v174|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v154|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-251675|0xfffffffffffc28e5]] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v153|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: v0|QWORD[.] - v51|DWORD - - v149|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: v0|QWORD[.] - - v51|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-285723|0xfffffffffffba3e5]] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-288283|0xfffffffffffb99e5]] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP [r13|DWORD[.] * 8 + 12] y: 131072 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   42  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: = <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   48  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr   50  <|@ instruction r14|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609673205922147754
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1426  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r14|DWORD r10|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10] <|@ <|@
      nr 1428  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr 1430  <|@ instruction JUMP ~[] destination: B131 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B131" 
    successors "B5" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612931411988453077
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r8|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  106  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction r11|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr  178  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B17" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  226  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  228  <|@ instruction r11|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  250  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  252  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  274  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  276  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  300  <|@ instruction r11|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  316  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  332  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B12" "B33" "B28" "B30" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  344  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  346  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" "B118" "B106" "B104" "B114" 
    successors "B36" "B129" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627900120446939723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  360  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B127" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: r13|QWORD[.] - - r10|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  400  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625566030427908053
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B40 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B40" "B42" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627374230700750320
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99] <|@ <|@
      nr  434  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  436  <|@ instruction rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B49" "B43" "B87" 
    successors "B89" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  930  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  936  <|@ instruction r13|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  938  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  948  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626909731634411046
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  962  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  964  <|@ instruction rdi|DWORD = SETCC condition: = <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B91" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  972  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  980  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B95" "B96" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  994  <|@ instruction r11|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVSXB r10|DWORD size: DWORD <|@ <|@
      nr 1000  <|@ instruction TEST r10|DWORD y: 255 size: DWORD <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B95 falseDestination: B94 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625066253664382447
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1006  <|@ instruction JUMP ~[] destination: B95 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" "B95" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626629469646584147
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4626392691780227303
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: rsi|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99] <|@ <|@
      nr 1092  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B104 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619823718343303052
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618918819518756973
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" "B122" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr 1032  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr 1038  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1046  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B102" "B108" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1058  <|@ instruction rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr 1064  <|@ instruction r11|DWORD = SHL r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B102 falseDestination: B101 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4617677755065960814
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~[] destination: B102 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B94" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612990182235902300
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B96 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" "B96" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1160  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD = LEA [r10|QWORD + 24] size: QWORD <|@ <|@
      nr 1164  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1172  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612502090758257414
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1208  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 216] instr: 0 <|@ <|@
      nr 1210  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1214  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1228  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1236  <|@ instruction r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1238  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1240  <|@ instruction MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [rsi:0, r8:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r8|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr 1244  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B114 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612708208979823762
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1256  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1258  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607419889699361561
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1296  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 216] instr: 0 <|@ <|@
      nr 1298  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr 1308  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1310  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1312  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1314  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1318  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1324  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1326  <|@ instruction MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1328  <|@ st <@st|@reference-map: [rsi:0, r8:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r8|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr 1330  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B118 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4606015710131423035
    begin_IR
      LIR
      nr 1142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1144  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1146  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1104  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1106  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1116  <|@ instruction r11|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1118  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r10|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr 1124  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B106 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B126" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  480  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  482  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr  492  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B84" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  536  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, r10:0, r14:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  550  <|@ instruction r14|DWORD[.] = MOV [r14|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rbx:0, rbp:0, r10:0, r14:0, stack:4, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD = MOV [r14|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  554  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction rax|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  836  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: stack:68|DWORD 
locals: stack:56|DWORD[.] stack:64|QWORD[.] - stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr  844  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" "B66" "B69" "B71" "B73" "B75" "B77" "B78" "B80" "B67" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4600910810514274550
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: stack:56|DWORD[.] stack:64|QWORD[.] rsi|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr  854  <|@ instruction r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD <|@ <|@
      nr  856  <|@ instruction r8|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B81 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B81" 
    successors "B52" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4605414410141645045
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  530  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rax|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: r13|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B56 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B62" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  636  <|@ instruction rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction rsi|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr  682  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr  716  <|@ instruction rsi|DWORD = VMOVD xmm0|SINGLE <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B69 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B66 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  740  <|@ instruction rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr  768  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr  790  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr  812  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  916  <|@ instruction rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4589321076878775176
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r11:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74] <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582535181112006981
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1186  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1188  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1198  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577283490744886527
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1270  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1272  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1276  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1286  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B12 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B16" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr 1420  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1422  <|@ instruction JUMP ~[] destination: B130 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B130" 
    successors "B17" "B130" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  198  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  200  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B17 falseDestination: B16 -> B130 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B28 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [r13:0, stack:36, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: r13|QWORD[.] stack:40|DWORD stack:36|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4591419820104220672
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4589730970243956736
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B45" "B126" "B125" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5] <|@ <|@
      nr  876  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  878  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B58" "B63" "B83" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  904  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rcx:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r9|DWORD[.] rcx|QWORD[.] r10|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B45 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5] <|@ <|@
      nr  598  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5] <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5] <|@ <|@
      nr 1376  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B97" "B122" "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1382  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1386  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - r8|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007] <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-228619|0xfffffffffffc82f5] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" "B132" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1448  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0]
locals: stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd] <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr 1368  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5] <|@ <|@
      nr 1016  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B97 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008] <|@ <|@
      nr 1436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-229651|0xfffffffffffc7eed] <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr 1342  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr 1344  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B63" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5] <|@ <|@
      nr  652  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  656  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr 1136  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1140  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5] <|@ <|@
      nr 1360  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr 1352  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   10  <|@ instruction TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B132" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   26  <|@ instruction CMP [r13|DWORD[.] * 8 + 12] y: 131072 size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   34  <|@ instruction rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr   40  <|@ instruction r11|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   42  <|@ instruction r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: = <|@ <|@
      nr   44  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   48  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: = <|@ <|@
      nr   50  <|@ instruction r14|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   52  <|@ instruction r10|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4609673205922147754
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1426  <|@ st <@st|@reference-map: [rsi:0, r13:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: rsi|QWORD[.] r14|DWORD r10|DWORD - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10] <|@ <|@
      nr 1428  <|@ instruction r10|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr 1430  <|@ instruction JUMP ~[] destination: B131 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B131" 
    successors "B5" "B131" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612931411988453077
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   58  <|@ instruction CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   66  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   68  <|@ instruction r11|DWORD = SHL r10|DWORD y: 2 size: DWORD <|@ <|@
      nr   70  <|@ instruction CMP r11|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" "B8" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction r8|DWORD = LEA [r11|DWORD + 23] size: DWORD <|@ <|@
      nr   78  <|@ instruction r8|DWORD = AND r8|DWORD y: -8 size: DWORD <|@ <|@
      nr   80  <|@ instruction r8|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr   82  <|@ instruction r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr   86  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr  102  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  104  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  106  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  114  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  116  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B8 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" 
    successors "B34" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  160  <|@ instruction CMP r14|DWORD y: 1 size: DWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B34 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  174  <|@ instruction r10|QWORD = MOVSXD r14|DWORD size: QWORD <|@ <|@
      nr  176  <|@ instruction r11|QWORD = LEA [r10|QWORD - 32] size: QWORD <|@ <|@
      nr  178  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B14" "B16" 
    successors "B21" "B20" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  212  <|@ instruction r11|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  226  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  228  <|@ instruction r11|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr  230  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B18" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  236  <|@ instruction r11|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  250  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ <|@ <|@
      nr  252  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr  254  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r11|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction xmm0|V32_BYTE = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  274  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD <|@ <|@
      nr  276  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr  278  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B34" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  286  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B34 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  300  <|@ instruction r11|QWORD = INC r8|QWORD size: QWORD <|@ <|@
      nr  302  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B34 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B33" 
    xhandlers
    flags 
    probability 4598738169498697728
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  316  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr  318  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4596767844661723136
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B11" "B33" "B27" "B29" "B31" 
    successors "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  340  <|@ instruction MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  344  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  346  <|@ instruction MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  348  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  350  <|@ instruction r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  352  <|@ instruction r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B38" "B118" "B106" "B104" "B114" 
    successors "B36" "B129" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4627900120446939723
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr  360  <|@ instruction CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B127" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr  368  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: r13|QWORD[.] - - r10|DWORD - 
>@ <|@ instruction CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74] <|@ <|@
      nr  370  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627618645470229067
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  376  <|@ instruction rdi|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  378  <|@ instruction stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  380  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  382  <|@ instruction BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B43" "B41" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction r11|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD <|@ <|@
      nr  400  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B43 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627374230700750320
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  430  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99] <|@ <|@
      nr  434  <|@ instruction rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  436  <|@ instruction rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  438  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B43 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B49" "B43" "B87" 
    successors "B89" "B123" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  926  <|@ instruction r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  928  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  930  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  932  <|@ st <@st|@reference-map: [rsi:0, r8:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99] <|@ <|@
      nr  934  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  936  <|@ instruction r13|DWORD = INC stack:48|DWORD size: DWORD <|@ <|@
      nr  938  <|@ instruction CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  940  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B90" "B91" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  944  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  946  <|@ instruction rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  948  <|@ instruction TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  950  <|@ instruction BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626909731634411046
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  960  <|@ instruction rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  962  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  964  <|@ instruction rdi|DWORD = SETCC condition: = <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B91 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B90" "B91" 
    successors "B93" "B98" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4627600455406886840
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  970  <|@ instruction rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  972  <|@ instruction CMP rcx|DWORD y: 512 size: DWORD <|@ <|@
      nr  974  <|@ instruction BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B94" "B97" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr  980  <|@ instruction r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  982  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  984  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B103" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4625857505916426531
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  988  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  990  <|@ instruction r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  992  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  994  <|@ instruction r11|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr  996  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr  998  <|@ instruction r10|DWORD = MOVSXB r10|DWORD size: DWORD <|@ <|@
      nr 1000  <|@ instruction TEST r10|DWORD y: 255 size: DWORD <|@ <|@
      nr 1002  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B103 falseDestination: B94 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" "B94" 
    successors "B104" "B105" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4626629469646584147
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1086  <|@ instruction BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4626392691780227303
    begin_IR
      LIR
      nr 1088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1090  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: rsi|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99] <|@ <|@
      nr 1092  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1094  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~[] destination: B104 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4619823718343303052
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824] <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B43 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B99" "B122" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction CMP rcx|DWORD y: 131072 size: DWORD <|@ <|@
      nr 1026  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B100" "B121" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1028  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1030  <|@ instruction rcx|DWORD = SHR rdx|DWORD size: DWORD <|@ <|@
      nr 1032  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr 1034  <|@ instruction rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1036  <|@ instruction rcx|DWORD = SHL rcx|DWORD size: DWORD <|@ <|@
      nr 1038  <|@ instruction CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1040  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" "B120" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1046  <|@ instruction CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1048  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B103" "B109" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4618657816389229141
    begin_IR
      LIR
      nr 1050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1052  <|@ instruction r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1054  <|@ instruction rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1056  <|@ instruction MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr 1058  <|@ instruction rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD <|@ <|@
      nr 1060  <|@ instruction MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE <|@ <|@
      nr 1062  <|@ instruction r11|DWORD = MOVZXB rdx|DWORD size: DWORD <|@ <|@
      nr 1064  <|@ instruction r11|DWORD = SHL r11|DWORD y: 8 size: DWORD <|@ <|@
      nr 1066  <|@ instruction r10|DWORD = MOVZXB r10|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction r10|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1078  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B103 falseDestination: B101 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B101" "B94" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr 1148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1150  <|@ instruction r10|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 1152  <|@ instruction CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1154  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B115" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4614950304882438955
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1158  <|@ instruction r10|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1160  <|@ instruction r8|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1162  <|@ instruction r9|QWORD = LEA [r10|QWORD + 24] size: QWORD <|@ <|@
      nr 1164  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1166  <|@ instruction BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1170  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1172  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612502090758257414
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1208  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 216] instr: 0 <|@ <|@
      nr 1210  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1214  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1216  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B112" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4612555824818441657
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1220  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr 1224  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1226  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1228  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr 1232  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1236  <|@ instruction r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1238  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1240  <|@ instruction MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1242  <|@ st <@st|@reference-map: [rsi:0, r8:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r8|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99] <|@ <|@
      nr 1244  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1248  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~[] destination: B114 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" 
    successors "B92" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4612708208979823762
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction rdi|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B90 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B116" "B117" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1254  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1256  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1258  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 1260  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4607419889699361561
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1294  <|@ instruction MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1296  <|@ instruction AMD64PREFETCH ~[r10|QWORD + 216] instr: 0 <|@ <|@
      nr 1298  <|@ instruction r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1300  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" "B116" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4607467779300641507
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1304  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD <|@ <|@
      nr 1306  <|@ instruction r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr 1308  <|@ instruction MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr 1310  <|@ instruction MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1312  <|@ instruction MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1314  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1316  <|@ instruction MOV (x: [r10|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1318  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr 1320  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1322  <|@ instruction r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1324  <|@ instruction r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1326  <|@ instruction MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1328  <|@ st <@st|@reference-map: [rsi:0, r8:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r8|QWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99] <|@ <|@
      nr 1330  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1332  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1334  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1336  <|@ instruction JUMP ~[] destination: B118 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B106" "B107" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1102  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1104  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1106  <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr 1108  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4605752111268695421
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1114  <|@ instruction MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 1116  <|@ instruction r11|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1118  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1122  <|@ st <@st|@reference-map: [rsi:0, r10:0, r14:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11]
locals: rsi|QWORD[.] stack:36|DWORD r10|DWORD[.] 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157]
locals: - - - - - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99] <|@ <|@
      nr 1124  <|@ instruction r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1130  <|@ instruction JUMP ~[] destination: B106 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction rax|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  452  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  454  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  456  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123] <|@ <|@
      nr  462  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B126" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed} <|@ <|@
      nr  474  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B48" "B125" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  480  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>} <|@ <|@
      nr  482  <|@ instruction CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD <|@ <|@
      nr  484  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4605414410141645045
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  488  <|@ instruction r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [rbx:0, rsi:0, r10:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: rsi|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74] <|@ <|@
      nr  492  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  510  <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  512  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  514  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B84" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  536  <|@ instruction stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  538  <|@ instruction r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  540  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, r10:0, r14:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction CMP (x: r8|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B79" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4600910810514274549
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD <|@ <|@
      nr  548  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  550  <|@ instruction r14|DWORD[.] = MOV [r14|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rbx:0, rbp:0, r10:0, r14:0, stack:4, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD = MOV [r14|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  554  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B80" "B82" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  824  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  826  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  834  <|@ instruction rax|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  836  <|@ instruction rax|DWORD[.] = MOV [rax|QWORD + rbx|DWORD[.] * 8] size: DWORD <|@ <|@
      nr  838  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338]
stack: stack:68|DWORD 
locals: stack:56|DWORD[.] stack:64|QWORD[.] - stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99] <|@ <|@
      nr  844  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  846  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction JUMP ~[] destination: B80 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" "B61" "B66" "B69" "B71" "B73" "B75" "B77" "B78" "B80" "B67" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 2
    probability 4600910810514274550
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  852  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343]
locals: stack:56|DWORD[.] stack:64|QWORD[.] rsi|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99] <|@ <|@
      nr  854  <|@ instruction r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD <|@ <|@
      nr  856  <|@ instruction r8|DWORD = INC stack:72|DWORD size: DWORD <|@ <|@
      nr  858  <|@ instruction stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  860  <|@ instruction r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  862  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  864  <|@ instruction JUMP ~[] destination: B81 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B81" 
    successors "B52" "B87" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 2
    probability 4605414410141645045
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  524  <|@ instruction rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [rax:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rax:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r10|DWORD[.] stack:64|QWORD[.] stack:68|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99] <|@ <|@
      nr  530  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  532  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" "B59" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4596407210886904053
    begin_IR
      LIR
      nr  558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  560  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int] <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B60" "B64" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long] <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B65" "B68" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction rax|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  664  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  666  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean] <|@ <|@
      nr  668  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr  700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  702  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float] <|@ <|@
      nr  704  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double] <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr  752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  754  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short] <|@ <|@
      nr  756  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char] <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte] <|@ <|@
      nr  800  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  822  <|@ instruction JUMP ~[] destination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B56" "B57" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction CMP (x: r13|DWORD, y: stack:72|DWORD) size: DWORD <|@ <|@
      nr  568  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4591903611259533557
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  576  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  578  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  582  <|@ instruction r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD <|@ <|@
      nr  584  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  586  <|@ instruction JUMP ~[] destination: B56 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B61" "B63" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  618  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4587400011632163061
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3 <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD <|@ <|@
      nr  630  <|@ instruction rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD <|@ <|@
      nr  632  <|@ instruction rdx|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  634  <|@ instruction rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  636  <|@ instruction rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  638  <|@ instruction rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction rsi|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" "B67" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4582896412004792565
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  672  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  676  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  678  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99] <|@ <|@
      nr  682  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  684  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  694  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  696  <|@ instruction rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD <|@ <|@
      nr  698  <|@ instruction JUMP ~[] destination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  708  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  710  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  712  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  714  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99] <|@ <|@
      nr  716  <|@ instruction rsi|DWORD = VMOVD xmm0|SINGLE <|@ <|@
      nr  718  <|@ instruction rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B69 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4578392812377422069
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  688  <|@ instruction rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction JUMP ~[] destination: B66 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4573889212750051573
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  736  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99] <|@ <|@
      nr  738  <|@ instruction rsi|QWORD = VMOVQ xmm0|DOUBLE <|@ <|@
      nr  740  <|@ instruction rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  744  <|@ instruction rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD <|@ <|@
      nr  746  <|@ instruction rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction rsi|DWORD = MOV rsi|QWORD size: DWORD <|@ <|@
      nr  750  <|@ instruction JUMP ~[] destination: B71 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4569385613122681077
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  760  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  766  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99] <|@ <|@
      nr  768  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  772  <|@ instruction JUMP ~[] destination: B73 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4564882013495310581
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  784  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  788  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99] <|@ <|@
      nr  790  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  792  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  794  <|@ instruction JUMP ~[] destination: B75 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B81" 
    xhandlers
    flags 
    loop_index 3
    loop_depth 2
    probability 4560378413867940085
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  808  <|@ instruction rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  810  <|@ st <@st|@reference-map: [stack:16, stack:24, stack:28, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277]
locals: stack:56|DWORD[.] stack:64|QWORD[.] stack:68|DWORD stack:72|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99] <|@ <|@
      nr  812  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  816  <|@ instruction JUMP ~[] destination: B77 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  912  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  914  <|@ instruction rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  916  <|@ instruction rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B87 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B88" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4600910810514274549
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  500  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B49 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B35" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4589321076878775176
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r11:0, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74] <|@ <|@
      nr  390  <|@ instruction r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction JUMP ~[] destination: B38 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4582535181112006981
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1176  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1178  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1180  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1182  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1184  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1186  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1188  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1194  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1198  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1200  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B112 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B115" 
    successors "B118" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 1
    probability 4577283490744886527
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1264  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1266  <|@ instruction stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1270  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 1272  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1274  <|@ st <@st|@reference-map: [r14:0, stack:12, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - stack:48|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99] <|@ <|@
      nr 1276  <|@ instruction r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr 1280  <|@ instruction rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1282  <|@ instruction rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr 1286  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1288  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1290  <|@ instruction JUMP ~[] destination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1418  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  192  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B16" 
    successors "B18" "B16" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  198  <|@ instruction J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  200  <|@ instruction r8|QWORD = LEA [r8|QWORD + 32] size: QWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  204  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B18 falseDestination: B16 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B5" "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  132  <|@ instruction stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  134  <|@ instruction stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  142  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  150  <|@ instruction r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  154  <|@ st <@st|@reference-map: [r13:0, stack:36, stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10]
locals: r13|QWORD[.] stack:40|DWORD stack:36|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10] <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1402  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1404  <|@ instruction r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5] <|@ <|@
      nr 1406  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" "B45" "B126" "B125" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1410  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1412  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1414  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:74] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B82" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5] <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B83 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" "B58" "B63" "B83" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD <|@ <|@
      nr  896  <|@ instruction rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD <|@ <|@
      nr  904  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  906  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  908  <|@ st <@st|@reference-map: [rcx:0, r9:0, stack:48]
live-base-pointers: []
org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16]
locals: r9|DWORD[.] rcx|QWORD[.] r10|DWORD r8|DWORD - - - - - 
org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11]
locals: - - 
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40]
locals: stack:32|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: stack:32|QWORD[.] - stack:36|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:16, 11, 40, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed] <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B45 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  590  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  592  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  594  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5] <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  886  <|@ instruction r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5] <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B85 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B88" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1374  <|@ instruction r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5] <|@ <|@
      nr 1378  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" "B97" "B122" "B121" "B120" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1380  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1382  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1386  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52]
locals: rsi|QWORD[.] - r10|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2]
locals: rsi|QWORD[.] - r8|DWORD int[0|0x0] - - - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: rsi|QWORD[.] - - r8|DWORD - 
>@ <|@ instruction DEOPT info [bci:52, 2, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007] <|@ <|@
      nr   18  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction r10|DWORD = MOVE input: int[-228619|0xfffffffffffc82f5] <|@ <|@
      nr   22  <|@ instruction JUMP ~[] destination: B1 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B1" "B132" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr 1448  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0]
locals: stack:32|QWORD[.] - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1396  <|@ instruction r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd] <|@ <|@
      nr 1398  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1390  <|@ instruction r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd] <|@ <|@
      nr 1392  <|@ instruction JUMP ~[] destination: B125 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B98" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed] <|@ <|@
      nr 1370  <|@ instruction JUMP ~[] destination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B93" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5] <|@ <|@
      nr 1018  <|@ instruction JUMP ~[] destination: B97 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B133" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008] <|@ <|@
      nr 1436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1438  <|@ instruction r10|DWORD = MOVE input: int[-229651|0xfffffffffffc7eed] <|@ <|@
      nr 1440  <|@ instruction JUMP ~[] destination: B132 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr 1342  <|@ instruction MOV [r15|QWORD + 668] y: -347964 size: DWORD <|@ <|@
      nr 1344  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B86" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5] <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B63 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1134  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291] <|@ <|@
      nr 1136  <|@ instruction MOV [r15|QWORD + 668] y: -304444 size: DWORD <|@ <|@
      nr 1138  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1140  <|@ st <@st|@reference-map: [stack:48]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41]
locals: stack:32|QWORD[.] - stack:36|DWORD - - r11|DWORD - - 
org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99]
locals: stack:32|QWORD[.] - - stack:36|DWORD - 
>@ <|@ instruction DEOPT info [bci:41, 99] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1358  <|@ instruction r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5] <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B121 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B100" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1350  <|@ instruction r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5] <|@ <|@
      nr 1354  <|@ instruction JUMP ~[] destination: B120 -> B124 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #55         // size:()int
     4: istore_1      
     5: aload_0       
     6: invokespecial #57         // getHashThreshold:()int
     9: istore_2      
    10: iload_2       
    11: iload_1       
    12: if_icmpgt     22
    15: iload_2       
    16: iconst_1      
    17: ishl          
    18: istore_2      
    19: goto          10
    22: iload_2       
    23: iconst_1      
    24: ishl          
    25: istore_2      
    26: aload_0       
    27: getfield      #22         // entries:java.lang.Object[]
    30: arraylength   
    31: ldc           #48         // 131072
    33: if_icmplt     43
    36: iload_2       
    37: iconst_2      
    38: ishl          
    39: istore_2      
    40: goto          65
    43: aload_0       
    44: getfield      #22         // entries:java.lang.Object[]
    47: arraylength   
    48: sipush        512
    51: if_icmplt     61
    54: iload_2       
    55: iconst_1      
    56: ishl          
    57: istore_2      
    58: goto          65
    61: iload_2       
    62: iconst_1      
    63: ishl          
    64: istore_2      
    65: aload_0       
    66: iload_2       
    67: newarray      byte
    69: putfield      #24         // hashArray:byte[]
    72: iconst_0      
    73: istore_3      
    74: iload_3       
    75: aload_0       
    76: getfield      #5          // totalEntries:int
    79: if_icmpge     108
    82: aload_0       
    83: iload_3       
    84: invokespecial #3          // getKey:(int)java.lang.Object
    87: astore        4
    89: aload         4
    91: ifnull        102
    94: aload_0       
    95: aload         4
    97: iload_3       
    98: iconst_0      
    99: invokespecial #56         // putHashEntry:(java.lang.Object, int, boolean)void
   102: iinc          
   105: goto          74
   108: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889742430448b6e184585ed0f84f809000042813ced0c000000000002000f83330a00008b560c8b4e10448b56204181faaddeadde41bb0800000041b804000000450f44c34585d241ba08000000450f44c2448bf2442bf1458bd0e90900000085050000000041d1e2453bd67ef2498b5760498b4f70458bda41c1e3024181fbffffff000f83ba080000458d43174183e0f84d63c04d8bc84c03ca4c3bc90f87a00800004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000044895a0c48c70201000000c74208addeadde488bc2458bf344896c24244c8bee4183fe010f8cab000000488d70104d63d64d8d5ae04d85db0f8d1108000049c7c0000000004d8d5af04d3bc30f8f11000000c5f9efc0c4a17a7f04064d8d58104d8bc34d8d5af84d3bc30f8f11000000c5f9efc0c4a1f97e04064d8d58084d8bc34d8d5afc4d3bc30f8f11000000c5f9efc0c4a1797e04064d8d58044d8bc349ffca4d3bc20f8f2a000000468824064d8bd849ffc34d3bda0f8f1700000046886406014d8d58024d3bda0f8f050000004688640602448b54242448c1e8034189451c498bf548c1ee0949bb00e01b17010000004688241e418bf248c1e60349baaddeaddeaddeadde4c8bde41ba00000000666690453b550c0f8d1e070000418bcad1e1413b4b0c0f8383070000418b5c8b10418bfaffc7897c242885db0f843d060000458b5d204585db0f85ec000000894c2420448954242c48c1e303488bf348b8ffffffffffffffff90e800000000908bf0c1ee1033f0448bde448bd0488b742430448b4618438504c4448b4e1c438504cc428b0cc50c000000448b6c242041ffc5413bcd0f8673070000458bf049c1e603438b5cae1085db0f84980100008b3cdd0800000081ffaddeadde400f94c7400fb6ff428b14cd0c00000081f9000200000f83650000008bcaffc94423d9413bd30f868a0700008b442428470fbe54cb10438844cb10450fb6da41ffcb450fbed241f7c2ff0000000f859c00000085ff0f85b50100008505000000004d8bde448bd04c8beee9d8feffff4181fbaddeadde0f8407ffffffe9e30100008b44242881f9000002000f831d0700008bcad1e9ffc94123cbd1e13bd10f867e070000448bd941ffc3413bd30f867a070000460fbe54c910430fbe54cb10428844c9108bc8c1f90843884ccb10440fb6da41c1e308450fb6d2450bda458bd341ffca4585db458bda0f8464ffffff468b14c5080000004181faaddeadde0f85cf0600004d8b57604d8b47704d8d4a1885ff0f857d0000004d3bc80f87ac0400004d894f60410f1882d800000048b9addeaddeaddeadde48bf00e01b17010000004d8bc24c8b89a80000004d890a41c74208addeadde45895a0c41895a104d8bd049c1ea03478954ae104f8d54ae1049c1ea094588243a8505000000004d8bde448bd04c8beee9bcfdffffbf00000000e973feffff48b9addeaddeaddeadde48bf00e01b17010000004d3bc80f876c0400004d894f60410f1882d80000004d8bc24c8b89a80000004d890a41c74208addeadde45895a0c448b1cdd1000000045895a104d8bd049c1ea03478954ae104f8d54ae1049c1ea094588243a8505000000004d8bde448bd04c8beee937fdffff48b9addeaddeaddeadde48bf00e01b170100000042813cc508000000addeadde0f85ca050000448b14dd10000000478954ae104f8d5cae1049c1eb094588243b8505000000004d8bde448bd04c8beee9e3fcffff8bc7894c2420448954242c48b9addeaddeaddeadde48bf00e01b1701000000498bf54181fbaddeadde0f849d04000042813cdd08000000addeadde0f85f3040000448b14dd0800000049bbaddeaddeaddeadde4e3b1cd5300000000f85de040000448b14dd2c000000460fb61cd5300000004585db0f84c3020000895c241c4489542418468b1cd514000000448bc349c1e0034c8944241044895c240c41b800000000e98e0000006666660f1f8400000000004489442408448b34c514000000463b04f50c0000000f83130400008944240449c1e603478b7486104a8b04f5480000004885c00f846f000000453be80f86a903000048c1e5034a8b44c5108b04d848c1e003488bf06690e800000000900344240c8bf0850500000000446bd60d448b44240841ffc0448954240c448b5424188b5c241c428b04d5100000008b2cc50c000000448b2ced0c000000453be80f8f5dffffffe9c80100004181feaddeadde0f846c0000004181feaddeadde0f848d0000008b44240448c1e0034181feaddeadde0f84b30000004181feaddeadde0f84d70000004181feaddeadde0f84f20000004181feaddeadde0f84150100004181feaddeadde0f84250100004181feaddeadde0f84380100008b74240ce942ffffff443b6c24080f86f5020000448b442408448b54240c8b5c241c48c1e5034a8b74c510440314de418bf2e914ffffff448b442408448b54240c8b5c241c453be80f867803000048c1e5034a8b74c510488b34de4963d2488bce48c1e9204833ce4803d18bf2e9d9feffff448b442408488bf0488b542410418bc80f1f440000e8000000009085c00f842d000000448b54240c418d7207e9a8feffff488bf0488b5424108b4c2408e80000000090c5f97ec60374240ce989feffff8b74240ce980feffff488bf0488b5424108b4c2408e80000000090c4e1f97ec6488bd648c1ea204833f2486354240c4803f28bf6e950feffff488bf0488b5424108b4c2408e800000000900344240c8bf0e933feffff488bf0488b5424108b4c2408666690e800000000900344240c8bf0e913feffff488bf0488b5424108b4c2408666690e800000000900344240c8bf0e9f3fdffff448b54240c418bf2c1ee104133f2448bde488b742430e914faffff41bb0000000041ba00000000e903faffff448954242c850500000000448b5424284c8b6c2430e97af9ffff44895c2420895c240c48beaddeaddeaddeaddeba02000000b901000000e800000000904c8bd0448b5c24208b5c240c8b44242848b9addeaddeaddeadde48bf00e01b1701000000488b742430e923fbffff44895c2420895c240c48beaddeaddeaddeaddeba02000000b901000000e800000000904c8bd0448b5c24208b5c240c8b44242848b9addeaddeaddeadde48bf00e01b1701000000488b742430e94ffbffff488b6c24404883c448850500000000c5f877c3c5f9efc049c7c00000000066660f1f840000000000c4a17e7f04064d8d40204d3bc37ef1e9cdf7ffff448954242c448974242844896c242448baaddeaddeaddeadde4c8bc6488bf2418bd3b9000000004d8be8458bf3e80000000090e970f7ffff448954242c41bae570fcff4589979c0200004d89a7a8020000e80000000090448b54240c41bbe50afcff448b442408488b4c2410448b4c241845899f9c0200004d89a7a8020000e8000000009041baed66fcffebb6448b54240c41bbe534fcffebc8448b54240c41bbe53ffcffebbb41bbe5b2faff448b44242c45899f9c0200004d89a7a8020000e8000000009049baaddeaddeaddeadde4d8bda41baf582fcff4589979c0200004d899fa8020000e8000000009041bacd65fcffe94bffffff41badd61fcffe940ffffff41bbedcffbffeba241bbe5e1fbffeb9a49baaddeaddeaddeadde4d8bda41baed7efcffebb149baaddeaddeaddeadde41c7879c020000c4b0faff4d8997a8020000e8000000009041bbe528fcffe90dffffff49baaddeaddeaddeadde41c7879c020000c45afbff4d8997a8020000e8000000009041bbe5a3fbffe92bffffff41bbe599fbffe920ffffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 57 10 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 26 CMP [r13|DWORD[.] * 8 + 12] y: 131072 size: DWORD  <||@
  Comment 78 28 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132  <||@
  Comment 84 block B3 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 87 34 rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 90 36 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 94 38 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 94 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 101 40 r11|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 107 42 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: =  <||@
  Comment 117 44 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 120 46 r10|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 126 48 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: =  <||@
  Comment 130 50 r14|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 136 52 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 139 54 JUMP ~[] destination: B3 -> B4  <||@
  Comment 144 block B131 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 144 1424 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 1426 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10]  <||@
  Comment 144 [rsi:0, r13:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r14|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 11  <||@
  Comment 150 1428 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 153 1430 JUMP ~[] destination: B131 -> B4  <||@
  Comment 153 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 153 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 153 58 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 156 60 BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131  <||@
  Comment 158 block B5 null  <||@
  Comment 158 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 64 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 162 66 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 166 68 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 173 70 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 180 72 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10  <||@
  Comment 186 block B6 null  <||@
  Comment 186 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 76 r8|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 190 78 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 194 80 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 197 82 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 203 84 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 206 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8  <||@
  Comment 212 block B8 null  <||@
  Comment 212 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 100 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 216 102 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 225 104 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 234 106 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 243 108 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 252 110 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 256 112 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 263 114 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 263 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 270 116 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 270 118 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 273 120 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 276 122 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 281 124 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 284 126 JUMP ~[] destination: B8 -> B11  <||@
  Comment 284 block B11 null  <||@
  Comment 284 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 284 160 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 288 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B34 falseDestination: B11 -> B13  <||@
  Comment 294 block B13 null  <||@
  Comment 294 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 172 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 298 174 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 301 176 r11|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 305 178 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 308 180 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 314 block B14 null  <||@
  Comment 314 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 184 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 321 186 JUMP ~[] destination: B14 -> B18  <||@
  Comment 321 block B18 null  <||@
  Comment 321 210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 212 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 325 214 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 328 216 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 334 block B20 null  <||@
  Comment 334 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 224 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 338 226 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 344 228 r11|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 348 230 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 351 232 JUMP ~[] destination: B20 -> B21  <||@
  Comment 351 block B21 null  <||@
  Comment 351 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 236 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 355 238 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 358 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 364 block B23 null  <||@
  Comment 364 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 248 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 368 250 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 374 252 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 378 254 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 381 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 381 block B24 null  <||@
  Comment 381 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 260 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 385 262 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 388 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 394 block B26 null  <||@
  Comment 394 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 272 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 398 274 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 404 276 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 408 278 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 411 280 JUMP ~[] destination: B26 -> B27  <||@
  Comment 411 block B27 null  <||@
  Comment 411 282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 411 284 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 414 286 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 417 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B34 falseDestination: B27 -> B29  <||@
  Comment 423 block B29 null  <||@
  Comment 423 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 298 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 427 300 r11|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 433 302 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 436 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B34 falseDestination: B29 -> B31  <||@
  Comment 442 block B31 null  <||@
  Comment 442 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 314 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 316 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 451 318 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 454 320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 460 block B33 null  <||@
  Comment 460 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 330 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 465 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 465 block B34 null  <||@
  Comment 465 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 166 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 470 338 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 474 340 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 478 342 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 485 344 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 495 346 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 499 348 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 506 350 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 506 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 516 352 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 519 354 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 525 356 JUMP ~[] destination: B34 -> B35  <||@
  Comment 525 block B35 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 525 358 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 360 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 362 BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129  <||@
  Comment 538 block B36 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 538 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 366 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 543 368 CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74]  <||@
  Comment 543 [r11:0, r13:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4 
     locals:  |r13|QWORD[.]  |-  |-  |r10|DWORD  |-   <||@
  Comment 543 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 370 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127  <||@
  Comment 553 block B37 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 553 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 374 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 376 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 563 378 stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 567 380 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 569 382 BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 575 block B39 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 575 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 398 r11|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 579 400 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 582 402 BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B43 falseDestination: B39 -> B41  <||@
  Comment 588 block B43 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 588 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 406 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 592 408 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 428 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 601 430 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 604 432 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99]  <||@
  Comment 604 7  <||@
  Comment 615 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 620 [stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 621 434 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 626 436 rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 628 438 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 631 440 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 634 442 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 639 444 JUMP ~[] destination: B43 -> B88  <||@
  Comment 639 block B88 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 639 924 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 639 926 r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 643 928 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 643 [rsi:0, r8:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 930 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 651 932 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 651 [rsi:0, r8:0, r9:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 655 934 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 936 r13|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 671 938 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 674 940 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123  <||@
  Comment 680 block B89 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 680 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 944 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 687 946 rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 692 948 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 694 950 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 700 block B91 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 700 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 960 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 962 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 713 964 rdi|DWORD = SETCC condition: =  <||@
  Comment 721 966 JUMP ~[] destination: B91 -> B92  <||@
  Comment 721 block B92 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 721 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 721 970 rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 729 972 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 735 974 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98  <||@
  Comment 741 block B93 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 741 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 978 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 745 980 r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 748 982 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 751 984 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97  <||@
  Comment 757 block B94 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 757 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 988 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 761 990 r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 767 992 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 772 994 r11|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 776 996 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 779 998 r10|DWORD = MOVSXB r10|DWORD size: DWORD  <||@
  Comment 783 1000 TEST r10|DWORD y: 255 size: DWORD  <||@
  Comment 790 1002 BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B103 falseDestination: B94 -> B109  <||@
  Comment 796 block B103 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 796 1082 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 796 1084 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1086 BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 804 block B104 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 804 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 1090 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99]  <||@
  Comment 804 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 804 {infopoint: SAFEPOINT}  <||@
  Comment 804 11  <||@
  Comment 810 1092 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1094 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 816 1096 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 819 1098 JUMP ~[] destination: B104 -> B35  <||@
  Comment 824 block B41 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 824 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 414 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 824 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 831 416 BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B43 falseDestination: B41 -> B44  <||@
  Comment 842 block B98 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 842 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 1022 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 846 1024 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 852 1026 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122  <||@
  Comment 858 block B99 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 858 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 1030 rcx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 862 1032 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 864 1034 rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 867 1036 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 869 1038 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 871 1040 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121  <||@
  Comment 877 block B100 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 877 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1044 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 883 1046 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 886 1048 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120  <||@
  Comment 892 block B101 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 892 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 1052 r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 898 1054 rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 904 1056 MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 909 1058 rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD  <||@
  Comment 914 1060 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 919 1062 r11|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 923 1064 r11|DWORD = SHL r11|DWORD y: 8 size: DWORD  <||@
  Comment 927 1066 r10|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 931 1068 r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 934 1070 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 940 1072 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 943 1078 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 946 1074 BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B103 falseDestination: B101 -> B109  <||@
  Comment 952 block B109 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 952 1148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 952 1150 r10|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 960 1152 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 960 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 967 1154 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119  <||@
  Comment 973 block B110 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 973 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 1158 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 977 1160 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 981 1162 r9|QWORD = LEA [r10|QWORD + 24] size: QWORD  <||@
  Comment 985 1164 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 987 1166 BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115  <||@
  Comment 993 block B111 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 993 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 1170 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 996 1172 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 1002 block B113 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1002 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 1206 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1006 1208 AMD64PREFETCH ~[r10|QWORD + 216] instr: 0  <||@
  Comment 1014 1210 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1014 1212 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1014 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1024 1214 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1034 1216 JUMP ~[] destination: B113 -> B114  <||@
  Comment 1034 block B114 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1034 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1034 1220 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1037 1222 r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1044 1224 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1047 1226 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1047 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1055 1228 MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1059 1230 MOV (x: [r10|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1063 1232 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1070 1234 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1075 1236 r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1080 1238 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1084 1240 MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1088 1242 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99]  <||@
  Comment 1088 [rsi:0, r8:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2           
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1088 {infopoint: SAFEPOINT}  <||@
  Comment 1088 11  <||@
  Comment 1094 1244 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1246 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1100 1248 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 1250 JUMP ~[] destination: B114 -> B35  <||@
  Comment 1108 block B90 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1108 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 954 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1113 956 JUMP ~[] destination: B90 -> B92  <||@
  Comment 1118 block B115 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1118 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1118 1254 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1118 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1128 1256 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1138 1258 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1141 1260 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1147 block B117 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1147 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 1294 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1151 1296 AMD64PREFETCH ~[r10|QWORD + 216] instr: 0  <||@
  Comment 1159 1298 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1159 1300 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1159 block B118 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1159 1302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1159 1304 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1162 1306 r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1169 1308 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1172 1310 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1172 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1180 1312 MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1184 1314 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1192 1316 MOV (x: [r10|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1196 1318 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1203 1320 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1208 1322 r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1213 1324 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1217 1326 MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1221 1328 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99]  <||@
  Comment 1221 [rsi:0, r8:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2           
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1221 {infopoint: SAFEPOINT}  <||@
  Comment 1221 11  <||@
  Comment 1227 1330 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1230 1332 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1233 1334 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1236 1336 JUMP ~[] destination: B118 -> B35  <||@
  Comment 1241 block B105 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1241 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 1102 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1241 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1251 1104 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1261 1106 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1261 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1273 1108 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1279 block B106 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1279 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 1112 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1287 1114 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1292 1116 r11|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1297 1118 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1301 1120 MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1305 1122 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99]  <||@
  Comment 1305 [rsi:0, r10:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2            
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r10|DWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1305 {infopoint: SAFEPOINT}  <||@
  Comment 1305 11  <||@
  Comment 1311 1124 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 1126 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1317 1128 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 1130 JUMP ~[] destination: B106 -> B35  <||@
  Comment 1325 block B44 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1325 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 448 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1327 450 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1331 452 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1336 454 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1336 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1346 456 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1356 458 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1359 460 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1359 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1366 462 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1372 block B46 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1372 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1372 472 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 1372 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 1384 474 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126  <||@
  Comment 1390 block B47 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1390 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1390 478 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1398 480 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1398 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1408 482 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1416 484 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125  <||@
  Comment 1422 block B48 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1422 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 488 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD  <||@
  Comment 1430 490 r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74]  <||@
  Comment 1430 [rbx:0, rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1430 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1439 492 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1442 494 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1448 block B50 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1448 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 506 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1452 508 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1457 510 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1465 512 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1472 514 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1477 516 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1482 518 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1488 520 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1493 block B52 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1493 534 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1504 536 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1509 538 r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1517 540 CMP (x: r8|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1517 [rax:0, rbx:0, rbp:0, r10:0, r14:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1525 542 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84  <||@
  Comment 1531 block B53 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1531 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1531 546 stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1535 548 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1539 550 r14|DWORD[.] = MOV [r14|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1544 552 rax|QWORD = MOV [r14|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1544 [rbx:0, rbp:0, r10:0, r14:0, stack:4, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1544 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1552 554 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1555 556 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79  <||@
  Comment 1561 block B79 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1561 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 826 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1564 828 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 1570 block B80 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1570 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1570 832 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1574 834 rax|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1579 836 rax|DWORD[.] = MOV [rax|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 1582 838 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1586 840 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 842 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99]  <||@
  Comment 1589 8  <||@
  Comment 1591 {HotSpotMethod<NodeClass.deepHashCode0(Object)>}  <||@
  Comment 1596 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |-  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |stack:68|DWORD     |                   |   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1597 844 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1601 846 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1603 848 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1603 block B81 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1603 850 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1603 852 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99]  <||@
  Comment 1603 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |rsi|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1603 {infopoint: SAFEPOINT}  <||@
  Comment 1603 11  <||@
  Comment 1609 854 r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD  <||@
  Comment 1613 856 r8|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1621 858 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1626 860 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1631 862 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1635 864 JUMP ~[] destination: B81 -> B51  <||@
  Comment 1635 block B51 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1635 522 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1635 524 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1643 526 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1643 [rax:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1650 528 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1650 [rax:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1650 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1658 530 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1661 532 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87  <||@
  Comment 1672 block B54 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1672 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 560 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 1672 {NarrowOop[Class:int]}  <||@
  Comment 1679 562 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1685 block B59 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1685 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 608 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 1685 {NarrowOop[Class:long]}  <||@
  Comment 1692 610 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 1698 block B64 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1698 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 662 rax|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1702 664 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1706 666 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 1706 {NarrowOop[Class:boolean]}  <||@
  Comment 1713 668 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68  <||@
  Comment 1719 block B68 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1719 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 702 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 1719 {NarrowOop[Class:float]}  <||@
  Comment 1726 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1732 block B70 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1732 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 724 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 1732 {NarrowOop[Class:double]}  <||@
  Comment 1739 726 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1745 block B72 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1745 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1745 754 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 1745 {NarrowOop[Class:short]}  <||@
  Comment 1752 756 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1758 block B74 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1758 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 776 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 1758 {NarrowOop[Class:char]}  <||@
  Comment 1765 778 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1771 block B76 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1771 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 798 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 1771 {NarrowOop[Class:byte]}  <||@
  Comment 1778 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1784 block B78 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1784 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 820 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1788 822 JUMP ~[] destination: B78 -> B81  <||@
  Comment 1793 block B55 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1793 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1793 566 CMP (x: r13|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1798 568 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1804 block B56 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1804 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 572 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1809 574 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1814 576 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1818 578 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1822 580 rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1827 582 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1831 584 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1834 586 JUMP ~[] destination: B56 -> B81  <||@
  Comment 1839 block B60 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1839 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 614 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1844 616 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1849 618 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1853 620 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1856 622 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 1862 block B61 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1862 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1862 626 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1866 628 rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1871 630 rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD  <||@
  Comment 1875 632 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1878 634 rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1885 636 rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1888 638 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1891 640 rsi|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 1893 642 JUMP ~[] destination: B61 -> B81  <||@
  Comment 1898 block B65 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1898 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 672 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1903 674 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 676 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1911 678 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1914 680 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99]  <||@
  Comment 1914 9  <||@
  Comment 1919 {HotSpotMethod<Fields.getBoolean(Object, int)>}  <||@
  Comment 1924 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1925 682 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1927 684 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1933 block B67 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1933 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1933 694 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1938 696 rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD  <||@
  Comment 1942 698 JUMP ~[] destination: B67 -> B81  <||@
  Comment 1947 block B69 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1947 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 708 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1950 710 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1955 712 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1959 714 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99]  <||@
  Comment 1959 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1959 9  <||@
  Comment 1964 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1965 716 rsi|DWORD = VMOVD xmm0|SINGLE  <||@
  Comment 1969 718 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1973 720 JUMP ~[] destination: B69 -> B81  <||@
  Comment 1978 block B66 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1978 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 688 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1982 690 JUMP ~[] destination: B66 -> B81  <||@
  Comment 1987 block B71 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1987 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1987 730 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1990 732 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1995 734 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1999 736 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99]  <||@
  Comment 1999 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1999 9  <||@
  Comment 2004 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2005 738 rsi|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 2010 740 rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 2017 742 rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2020 744 rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD  <||@
  Comment 2025 746 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2028 748 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 2030 750 JUMP ~[] destination: B71 -> B81  <||@
  Comment 2035 block B73 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2035 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 760 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 762 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2043 764 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2047 766 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99]  <||@
  Comment 2047 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 2047 9  <||@
  Comment 2052 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2053 768 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2057 770 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2059 772 JUMP ~[] destination: B73 -> B81  <||@
  Comment 2064 block B75 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2064 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2064 782 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2067 784 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 786 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2076 788 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99]  <||@
  Comment 2076 9  <||@
  Comment 2079 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 2084 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2085 790 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2089 792 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2091 794 JUMP ~[] destination: B75 -> B81  <||@
  Comment 2096 block B77 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2096 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 804 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 806 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2104 808 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2108 810 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99]  <||@
  Comment 2108 9  <||@
  Comment 2111 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 2116 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2117 812 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2121 814 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2123 816 JUMP ~[] destination: B77 -> B81  <||@
  Comment 2128 block B87 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2128 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2128 912 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2133 914 rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 2139 916 rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2142 918 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2145 920 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 922 JUMP ~[] destination: B87 -> B88  <||@
  Comment 2155 block B49 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2155 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2155 498 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2161 500 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2167 502 JUMP ~[] destination: B49 -> B88  <||@
  Comment 2172 block B38 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2172 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2172 386 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2177 388 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74]  <||@
  Comment 2177 [r11:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2177 {infopoint: SAFEPOINT}  <||@
  Comment 2177 11  <||@
  Comment 2183 390 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2188 392 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 394 JUMP ~[] destination: B38 -> B35  <||@
  Comment 2198 block B112 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2198 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2198 1176 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2203 1178 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2207 1180 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2207 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2217 1182 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2222 1184 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2227 1186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2227 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2232 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2233 1188 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2236 1190 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2241 1192 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2245 1194 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2249 1196 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2249 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2259 1198 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2269 1200 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 1202 JUMP ~[] destination: B112 -> B114  <||@
  Comment 2279 block B116 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2279 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2279 1264 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2284 1266 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2288 1268 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2288 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2298 1270 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2303 1272 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2308 1274 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2308 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2313 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2314 1276 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2317 1278 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2322 1280 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2326 1282 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2330 1284 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2330 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2340 1286 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2350 1288 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1290 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2360 block B129 null  <||@
  Comment 2360 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2360 1418 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2369 12  <||@
  Comment 2379 block B15 null  <||@
  Comment 2379 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2379 190 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2383 192 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2390 194 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2390 block B16 loop 1 depth 1 header:1915|LoopBegin  <||@
  Comment 2390 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2400 198 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2406 200 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 2410 202 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2413 204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B18 falseDestination: B16 -> B16  <||@
  Comment 2420 block B10 null  <||@
  Comment 2420 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 130 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2425 132 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2430 134 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 2435 140 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2435 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2445 142 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2448 144 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2451 146 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2454 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2459 150 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2462 152 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2465 154 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 2465 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2470 [r13:0, stack:36, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |-  |-   <||@
  Comment 2471 156 JUMP ~[] destination: B10 -> B11  <||@
  Comment 2476 block B127 null  <||@
  Comment 2476 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1402 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2481 1404 r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5]  <||@
  Comment 2487 1406 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2487 block B128 null  <||@
  Comment 2487 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2487 1410 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2494 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2501 1414 DEOPT info [bci:74]  <||@
  Comment 2501 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2506 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2507 block B82 null  <||@
  Comment 2507 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2507 868 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2512 870 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2512 block B83 null  <||@
  Comment 2512 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2512 874 r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5]  <||@
  Comment 2518 882 JUMP ~[] destination: B83 -> B86  <||@
  Comment 2518 block B86 null  <||@
  Comment 2518 902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2518 894 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2523 896 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 898 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 2533 904 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2540 906 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2547 908 DEOPT info [bci:16, 11, 40, 2, 99]  <||@
  Comment 2547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2552 [rcx:0, r9:0, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0            |1             |2          |3         |4  |5  |6  |7  |8 
     locals:  |r9|DWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2553 block B45 null  <||@
  Comment 2553 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2553 466 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2559 468 JUMP ~[] destination: B45 -> B128  <||@
  Comment 2561 block B57 null  <||@
  Comment 2561 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2561 590 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2566 592 JUMP ~[] destination: B57 -> B58  <||@
  Comment 2566 block B58 null  <||@
  Comment 2566 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2566 596 r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5]  <||@
  Comment 2572 604 JUMP ~[] destination: B58 -> B86  <||@
  Comment 2574 block B84 null  <||@
  Comment 2574 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2574 886 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2579 888 JUMP ~[] destination: B84 -> B85  <||@
  Comment 2579 block B85 null  <||@
  Comment 2579 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2579 892 r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5]  <||@
  Comment 2585 900 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2587 block B123 null  <||@
  Comment 2587 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2587 1374 r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5]  <||@
  Comment 2593 1378 JUMP ~[] destination: B123 -> B124  <||@
  Comment 2593 block B124 null  <||@
  Comment 2593 1380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2593 1376 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2598 1382 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2605 1384 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2612 1386 DEOPT info [bci:52, 2, 99]  <||@
  Comment 2612 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2617 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2         |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3         |4 
     locals:  |rsi|QWORD[.]  |-  |-  |r8|DWORD  |-   <||@
  Comment 2618 block B1 null  <||@
  Comment 2618 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2618 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007]  <||@
  Comment 2618 {Object[d.a@1340615007]}  <||@
  Comment 2628 18 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2631 20 r10|DWORD = MOVE input: int[-228619|0xfffffffffffc82f5]  <||@
  Comment 2637 22 JUMP ~[] destination: B1 -> B133  <||@
  Comment 2637 block B133 null  <||@
  Comment 2637 1442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2637 1444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2644 1446 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2651 1448 DEOPT info [bci:0]  <||@
  Comment 2651 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2656 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2657 block B126 null  <||@
  Comment 2657 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 1396 r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd]  <||@
  Comment 2663 1398 JUMP ~[] destination: B126 -> B128  <||@
  Comment 2668 block B125 null  <||@
  Comment 2668 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 1390 r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd]  <||@
  Comment 2674 1392 JUMP ~[] destination: B125 -> B128  <||@
  Comment 2679 block B122 null  <||@
  Comment 2679 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2679 1366 r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 2685 1370 JUMP ~[] destination: B122 -> B124  <||@
  Comment 2687 block B97 null  <||@
  Comment 2687 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2687 1014 r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5]  <||@
  Comment 2693 1018 JUMP ~[] destination: B97 -> B124  <||@
  Comment 2695 block B132 null  <||@
  Comment 2695 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2695 1434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008]  <||@
  Comment 2695 {Object[d.a@1099189008]}  <||@
  Comment 2705 1436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 1438 r10|DWORD = MOVE input: int[-229651|0xfffffffffffc7eed]  <||@
  Comment 2714 1440 JUMP ~[] destination: B132 -> B133  <||@
  Comment 2716 block B119 null  <||@
  Comment 2716 1338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1340 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291]  <||@
  Comment 2716 {Object[d.a@1416319291]}  <||@
  Comment 2726 1342 MOV [r15|QWORD + 668] y: -347964 size: DWORD  <||@
  Comment 2737 1344 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2744 1346 DEOPT info [bci:41, 99]  <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2749 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2750 block B63 null  <||@
  Comment 2750 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2750 650 r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5]  <||@
  Comment 2756 658 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2761 block B107 null  <||@
  Comment 2761 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2761 1134 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291]  <||@
  Comment 2761 {Object[d.a@1416319291]}  <||@
  Comment 2771 1136 MOV [r15|QWORD + 668] y: -304444 size: DWORD  <||@
  Comment 2782 1138 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2789 1140 DEOPT info [bci:41, 99]  <||@
  Comment 2789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2794 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2795 block B121 null  <||@
  Comment 2795 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2795 1358 r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5]  <||@
  Comment 2801 1362 JUMP ~[] destination: B121 -> B124  <||@
  Comment 2806 block B120 null  <||@
  Comment 2806 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1350 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 2812 1354 JUMP ~[] destination: B120 -> B124  <||@
  Comment 2817 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2817 4  <||@
  Comment 2823 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2823 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8007[org.graalvm.collections.EconomicMapImpl.createHash()]"
  method "HotSpotCompilation-8007[org.graalvm.collections.EconomicMapImpl.createHash()]"
  date 1527005144400
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 10785f0a0 448b560849c1e203493bc20f85af6dfafe900f1f80000000000f1f800000000089842400c0feff4883ec4848896c24404889742430448b6e184585ed0f84f809000042813ced0c000000000002000f83330a00008b560c8b4e10448b56204181fa770300d841bb0800000041b804000000450f44c34585d241ba08000000450f44c2448bf2442bf1458bd0e9090000008505d0fe02fd41d1e2453bd67ef2498b5760498b4f70458bda41c1e3024181fbffffff000f83ba080000458d43174183e0f84d63c04d8bc84c03ca4c3bc90f87a00800004d894f60410f188410c0000000410f18841000010000410f18841040010000410f1884108001000044895a0c48c70201000000c74208f50000f8488bc2458bf344896c24244c8bee4183fe010f8cab000000488d70104d63d64d8d5ae04d85db0f8d1108000049c7c0000000004d8d5af04d3bc30f8f11000000c5f9efc0c4a17a7f04064d8d58104d8bc34d8d5af84d3bc30f8f11000000c5f9efc0c4a1f97e04064d8d58084d8bc34d8d5afc4d3bc30f8f11000000c5f9efc0c4a1797e04064d8d58044d8bc349ffca4d3bc20f8f2a000000468824064d8bd849ffc34d3bda0f8f1700000046886406014d8d58024d3bda0f8f050000004688640602448b54242448c1e8034189451c498bf548c1ee0949bb00e01b17010000004688241e418bf248c1e60349bae0f509c0070000004c8bde41ba00000000666690453b550c0f8d1e070000418bcad1e1413b4b0c0f8383070000418b5c8b10418bfaffc7897c242885db0f843d060000458b5d204585db0f85ec000000894c2420448954242c48c1e303488bf348b8ffffffffffffffff90e8d46ffafe908bf0c1ee1033f0448bde448bd0488b742430448b4618438504c4448b4e1c438504cc428b0cc50c000000448b6c242041ffc5413bcd0f8673070000458bf049c1e603438b5cae1085db0f84980100008b3cdd0800000081ffbc3e01f8400f94c7400fb6ff428b14cd0c00000081f9000200000f83650000008bcaffc94423d9413bd30f868a0700008b442428470fbe54cb10438844cb10450fb6da41ffcb450fbed241f7c2ff0000000f859c00000085ff0f85b501000085053cfc02fd4d8bde448bd04c8beee9d8feffff4181fb750300d80f8407ffffffe9e30100008b44242881f9000002000f831d0700008bcad1e9ffc94123cbd1e13bd10f867e070000448bd941ffc3413bd30f867a070000460fbe54c910430fbe54cb10428844c9108bc8c1f90843884ccb10440fb6da41c1e308450fb6d2450bda458bd341ffca4585db458bda0f8464ffffff468b14c5080000004181faf52200f80f85cf0600004d8b57604d8b47704d8d4a1885ff0f857d0000004d3bc80f87ac0400004d894f60410f1882d800000048b9e0f509c00700000048bf00e01b17010000004d8bc24c8b89a80000004d890a41c74208bc3e01f845895a0c41895a104d8bd049c1ea03478954ae104f8d54ae1049c1ea094588243a850520fb02fd4d8bde448bd04c8beee9bcfdffffbf00000000e973feffff48b9e0f509c00700000048bf00e01b17010000004d3bc80f876c0400004d894f60410f1882d80000004d8bc24c8b89a80000004d890a41c74208bc3e01f845895a0c448b1cdd1000000045895a104d8bd049c1ea03478954ae104f8d54ae1049c1ea094588243a85059bfa02fd4d8bde448bd04c8beee937fdffff48b9e0f509c00700000048bf00e01b170100000042813cc508000000f52200f80f85ca050000448b14dd10000000478954ae104f8d5cae1049c1eb094588243b850547fa02fd4d8bde448bd04c8beee9e3fcffff8bc7894c2420448954242c48b9e0f509c00700000048bf00e01b1701000000498bf54181fb770300d80f849d04000042813cdd080000009ea003f80f85f3040000448b14dd0800000049bbc0af0cc0070000004e3b1cd5300000000f85de040000448b14dd2c000000460fb61cd5300000004585db0f84c3020000895c241c4489542418468b1cd514000000448bc349c1e0034c8944241044895c240c41b800000000e98e0000006666660f1f8400000000004489442408448b34c514000000463b04f50c0000000f83130400008944240449c1e603478b7486104a8b04f5480000004885c00f846f000000453be80f86a903000048c1e5034a8b44c5108b04d848c1e003488bf06690e8446efafe900344240c8bf085051df902fd446bd60d448b44240841ffc0448954240c448b5424188b5c241c428b04d5100000008b2cc50c000000448b2ced0c000000453be80f8f5dffffffe9c80100004181fe1a6f00d80f846c0000004181fe686f00d80f848d0000008b44240448c1e0034181fe4e6f00d80f84b30000004181fe276f00d80f84d70000004181fe346f00d80f84f20000004181fe756f00d80f84150100004181fe5b6f00d80f84250100004181fe416f00d80f84380100008b74240ce942ffffff443b6c24080f86f5020000448b442408448b54240c8b5c241c48c1e5034a8b74c510440314de418bf2e914ffffff448b442408448b54240c8b5c241c453be80f867803000048c1e5034a8b74c510488b34de4963d2488bce48c1e9204833ce4803d18bf2e9d9feffff448b442408488bf0488b542410418bc80f1f440000e87c68fafe9085c00f842d000000448b54240c418d7207e9a8feffff488bf0488b5424108b4c2408e85468fafe90c5f97ec60374240ce989feffff8b74240ce980feffff488bf0488b5424108b4c2408e82c68fafe90c4e1f97ec6488bd648c1ea204833f2486354240c4803f28bf6e950feffff488bf0488b5424108b4c2408e8fc67fafe900344240c8bf0e933feffff488bf0488b5424108b4c2408666690e8dc67fafe900344240c8bf0e913feffff488bf0488b5424108b4c2408666690e8bc67fafe900344240c8bf0e9f3fdffff448b54240c418bf2c1ee104133f2448bde488b742430e914faffff41bb0000000041ba00000000e903faffff448954242c8505dff602fd448b5424284c8b6c2430e97af9ffff44895c2420895c240c48be680b00c007000000ba02000000b901000000e8887473ff904c8bd0448b5c24208b5c240c8b44242848b9e0f509c00700000048bf00e01b1701000000488b742430e923fbffff44895c2420895c240c48be680b00c007000000ba02000000b901000000e8377473ff904c8bd0448b5c24208b5c240c8b44242848b9e0f509c00700000048bf00e01b1701000000488b742430e94ffbffff488b6c24404883c44885051ff602fdc5f877c3c5f9efc049c7c00000000066660f1f840000000000c4a17e7f04064d8d40204d3bc37ef1e9cdf7ffff448954242c448974242844896c242448baa80700c0070000004c8bc6488bf2418bd3b9000000004d8be8458bf3e89a7373ff90e970f7ffff448954242c41bae570fcff4589979c0200004d89a7a8020000e8947bfafe90448b54240c41bbe50afcff448b442408488b4c2410448b4c241845899f9c0200004d89a7a8020000e8667bfafe9041baed66fcffebb6448b54240c41bbe534fcffebc8448b54240c41bbe53ffcffebbb41bbe5b2faff448b44242c45899f9c0200004d89a7a8020000e8257bfafe9049ba685f6abf070000004d8bda41baf582fcff4589979c0200004d899fa8020000e8fe7afafe9041bacd65fcffe94bffffff41badd61fcffe940ffffff41bbedcffbffeba241bbe5e1fbffeb9a49ba985f6abf070000004d8bda41baed7efcffebb149ba385f6abf0700000041c7879c020000c4b0faff4d8997a8020000e8a17afafe9041bbe528fcffe90dffffff49ba385f6abf0700000041c7879c020000c45afbff4d8997a8020000e8747afafe9041bbe5a3fbffe92bffffff41bbe599fbffe920ffffffe87aaa3eff90e85479fafe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@1f697f71 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r13|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 57 10 TEST (x: r13|DWORD[.], y: r13|DWORD[.]) size: DWORD  <||@
  Comment 60 12 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 66 block B2 null  <||@
  Comment 66 24 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 26 CMP [r13|DWORD[.] * 8 + 12] y: 131072 size: DWORD  <||@
  Comment 78 28 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B132  <||@
  Comment 84 block B3 null  <||@
  Comment 84 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 32 rdx|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 87 34 rcx|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 90 36 r10|DWORD[.] = MOV [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 94 38 CMP r10|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 94 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 101 40 r11|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 107 42 r8|DWORD = CMOVE (falseValue: int[4|0x4], ~trueValue: r11|DWORD) condition: =  <||@
  Comment 117 44 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 120 46 r10|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 126 48 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r10|DWORD) condition: =  <||@
  Comment 130 50 r14|DWORD = SUB (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 136 52 r10|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 139 54 JUMP ~[] destination: B3 -> B4  <||@
  Comment 144 block B131 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 144 1424 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 1426 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:10]  <||@
  Comment 144 [rsi:0, r13:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1          |2          |3  |4 
     locals:  |rsi|QWORD[.]  |r14|DWORD  |r10|DWORD  |-  |-   <||@
  Comment 144 {infopoint: SAFEPOINT}  <||@
  Comment 144 11  <||@
  Comment 150 1428 r10|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 153 1430 JUMP ~[] destination: B131 -> B4  <||@
  Comment 153 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 153 56 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 153 58 CMP (x: r10|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 156 60 BRANCH trueDestinationProbability: 0.39168594219503233 condition: > trueDestination: B4 -> B5 falseDestination: B4 -> B131  <||@
  Comment 158 block B5 null  <||@
  Comment 158 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 158 64 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 162 66 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 166 68 r11|DWORD = SHL r10|DWORD y: 2 size: DWORD  <||@
  Comment 173 70 CMP r11|DWORD y: 16777215 size: DWORD  <||@
  Comment 180 72 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B5 -> B6 falseDestination: B5 -> B10  <||@
  Comment 186 block B6 null  <||@
  Comment 186 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 186 76 r8|DWORD = LEA [r11|DWORD + 23] size: DWORD  <||@
  Comment 190 78 r8|DWORD = AND r8|DWORD y: -8 size: DWORD  <||@
  Comment 194 80 r8|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 197 82 r9|QWORD = ADD (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 203 84 CMP (x: r9|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 206 86 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B6 -> B10 falseDestination: B6 -> B8  <||@
  Comment 212 block B8 null  <||@
  Comment 212 98 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 212 100 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 216 102 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 225 104 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 234 106 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 243 108 AMD64PREFETCH ~[r8|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 252 110 MOV (x: [rdx|QWORD + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 256 112 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 263 114 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 263 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 270 116 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 270 118 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 273 120 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 276 122 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 281 124 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 284 126 JUMP ~[] destination: B8 -> B11  <||@
  Comment 284 block B11 null  <||@
  Comment 284 158 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 284 160 CMP r14|DWORD y: 1 size: DWORD  <||@
  Comment 288 162 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B11 -> B34 falseDestination: B11 -> B13  <||@
  Comment 294 block B13 null  <||@
  Comment 294 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 294 172 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 298 174 r10|QWORD = MOVSXD r14|DWORD size: QWORD  <||@
  Comment 301 176 r11|QWORD = LEA [r10|QWORD - 32] size: QWORD  <||@
  Comment 305 178 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 308 180 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 314 block B14 null  <||@
  Comment 314 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 314 184 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 321 186 JUMP ~[] destination: B14 -> B18  <||@
  Comment 321 block B18 null  <||@
  Comment 321 210 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 321 212 r11|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 325 214 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 328 216 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B18 -> B21 falseDestination: B18 -> B20  <||@
  Comment 334 block B20 null  <||@
  Comment 334 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 334 224 xmm0|V128_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 338 226 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V128_BYTE) nZ: XMM oh: VMOVDQU  <||@
  Comment 344 228 r11|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 348 230 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 351 232 JUMP ~[] destination: B20 -> B21  <||@
  Comment 351 block B21 null  <||@
  Comment 351 234 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 351 236 r11|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 355 238 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 358 240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 364 block B23 null  <||@
  Comment 364 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 364 248 xmm0|V64_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 368 250 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V64_BYTE) nZ: XMM oh: VMOVQ  <||@
  Comment 374 252 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 378 254 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 381 256 JUMP ~[] destination: B23 -> B24  <||@
  Comment 381 block B24 null  <||@
  Comment 381 258 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 260 r11|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 385 262 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 388 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 394 block B26 null  <||@
  Comment 394 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 272 xmm0|V32_BYTE = L oc: SIMD<0,0,0,0>  <||@
  Comment 398 274 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V32_BYTE) nZ: XMM oh: VMOVD  <||@
  Comment 404 276 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 408 278 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 411 280 JUMP ~[] destination: B26 -> B27  <||@
  Comment 411 block B27 null  <||@
  Comment 411 282 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 411 284 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 414 286 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 417 288 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B34 falseDestination: B27 -> B29  <||@
  Comment 423 block B29 null  <||@
  Comment 423 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 423 298 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 427 300 r11|QWORD = INC r8|QWORD size: QWORD  <||@
  Comment 433 302 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 436 304 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B34 falseDestination: B29 -> B31  <||@
  Comment 442 block B31 null  <||@
  Comment 442 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 314 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 447 316 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 451 318 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 454 320 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B31 -> B34 falseDestination: B31 -> B33  <||@
  Comment 460 block B33 null  <||@
  Comment 460 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 330 MOVB (x: [rsi|QWORD[.] + r8|QWORD * 1 + 2], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 465 334 JUMP ~[] destination: B33 -> B34  <||@
  Comment 465 block B34 null  <||@
  Comment 465 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 465 166 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 470 338 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 474 340 MOV (x: [r13|QWORD[.] + 28], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 478 342 rsi|QWORD[*] = SHR r13|QWORD[.] y: 9 size: QWORD  <||@
  Comment 485 344 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 495 346 MOVB (x: [rsi|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 499 348 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 506 350 r10|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 506 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 516 352 r11|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 519 354 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 525 356 JUMP ~[] destination: B34 -> B35  <||@
  Comment 525 block B35 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 525 358 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 528 360 CMP (x: r10|DWORD, y: [r13|QWORD[.] + 12]) size: DWORD  <||@
  Comment 532 362 BRANCH trueDestinationProbability: 0.9609436971891705 condition: < trueDestination: B35 -> B36 falseDestination: B35 -> B129  <||@
  Comment 538 block B36 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 538 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 538 366 rcx|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 543 368 CMP (x: rcx|DWORD, y: [r11|QWORD[.] + 12]) size: DWORD state [bci:74]  <||@
  Comment 543 [r11:0, r13:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3          |4 
     locals:  |r13|QWORD[.]  |-  |-  |r10|DWORD  |-   <||@
  Comment 543 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 547 370 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B36 -> B37 falseDestination: B36 -> B127  <||@
  Comment 553 block B37 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 553 372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 553 374 rbx|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 558 376 rdi|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 563 378 stack:40|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 567 380 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 569 382 BRANCH trueDestinationProbability: 0.0026265616939192067 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 575 block B39 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 575 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 575 398 r11|DWORD[.] = MOV [r13|QWORD[.] + 32] size: DWORD  <||@
  Comment 579 400 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 582 402 BRANCH trueDestinationProbability: 0.7054647516058844 condition: = trueDestination: B39 -> B43 falseDestination: B39 -> B41  <||@
  Comment 588 block B43 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 588 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 406 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 592 408 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 597 428 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 601 430 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 604 432 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:48, 2, 99]  <||@
  Comment 604 7  <||@
  Comment 615 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 620 [stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:398) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 621 434 rsi|DWORD = SHR rax|DWORD y: 16 size: DWORD  <||@
  Comment 626 436 rsi|DWORD = XOR (x: rax|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 628 438 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 631 440 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 634 442 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 639 444 JUMP ~[] destination: B43 -> B88  <||@
  Comment 639 block B88 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 639 924 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 639 926 r8|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 643 928 NULLCHECK [r12|QWORD[*] + r8|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 643 [rsi:0, r8:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 647 930 r9|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 651 932 NULLCHECK [r12|QWORD[*] + r9|DWORD[.] * 8] state [bci:52, 2, 99]  <||@
  Comment 651 [rsi:0, r8:0, r9:0, stack:48]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 651 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 655 934 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 663 936 r13|DWORD = INC stack:48|DWORD size: DWORD  <||@
  Comment 671 938 CMP (x: rcx|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 674 940 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B88 -> B89 falseDestination: B88 -> B123  <||@
  Comment 680 block B89 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 680 942 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 680 944 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 687 946 rbx|DWORD[.] = MOV [r14|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 692 948 TEST (x: rbx|DWORD[.], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 694 950 BRANCH trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B89 -> B90 falseDestination: B89 -> B91  <||@
  Comment 700 block B91 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 700 958 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 960 rdi|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 707 962 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 707 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 713 964 rdi|DWORD = SETCC condition: =  <||@
  Comment 721 966 JUMP ~[] destination: B91 -> B92  <||@
  Comment 721 block B92 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 721 968 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 721 970 rdx|DWORD = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 729 972 CMP rcx|DWORD y: 512 size: DWORD  <||@
  Comment 735 974 BRANCH trueDestinationProbability: 0.7476633120338436 condition: |<| trueDestination: B92 -> B93 falseDestination: B92 -> B98  <||@
  Comment 741 block B93 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 741 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 741 978 rcx|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 745 980 r11|DWORD = AND (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 748 982 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 751 984 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B93 -> B94 falseDestination: B93 -> B97  <||@
  Comment 757 block B94 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 757 986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 757 988 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 761 990 r10|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 767 992 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 772 994 r11|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 776 996 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 779 998 r10|DWORD = MOVSXB r10|DWORD size: DWORD  <||@
  Comment 783 1000 TEST r10|DWORD y: 255 size: DWORD  <||@
  Comment 790 1002 BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B94 -> B103 falseDestination: B94 -> B109  <||@
  Comment 796 block B103 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 796 1082 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 796 1084 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 798 1086 BRANCH trueDestinationProbability: 0.9601132384921313 condition: = trueDestination: B103 -> B104 falseDestination: B103 -> B105  <||@
  Comment 804 block B104 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 804 1088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 804 1090 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:41, 99]  <||@
  Comment 804 [rsi:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0             |1  |2               |3  |4  |5          |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 804 {infopoint: SAFEPOINT}  <||@
  Comment 804 11  <||@
  Comment 810 1092 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 813 1094 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 816 1096 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 819 1098 JUMP ~[] destination: B104 -> B35  <||@
  Comment 824 block B41 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 824 412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 414 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$1@1642007824]  <||@
  Comment 824 {NarrowOop[Equivalence$1@1642007824]}  <||@
  Comment 831 416 BRANCH trueDestinationProbability: 0.8888016474069853 condition: = trueDestination: B41 -> B43 falseDestination: B41 -> B44  <||@
  Comment 842 block B98 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 842 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 842 1022 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 846 1024 CMP rcx|DWORD y: 131072 size: DWORD  <||@
  Comment 852 1026 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B98 -> B99 falseDestination: B98 -> B122  <||@
  Comment 858 block B99 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 858 1028 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 858 1030 rcx|DWORD = SHR rdx|DWORD size: DWORD  <||@
  Comment 862 1032 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 864 1034 rcx|DWORD = AND (x: rcx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 867 1036 rcx|DWORD = SHL rcx|DWORD size: DWORD  <||@
  Comment 869 1038 CMP (x: rdx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 871 1040 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B99 -> B100 falseDestination: B99 -> B121  <||@
  Comment 877 block B100 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 877 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 1044 r11|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 883 1046 CMP (x: rdx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 886 1048 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B100 -> B101 falseDestination: B100 -> B120  <||@
  Comment 892 block B101 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 892 1050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 892 1052 r10|DWORD = MOVSXB [rcx|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 898 1054 rdx|DWORD = MOVSXB [r11|DWORD + r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 904 1056 MOVB (x: [rcx|DWORD + r9|DWORD[.] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 909 1058 rcx|DWORD = SAR rax|DWORD y: 8 size: DWORD  <||@
  Comment 914 1060 MOVB (x: [r11|DWORD + r9|DWORD[.] * 8 + 16], y: rcx|DWORD) size: BYTE  <||@
  Comment 919 1062 r11|DWORD = MOVZXB rdx|DWORD size: DWORD  <||@
  Comment 923 1064 r11|DWORD = SHL r11|DWORD y: 8 size: DWORD  <||@
  Comment 927 1066 r10|DWORD = MOVZXB r10|DWORD size: DWORD  <||@
  Comment 931 1068 r11|DWORD = OR (x: r11|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 934 1070 r10|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 940 1072 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 943 1078 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 946 1074 BRANCH trueDestinationProbability: 0.8594248816973039 condition: = trueDestination: B101 -> B103 falseDestination: B101 -> B109  <||@
  Comment 952 block B109 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 952 1148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 952 1150 r10|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 960 1152 CMP r10|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 960 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 967 1154 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B109 -> B110 falseDestination: B109 -> B119  <||@
  Comment 973 block B110 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 973 1156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 973 1158 r10|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 977 1160 r8|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 981 1162 r9|QWORD = LEA [r10|QWORD + 24] size: QWORD  <||@
  Comment 985 1164 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 987 1166 BRANCH trueDestinationProbability: 0.6917462436252867 condition: = trueDestination: B110 -> B111 falseDestination: B110 -> B115  <||@
  Comment 993 block B111 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 993 1168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 993 1170 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 996 1172 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 1002 block B113 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1002 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 1206 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1006 1208 AMD64PREFETCH ~[r10|QWORD + 216] instr: 0  <||@
  Comment 1014 1210 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1014 1212 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1014 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1024 1214 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1034 1216 JUMP ~[] destination: B113 -> B114  <||@
  Comment 1034 block B114 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1034 1218 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1034 1220 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1037 1222 r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1044 1224 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1047 1226 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1047 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1055 1228 MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1059 1230 MOV (x: [r10|QWORD[*] + 16], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 1063 1232 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1070 1234 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1075 1236 r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1080 1238 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1084 1240 MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1088 1242 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 129, 99]  <||@
  Comment 1088 [rsi:0, r8:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2           
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 129, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1088 {infopoint: SAFEPOINT}  <||@
  Comment 1088 11  <||@
  Comment 1094 1244 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1097 1246 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1100 1248 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1103 1250 JUMP ~[] destination: B114 -> B35  <||@
  Comment 1108 block B90 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1108 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 954 rdi|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1113 956 JUMP ~[] destination: B90 -> B92  <||@
  Comment 1118 block B115 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1118 1252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1118 1254 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1118 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1128 1256 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1138 1258 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 1141 1260 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B115 -> B116 falseDestination: B115 -> B117  <||@
  Comment 1147 block B117 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1147 1292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1147 1294 MOV (x: [r15|QWORD + 96], y: r9|QWORD) size: QWORD  <||@
  Comment 1151 1296 AMD64PREFETCH ~[r10|QWORD + 216] instr: 0  <||@
  Comment 1159 1298 r10|QWORD[*] = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1159 1300 JUMP ~[] destination: B117 -> B118  <||@
  Comment 1159 block B118 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1159 1302 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1159 1304 r8|QWORD[.] = MOVE r10|QWORD[*] moveKind: QWORD  <||@
  Comment 1162 1306 r9|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 1169 1308 MOV (x: [r10|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 1172 1310 MOV [r10|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1172 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1180 1312 MOV (x: [r10|QWORD[*] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 1184 1314 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1192 1316 MOV (x: [r10|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 1196 1318 r10|DWORD[.] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1203 1320 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1208 1322 r10|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1213 1324 r10|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1217 1326 MOVB (x: [r10|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1221 1328 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 107, 99]  <||@
  Comment 1221 [rsi:0, r8:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2           
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:573) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1221 {infopoint: SAFEPOINT}  <||@
  Comment 1221 11  <||@
  Comment 1227 1330 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1230 1332 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1233 1334 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1236 1336 JUMP ~[] destination: B118 -> B35  <||@
  Comment 1241 block B105 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1241 1100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1241 1102 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1241 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1251 1104 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1261 1106 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 1261 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 1273 1108 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B105 -> B106 falseDestination: B105 -> B107  <||@
  Comment 1279 block B106 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1279 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1279 1112 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1287 1114 MOV (x: [r14|QWORD[.] + r13|DWORD * 4 + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 1292 1116 r11|QWORD[.] = LEA [r14|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1297 1118 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1301 1120 MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1305 1122 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:11, 157, 99]  <||@
  Comment 1305 [rsi:0, r10:0, r14:0, stack:48]at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:792) [bci: 11, duringCall: false, rethrow: false]
              |0             |1               |2            
     locals:  |rsi|QWORD[.]  |stack:36|DWORD  |r10|DWORD[.] 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1305 {infopoint: SAFEPOINT}  <||@
  Comment 1305 11  <||@
  Comment 1311 1124 r11|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 1126 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1317 1128 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1320 1130 JUMP ~[] destination: B106 -> B35  <||@
  Comment 1325 block B44 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1325 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1325 448 rax|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1327 450 stack:48|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1331 452 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1336 454 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 1336 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 1346 456 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 1356 458 rsi|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1359 460 CMP r11|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Equivalence$3@1213634123]  <||@
  Comment 1359 {NarrowOop[Equivalence$3@1213634123]}  <||@
  Comment 1366 462 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 1372 block B46 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1372 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1372 472 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}  <||@
  Comment 1372 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Graph$1;, resolved>;compressed}}  <||@
  Comment 1384 474 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B126  <||@
  Comment 1390 block B47 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1390 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1390 478 r10|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 1398 480 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}  <||@
  Comment 1398 {meta{HotSpotType<Lorg/graalvm/compiler/graph/Node;, resolved>}}  <||@
  Comment 1408 482 CMP (x: r11|QWORD, y: [r10|DWORD * 8 + 48]) size: QWORD  <||@
  Comment 1416 484 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B125  <||@
  Comment 1422 block B48 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1422 486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1422 488 r10|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 44] size: DWORD  <||@
  Comment 1430 490 r11|DWORD = MOVZXB [r10|DWORD[.] * 8 + 48] size: DWORD state [bci:74]  <||@
  Comment 1430 [rbx:0, rsi:0, r10:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0             |1  |2  |3               |4 
     locals:  |rsi|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1430 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1439 492 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1442 494 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 1448 block B50 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 1448 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1448 506 stack:52|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 1452 508 stack:56|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1457 510 r11|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1465 512 r8|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1472 514 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1477 516 stack:68|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1482 518 r8|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1488 520 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1493 block B52 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1493 534 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1504 536 stack:72|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1509 538 r14|DWORD[.] = MOV [rax|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1517 540 CMP (x: r8|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1517 [rax:0, rbx:0, rbp:0, r10:0, r14:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1517 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1525 542 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B52 -> B53 falseDestination: B52 -> B84  <||@
  Comment 1531 block B53 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1531 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1531 546 stack:76|DWORD[.] = MOVE rax|DWORD[.] moveKind: DWORD  <||@
  Comment 1535 548 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1539 550 r14|DWORD[.] = MOV [r14|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1544 552 rax|QWORD = MOV [r14|DWORD[.] * 8 + 72] size: QWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1544 [rbx:0, rbp:0, r10:0, r14:0, stack:4, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1544 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1552 554 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1555 556 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B79  <||@
  Comment 1561 block B79 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1561 824 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1561 826 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1564 828 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B79 -> B80 falseDestination: B79 -> B82  <||@
  Comment 1570 block B80 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1570 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1570 832 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1574 834 rax|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1579 836 rax|DWORD[.] = MOV [rax|QWORD + rbx|DWORD[.] * 8] size: DWORD  <||@
  Comment 1582 838 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1586 840 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1589 842 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<NodeClass.deepHashCode0(Object)> invokeKind: Static config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:338, 11, 40, 2, 99]  <||@
  Comment 1589 8  <||@
  Comment 1591 {HotSpotMethod<NodeClass.deepHashCode0(Object)>}  <||@
  Comment 1596 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:605) [bci: 338, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |-  |stack:72|DWORD  |-  |-  |-  |-  |- 
     stack:   |stack:68|DWORD     |                   |   |                |   |   |   |   |  
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1597 844 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1601 846 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1603 848 JUMP ~[] destination: B80 -> B81  <||@
  Comment 1603 block B81 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1603 850 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1603 852 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:343, 11, 40, 2, 99]  <||@
  Comment 1603 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:607) [bci: 343, duringCall: false, rethrow: false]
              |0                  |1                  |2          |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |rsi|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1603 {infopoint: SAFEPOINT}  <||@
  Comment 1603 11  <||@
  Comment 1609 854 r10|DWORD = IMUL rsi|DWORD y: 13 size: DWORD  <||@
  Comment 1613 856 r8|DWORD = INC stack:72|DWORD size: DWORD  <||@
  Comment 1621 858 stack:68|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1626 860 r10|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 1631 862 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1635 864 JUMP ~[] destination: B81 -> B51  <||@
  Comment 1635 block B51 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1635 522 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1635 524 rax|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1643 526 rbp|DWORD[.] = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1643 [rax:0, rbx:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1643 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1650 528 r13|DWORD = MOV [rbp|DWORD[.] * 8 + 12] size: DWORD state [bci:16, 11, 40, 2, 99]  <||@
  Comment 1650 [rax:0, rbx:0, rbp:0, r10:0, stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0             |1                  |2               |3         |4  |5  |6  |7  |8 
     locals:  |r10|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1650 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1658 530 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1661 532 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B87  <||@
  Comment 1672 block B54 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1672 558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1672 560 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:int]  <||@
  Comment 1672 {NarrowOop[Class:int]}  <||@
  Comment 1679 562 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B59  <||@
  Comment 1685 block B59 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1685 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1685 608 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:long]  <||@
  Comment 1685 {NarrowOop[Class:long]}  <||@
  Comment 1692 610 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B64  <||@
  Comment 1698 block B64 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1698 660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1698 662 rax|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1702 664 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1706 666 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:boolean]  <||@
  Comment 1706 {NarrowOop[Class:boolean]}  <||@
  Comment 1713 668 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B68  <||@
  Comment 1719 block B68 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1719 700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1719 702 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:float]  <||@
  Comment 1719 {NarrowOop[Class:float]}  <||@
  Comment 1726 704 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70  <||@
  Comment 1732 block B70 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1732 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1732 724 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:double]  <||@
  Comment 1732 {NarrowOop[Class:double]}  <||@
  Comment 1739 726 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1745 block B72 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1745 752 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1745 754 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:short]  <||@
  Comment 1745 {NarrowOop[Class:short]}  <||@
  Comment 1752 756 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74  <||@
  Comment 1758 block B74 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1758 774 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1758 776 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:char]  <||@
  Comment 1758 {NarrowOop[Class:char]}  <||@
  Comment 1765 778 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76  <||@
  Comment 1771 block B76 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1771 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1771 798 CMP r14|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Class:byte]  <||@
  Comment 1771 {NarrowOop[Class:byte]}  <||@
  Comment 1778 800 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 1784 block B78 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1784 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1784 820 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1788 822 JUMP ~[] destination: B78 -> B81  <||@
  Comment 1793 block B55 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1793 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1793 566 CMP (x: r13|DWORD, y: stack:72|DWORD) size: DWORD  <||@
  Comment 1798 568 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B57  <||@
  Comment 1804 block B56 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1804 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1804 572 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1809 574 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1814 576 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1818 578 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1822 580 rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1827 582 r10|DWORD = ADD (x: r10|DWORD, ~y: [rsi|QWORD + rbx|DWORD[.] * 8]) size: DWORD  <||@
  Comment 1831 584 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1834 586 JUMP ~[] destination: B56 -> B81  <||@
  Comment 1839 block B60 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1839 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1839 614 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1844 616 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1849 618 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 1853 620 CMP (x: r13|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1856 622 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B60 -> B61 falseDestination: B60 -> B63  <||@
  Comment 1862 block B61 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1862 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1862 626 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: rbp|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@310f47e6 encoding: base: 0 shift: 3  <||@
  Comment 1866 628 rsi|QWORD = MOV [rbp|QWORD[.] + r8|DWORD * 8 + 16] size: QWORD  <||@
  Comment 1871 630 rsi|QWORD = MOV [rsi|QWORD + rbx|DWORD[.] * 8] size: QWORD  <||@
  Comment 1875 632 rdx|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1878 634 rcx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 1885 636 rcx|QWORD = XOR (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1888 638 rdx|QWORD = ADD (x: rdx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 1891 640 rsi|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 1893 642 JUMP ~[] destination: B61 -> B81  <||@
  Comment 1898 block B65 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1898 670 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1898 672 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1903 674 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1906 676 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1911 678 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1914 680 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getBoolean(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:121, 11, 40, 2, 99]  <||@
  Comment 1914 9  <||@
  Comment 1919 {HotSpotMethod<Fields.getBoolean(Object, int)>}  <||@
  Comment 1924 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:580) [bci: 121, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1925 682 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1927 684 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B65 -> B66 falseDestination: B65 -> B67  <||@
  Comment 1933 block B67 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1933 692 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1933 694 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1938 696 rsi|DWORD = LEA [r10|DWORD + 7] size: DWORD  <||@
  Comment 1942 698 JUMP ~[] destination: B67 -> B81  <||@
  Comment 1947 block B69 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1947 706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1947 708 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1950 710 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1955 712 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1959 714 xmm0|SINGLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getFloat(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:151, 11, 40, 2, 99]  <||@
  Comment 1959 {HotSpotMethod<Fields.getFloat(Object, int)>}  <||@
  Comment 1959 9  <||@
  Comment 1964 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:585) [bci: 151, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 1965 716 rsi|DWORD = VMOVD xmm0|SINGLE  <||@
  Comment 1969 718 rsi|DWORD = ADD (x: rsi|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 1973 720 JUMP ~[] destination: B69 -> B81  <||@
  Comment 1978 block B66 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1978 686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1978 688 rsi|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 1982 690 JUMP ~[] destination: B66 -> B81  <||@
  Comment 1987 block B71 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 1987 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1987 730 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1990 732 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1995 734 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 1999 736 xmm0|DOUBLE = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getDouble(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:181, 11, 40, 2, 99]  <||@
  Comment 1999 {HotSpotMethod<Fields.getDouble(Object, int)>}  <||@
  Comment 1999 9  <||@
  Comment 2004 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:588) [bci: 181, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2005 738 rsi|QWORD = VMOVQ xmm0|DOUBLE  <||@
  Comment 2010 740 rdx|QWORD = SHR rsi|QWORD y: 32 size: QWORD  <||@
  Comment 2017 742 rsi|QWORD = XOR (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2020 744 rdx|QWORD = MOVSXD stack:68|DWORD size: QWORD  <||@
  Comment 2025 746 rsi|QWORD = ADD (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2028 748 rsi|DWORD = MOV rsi|QWORD size: DWORD  <||@
  Comment 2030 750 JUMP ~[] destination: B71 -> B81  <||@
  Comment 2035 block B73 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2035 758 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2035 760 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2038 762 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2043 764 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2047 766 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getShort(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:223, 11, 40, 2, 99]  <||@
  Comment 2047 {HotSpotMethod<Fields.getShort(Object, int)>}  <||@
  Comment 2047 9  <||@
  Comment 2052 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:592) [bci: 223, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2053 768 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2057 770 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2059 772 JUMP ~[] destination: B73 -> B81  <||@
  Comment 2064 block B75 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2064 780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2064 782 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2067 784 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2072 786 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2076 788 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getChar(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:250, 11, 40, 2, 99]  <||@
  Comment 2076 9  <||@
  Comment 2079 {HotSpotMethod<Fields.getChar(Object, int)>}  <||@
  Comment 2084 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:595) [bci: 250, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2085 790 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2089 792 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2091 794 JUMP ~[] destination: B75 -> B81  <||@
  Comment 2096 block B77 loop 3 depth 2 outer 2 header:381|LoopBegin  <||@
  Comment 2096 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2096 804 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2099 806 rdx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2104 808 rcx|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2108 810 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] [] callTarget: HotSpotMethod<Fields.getByte(Object, int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:277, 11, 40, 2, 99]  <||@
  Comment 2108 9  <||@
  Comment 2111 {HotSpotMethod<Fields.getByte(Object, int)>}  <||@
  Comment 2116 [stack:16, stack:24, stack:28, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598) [bci: 277, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3               |4  |5  |6  |7  |8 
     locals:  |stack:56|DWORD[.]  |stack:64|QWORD[.]  |stack:68|DWORD  |stack:72|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2117 812 rax|DWORD = ADD (x: rax|DWORD, y: stack:68|DWORD) size: DWORD  <||@
  Comment 2121 814 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2123 816 JUMP ~[] destination: B77 -> B81  <||@
  Comment 2128 block B87 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2128 910 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2128 912 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2133 914 rsi|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 2139 916 rsi|DWORD = XOR (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2142 918 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2145 920 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2150 922 JUMP ~[] destination: B87 -> B88  <||@
  Comment 2155 block B49 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2155 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2155 498 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2161 500 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2167 502 JUMP ~[] destination: B49 -> B88  <||@
  Comment 2172 block B38 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2172 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2172 386 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2177 388 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:74]  <||@
  Comment 2177 [r11:0, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2177 {infopoint: SAFEPOINT}  <||@
  Comment 2177 11  <||@
  Comment 2183 390 r10|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2188 392 r13|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2193 394 JUMP ~[] destination: B38 -> B35  <||@
  Comment 2198 block B112 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2198 1174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2198 1176 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2203 1178 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2207 1180 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2207 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2217 1182 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2222 1184 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2227 1186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2227 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2232 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2233 1188 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2236 1190 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2241 1192 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2245 1194 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2249 1196 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2249 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2259 1198 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2269 1200 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2274 1202 JUMP ~[] destination: B112 -> B114  <||@
  Comment 2279 block B116 loop 2 depth 1 header:50|LoopBegin  <||@
  Comment 2279 1262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2279 1264 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2284 1266 stack:68|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 2288 1268 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2288 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2298 1270 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 2303 1272 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2308 1274 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:41, 99]  <||@
  Comment 2308 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2313 [r14:0, stack:12, stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5               |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |stack:48|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2314 1276 r10|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2317 1278 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 2322 1280 rbx|DWORD[.] = MOVE stack:68|DWORD[.] moveKind: DWORD  <||@
  Comment 2326 1282 rax|DWORD = MOVE stack:40|DWORD moveKind: DWORD  <||@
  Comment 2330 1284 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 2330 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 2340 1286 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2350 1288 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2355 1290 JUMP ~[] destination: B116 -> B118  <||@
  Comment 2360 block B129 null  <||@
  Comment 2360 1416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2360 1418 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 2369 12  <||@
  Comment 2379 block B15 null  <||@
  Comment 2379 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2379 190 xmm0|V256_BYTE = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 2383 192 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2390 194 JUMP ~[] destination: B15 -> B16  <||@
  Comment 2390 block B16 loop 1 depth 1 header:1915|LoopBegin  <||@
  Comment 2390 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2400 198 J (address: [rsi|QWORD[.] + r8|QWORD * 1], input: xmm0|V256_BYTE) nZ: YMM oh: VMOVDQU  <||@
  Comment 2406 200 r8|QWORD = LEA [r8|QWORD + 32] size: QWORD  <||@
  Comment 2410 202 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 2413 204 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B16 -> B18 falseDestination: B16 -> B16  <||@
  Comment 2420 block B10 null  <||@
  Comment 2420 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 130 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2425 132 stack:40|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2430 134 stack:44|DWORD[.] = MOVE r13|DWORD[.] moveKind: DWORD  <||@
  Comment 2435 140 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 2435 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 2445 142 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2448 144 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 2451 146 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2454 148 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2459 150 r13|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2462 152 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2465 154 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10]  <||@
  Comment 2465 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 2470 [r13:0, stack:36, stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:533) [bci: 10, duringCall: false, rethrow: false]
              |0             |1               |2               |3  |4 
     locals:  |r13|QWORD[.]  |stack:40|DWORD  |stack:36|DWORD  |-  |-   <||@
  Comment 2471 156 JUMP ~[] destination: B10 -> B11  <||@
  Comment 2476 block B127 null  <||@
  Comment 2476 1400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1402 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 2481 1404 r10|DWORD = MOVE input: int[-233243|0xfffffffffffc70e5]  <||@
  Comment 2487 1406 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2487 block B128 null  <||@
  Comment 2487 1408 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2487 1410 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2494 1412 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2501 1414 DEOPT info [bci:74]  <||@
  Comment 2501 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2506 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:552) [bci: 74, duringCall: false, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2507 block B82 null  <||@
  Comment 2507 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2507 868 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2512 870 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2512 block B83 null  <||@
  Comment 2512 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2512 874 r11|DWORD = MOVE input: int[-259355|0xfffffffffffc0ae5]  <||@
  Comment 2518 882 JUMP ~[] destination: B83 -> B86  <||@
  Comment 2518 block B86 null  <||@
  Comment 2518 902 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2518 894 r8|DWORD = MOVE stack:72|DWORD moveKind: DWORD  <||@
  Comment 2523 896 rcx|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2528 898 r9|DWORD[.] = MOVE stack:56|DWORD[.] moveKind: DWORD  <||@
  Comment 2533 904 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2540 906 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2547 908 DEOPT info [bci:16, 11, 40, 2, 99]  <||@
  Comment 2547 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2552 [rcx:0, r9:0, stack:48]at org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:570) [bci: 16, duringCall: false, rethrow: false]
              |0            |1             |2          |3         |4  |5  |6  |7  |8 
     locals:  |r9|DWORD[.]  |rcx|QWORD[.]  |r10|DWORD  |r8|DWORD  |-  |-  |-  |-  |- 
  at org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:150) [bci: 11, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:395) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:32|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3           |4  |5  |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2553 block B45 null  <||@
  Comment 2553 464 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2553 466 r10|DWORD = MOVE input: int[-235795|0xfffffffffffc66ed]  <||@
  Comment 2559 468 JUMP ~[] destination: B45 -> B128  <||@
  Comment 2561 block B57 null  <||@
  Comment 2561 588 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2561 590 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2566 592 JUMP ~[] destination: B57 -> B58  <||@
  Comment 2566 block B58 null  <||@
  Comment 2566 594 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2566 596 r11|DWORD = MOVE input: int[-248603|0xfffffffffffc34e5]  <||@
  Comment 2572 604 JUMP ~[] destination: B58 -> B86  <||@
  Comment 2574 block B84 null  <||@
  Comment 2574 884 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2574 886 r10|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 2579 888 JUMP ~[] destination: B84 -> B85  <||@
  Comment 2579 block B85 null  <||@
  Comment 2579 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2579 892 r11|DWORD = MOVE input: int[-245787|0xfffffffffffc3fe5]  <||@
  Comment 2585 900 JUMP ~[] destination: B85 -> B86  <||@
  Comment 2587 block B123 null  <||@
  Comment 2587 1372 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2587 1374 r11|DWORD = MOVE input: int[-347419|0xfffffffffffab2e5]  <||@
  Comment 2593 1378 JUMP ~[] destination: B123 -> B124  <||@
  Comment 2593 block B124 null  <||@
  Comment 2593 1380 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2593 1376 r8|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2598 1382 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 2605 1384 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 2612 1386 DEOPT info [bci:52, 2, 99]  <||@
  Comment 2612 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2617 [rsi:0]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:400) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r10|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:561) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2         |3           |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |r8|DWORD  |int[0|0x0]  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0             |1  |2  |3         |4 
     locals:  |rsi|QWORD[.]  |-  |-  |r8|DWORD  |-   <||@
  Comment 2618 block B1 null  <||@
  Comment 2618 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2618 16 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1340615007]  <||@
  Comment 2618 {Object[d.a@1340615007]}  <||@
  Comment 2628 18 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2631 20 r10|DWORD = MOVE input: int[-228619|0xfffffffffffc82f5]  <||@
  Comment 2637 22 JUMP ~[] destination: B1 -> B133  <||@
  Comment 2637 block B133 null  <||@
  Comment 2637 1442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2637 1444 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 2644 1446 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 2651 1448 DEOPT info [bci:0]  <||@
  Comment 2651 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2656 [stack:48]at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:529) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1  |2  |3  |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-   <||@
  Comment 2657 block B126 null  <||@
  Comment 2657 1394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2657 1396 r10|DWORD = MOVE input: int[-236083|0xfffffffffffc65cd]  <||@
  Comment 2663 1398 JUMP ~[] destination: B126 -> B128  <||@
  Comment 2668 block B125 null  <||@
  Comment 2668 1388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2668 1390 r10|DWORD = MOVE input: int[-237091|0xfffffffffffc61dd]  <||@
  Comment 2674 1392 JUMP ~[] destination: B125 -> B128  <||@
  Comment 2679 block B122 null  <||@
  Comment 2679 1364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2679 1366 r11|DWORD = MOVE input: int[-274451|0xfffffffffffbcfed]  <||@
  Comment 2685 1370 JUMP ~[] destination: B122 -> B124  <||@
  Comment 2687 block B97 null  <||@
  Comment 2687 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2687 1014 r11|DWORD = MOVE input: int[-269851|0xfffffffffffbe1e5]  <||@
  Comment 2693 1018 JUMP ~[] destination: B97 -> B124  <||@
  Comment 2695 block B132 null  <||@
  Comment 2695 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2695 1434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1099189008]  <||@
  Comment 2695 {Object[d.a@1099189008]}  <||@
  Comment 2705 1436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2708 1438 r10|DWORD = MOVE input: int[-229651|0xfffffffffffc7eed]  <||@
  Comment 2714 1440 JUMP ~[] destination: B132 -> B133  <||@
  Comment 2716 block B119 null  <||@
  Comment 2716 1338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 1340 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291]  <||@
  Comment 2716 {Object[d.a@1416319291]}  <||@
  Comment 2726 1342 MOV [r15|QWORD + 668] y: -347964 size: DWORD  <||@
  Comment 2737 1344 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2744 1346 DEOPT info [bci:41, 99]  <||@
  Comment 2744 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2749 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2750 block B63 null  <||@
  Comment 2750 648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2750 650 r11|DWORD = MOVE input: int[-251675|0xfffffffffffc28e5]  <||@
  Comment 2756 658 JUMP ~[] destination: B63 -> B86  <||@
  Comment 2761 block B107 null  <||@
  Comment 2761 1132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2761 1134 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1416319291]  <||@
  Comment 2761 {Object[d.a@1416319291]}  <||@
  Comment 2771 1136 MOV [r15|QWORD + 668] y: -304444 size: DWORD  <||@
  Comment 2782 1138 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 2789 1140 DEOPT info [bci:41, 99]  <||@
  Comment 2789 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 2794 [stack:48]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:568) [bci: 41, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:32|QWORD[.]  |-  |stack:36|DWORD  |-  |-  |r11|DWORD  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:555) [bci: 99, duringCall: true, rethrow: false]
              |0                  |1  |2  |3               |4 
     locals:  |stack:32|QWORD[.]  |-  |-  |stack:36|DWORD  |-   <||@
  Comment 2795 block B121 null  <||@
  Comment 2795 1356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2795 1358 r11|DWORD = MOVE input: int[-285723|0xfffffffffffba3e5]  <||@
  Comment 2801 1362 JUMP ~[] destination: B121 -> B124  <||@
  Comment 2806 block B120 null  <||@
  Comment 2806 1348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2806 1350 r11|DWORD = MOVE input: int[-288283|0xfffffffffffb99e5]  <||@
  Comment 2812 1354 JUMP ~[] destination: B120 -> B124  <||@
  Comment 2817 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2817 4  <||@
  Comment 2823 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 2823 5  <||@
  HexCodeFile>>> <|@
end_nmethod
