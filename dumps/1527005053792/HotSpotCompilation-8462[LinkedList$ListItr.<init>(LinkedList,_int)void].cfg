begin_compilation
  name " HotSpotCompilation-8462[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  method "HotSpotCompilation-8462[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  date 1527005195542
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i127  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v131 v135 v136 v133 ?10 j117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v38 ?10 v12 v52 v49 v77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 877
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a109 i3 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a109 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 a58 v134 ?10 v138 v132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v132 
=== Succesors ===
next: i128 
=== Usages ===
v69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v132 #next: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 23]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v61 
=== Usages ===
v12 i37 i48 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
op: Compress
stamp: n# Ljava/util/LinkedList;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.this$0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
i128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v131 value: a58 stateAfter: - lastLocationAccess: - #next: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v123 
=== Usages ===
j119 
=== Predecessor ===
v61 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j117 
y: i118 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j117 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j119 
index: j122 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j119 index: j122  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
j117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i124 stateAfter: - lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.expectedModCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v133 value: i127 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i128 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
stamp: void
trueSuccessorProbability: 0.4382720561362473
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601566827392714338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603234815062613199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i128 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i128 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i37 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 0.7246779467975875
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i36 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v137 
=== Succesors ===
next: v23 
=== Usages ===
a105 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v137 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: i32
=== Inputs ===
x: i128 
y: i47 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i48 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v102 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22291 - -21267] ⇊00000000ffffa8ed ⇈00000000ffffaced
valueDescription: i32
=== Inputs ===
merge: v106 
values: i108 i114 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i108 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v113 
=== Succesors ===
next: v112 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v113 #next: v112  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 17]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i110 
speculation: a109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i110 speculation: a109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v57 
=== Usages ===
a105 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v22 
values: a104 a129 a130 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: a104 a129 a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 v57 
=== Succesors ===
next: v75 
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 v57 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
value: a105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 value: a105 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:880) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v136 value: i3 stateAfter: - lastLocationAccess: - #next: v78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:881) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:881) [bci: 46]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i127 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: i127  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/LinkedList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v131 v135 v136 v133 ?10 j117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v112 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v38 ?10 v12 v52 v49 v77 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 877
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a109 i3 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a109 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/LinkedList;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 a58 v134 ?10 v138 v132 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v132 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i127 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 14]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v132 
=== Succesors ===
next: i128 
=== Usages ===
v69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v132 #next: i128  <|@  <|@
f <@~|@floating>@ <|@
tid v134 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i128 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.size
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 23]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v134 
=== Succesors ===
next: v61 
=== Usages ===
v12 i37 i48 
=== Predecessor ===
i127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v134 #next: v61  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a58 <|@
result v5|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
op: Compress
stamp: n# Ljava/util/LinkedList;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.this$0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v131 
value: a58 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
i128 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v131 value: a58 stateAfter: - lastLocationAccess: - #next: j117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: v123 
=== Usages ===
j119 
=== Predecessor ===
v61 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1 #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid i118 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j119 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j119 <|@
result v6|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j117 
y: i118 
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j117 y: i118  <|@  <|@
f <@~|@floating>@ <|@
tid j122 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
result [v6|QWORD[*] + v7|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j119 
index: j122 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j119 index: j122  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 2]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v139 
value: i124 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
j117 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v139 value: i124 stateAfter: - lastLocationAccess: - #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.expectedModCount
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 17]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v133 
value: i127 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v133 value: i127 stateAfter: - lastLocationAccess: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i128 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i128  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 26]
stamp: void
trueSuccessorProbability: 0.4382720561362473
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v13 
falseSuccessor: v14 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v13 #falseSuccessor: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601566827392714338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v13 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603234815062613199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 v52 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.RightShiftNode$$Lambda$143/1909420937@4b2846e5
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i128 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@>>|@org.graalvm.compiler.nodes.calc.RightShiftNode>@ x: i128 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i37 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:569) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 0.7246779467975875
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i36 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v96 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a129 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a129  <|@  <|@
f <@~|@floating>@ <|@
tid v137 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v9|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.first
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:570) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v137 
=== Succesors ===
next: v23 
=== Usages ===
a105 
=== Predecessor ===
v96 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v137 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:571) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v113 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result int[-21267|0xffffffffffffaced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -21267
stableDimension: 0
stamp: i32 [-21267] ⇊00000000ffffaced ⇈00000000ffffaced
stampKind: i32
value: int[-21267|0xffffffffffffaced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i48 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i48 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: i32
=== Inputs ===
x: i128 
y: i47 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i128 y: i47  <|@  <|@
f <@~|@floating>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i48 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i48  <|@  <|@
f <@*|@fixed>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v49 
=== Succesors ===
trueSuccessor: v102 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v49 #trueSuccessor: v102 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v107 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
result int[-22291|0xffffffffffffa8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -22291
stableDimension: 0
stamp: i32 [-22291] ⇊00000000ffffa8ed ⇈00000000ffffa8ed
stampKind: i32
value: int[-22291|0xffffffffffffa8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-22291 - -21267] ⇊00000000ffffa8ed ⇈00000000ffffaced
valueDescription: i32
=== Inputs ===
merge: v106 
values: i108 i114 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: i108 i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v113 
=== Succesors ===
next: v112 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v113 #next: v112  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:875) [bci: 17]
rethrowException: false
sourceFile: LinkedList.java
sourceLine: 879
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i110 
speculation: a109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i110 speculation: a109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:576) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a130 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a130  <|@  <|@
f <@~|@floating>@ <|@
tid v138 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: LinkedList.last
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:575) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 35]
nullCheck: false
stamp: n# Ljava/util/LinkedList$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v138 
=== Succesors ===
next: v57 
=== Usages ===
a105 
=== Predecessor ===
v100 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v138 #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a130 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a105 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n# Ljava/util/LinkedList$Node;
valueDescription: n -
=== Inputs ===
merge: v22 
values: a104 a129 a130 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v22 values: a104 a129 a130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 v57 
=== Succesors ===
next: v75 
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 v57 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid v135 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: LinkedList$ListItr.next
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v135 
value: a105 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v135 value: a105 stateAfter: - lastLocationAccess: - #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v136 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: LinkedList$ListItr.nextIndex
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:880) [bci: 43]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v136 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v136 value: i3 stateAfter: - lastLocationAccess: - #next: v78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: ANY_LOCATION
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:881) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:881) [bci: 46]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v78 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v5|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD[*] + v7|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603234815062613199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SAR v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v8|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v2|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|DWORD[.] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601566827392714338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = DEC v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v10|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[.] = MOV [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-21267|0xffffffffffffaced]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-22291|0xffffffffffffa8ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   22  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   24  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603234815062613199
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = SAR r11|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601566827392714338
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[.] = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD <|@ <|@
      nr   12  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   14  <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3 <|@ <|@
      nr   18  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   20  <|@ instruction r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   22  <|@ instruction r9|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   24  <|@ instruction MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   26  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr   28  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   30  <|@ instruction BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4603234815062613199
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r10|DWORD = SAR r11|DWORD size: DWORD <|@ <|@
      nr   36  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   38  <|@ instruction BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction CMP rcx|DWORD y: 1 size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601004774500165714
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4601566827392714338
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD[.] = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|DWORD = DEC r11|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594740093195362967
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced] // MoveResolver resolve mapping <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   90  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed] // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b520c448b5a104c8bc249c1e8034489461c4c8bc649c1e80949b900e01b17010000004788240844895610443bd90f8436000000458bd341d1fa443bd10f8e2f00000083f9010f8d38000000448b521444895618894e0c488b6c24104883c418850500000000c5f877c341ba00000000ebde41ffcb443bd90f8f20000000448b5218ebcc41baedacffff4589979c0200004d89a7a8020000e8000000009041baeda8ffffebe4e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD  <||@
  Comment 48 12 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 14 r11|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 16 r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3  <||@
  Comment 63 18 MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 67 20 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 74 22 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 84 24 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 88 26 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 92 28 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 95 30 BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 101 block B2 null  <||@
  Comment 101 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 34 r10|DWORD = SAR r11|DWORD size: DWORD  <||@
  Comment 107 36 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 110 38 BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 116 block B3 null  <||@
  Comment 116 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 42 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 119 44 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 125 block B4 null  <||@
  Comment 125 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 48 r10|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 129 50 JUMP ~[] destination: B4 -> B10  <||@
  Comment 129 block B10 null  <||@
  Comment 129 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 72 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 133 74 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 136 76 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 145 12  <||@
  Comment 155 block B1 null  <||@
  Comment 155 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 -1 r10|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 161 54 JUMP ~[] destination: B1 -> B10  <||@
  Comment 163 block B6 null  <||@
  Comment 163 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 163 58 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 166 60 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 169 62 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 175 block B9 null  <||@
  Comment 175 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 66 r10|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 179 68 JUMP ~[] destination: B9 -> B10  <||@
  Comment 181 block B5 null  <||@
  Comment 181 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 -1 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 187 80 JUMP ~[] destination: B5 -> B8  <||@
  Comment 187 block B8 null  <||@
  Comment 187 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 187 88 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 194 90 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 201 92 DEOPT info [bci:20]  <||@
  Comment 201 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 206 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 207 block B7 null  <||@
  Comment 207 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 -1 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 213 84 JUMP ~[] destination: B7 -> B8  <||@
  Comment 215 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 215 4  <||@
  Comment 221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 221 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8462[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  method "HotSpotCompilation-8462[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  date 1527005195597
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b42f20 448b560849c1e203493bc20f852f2fccfe900f1f80000000000f1f800000000089842400c0feff4883ec1848896c2410448b520c448b5a104c8bc249c1e8034489461c4c8bc649c1e80949b900e01b17010000004788240844895610443bd90f8436000000458bd341d1fa443bd10f8e2f00000083f9010f8d38000000448b521444895618894e0c488b6c24104883c41885054fc0d4fcc5f877c341ba00000000ebde41ffcb443bd90f8f20000000448b5218ebcc41baedacffff4589979c0200004d89a7a8020000e81046ccfe9041baeda8ffffebe4e8247610ff90e8fe44ccfe90f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@6fad57ba slotKind: QWORD  <||@
  Comment 48 12 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 48 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:877) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 48 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 52 14 r11|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 16 r8|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4c8ba4df encoding: base: 0 shift: 3  <||@
  Comment 63 18 MOV (x: [rsi|QWORD[.] + 28], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 67 20 r8|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 74 22 r9|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 84 24 MOVB (x: [r8|QWORD[*] + r9|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 88 26 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 92 28 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 95 30 BRANCH trueDestinationProbability: 0.4382720561362473 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 101 block B2 null  <||@
  Comment 101 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 34 r10|DWORD = SAR r11|DWORD size: DWORD  <||@
  Comment 107 36 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 110 38 BRANCH trueDestinationProbability: 0.7246779467975875 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6  <||@
  Comment 116 block B3 null  <||@
  Comment 116 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 116 42 CMP rcx|DWORD y: 1 size: DWORD  <||@
  Comment 119 44 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 125 block B4 null  <||@
  Comment 125 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 125 48 r10|DWORD[.] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 129 50 JUMP ~[] destination: B4 -> B10  <||@
  Comment 129 block B10 null  <||@
  Comment 129 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 129 72 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 133 74 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 136 76 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 145 12  <||@
  Comment 155 block B1 null  <||@
  Comment 155 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 -1 r10|DWORD[.] = MOVE input: int[0|0x0]  <||@
  Comment 161 54 JUMP ~[] destination: B1 -> B10  <||@
  Comment 163 block B6 null  <||@
  Comment 163 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 163 58 r11|DWORD = DEC r11|DWORD size: DWORD  <||@
  Comment 166 60 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 169 62 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 175 block B9 null  <||@
  Comment 175 64 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 66 r10|DWORD[.] = MOV [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 179 68 JUMP ~[] destination: B9 -> B10  <||@
  Comment 181 block B5 null  <||@
  Comment 181 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 -1 r10|DWORD = MOVE input: int[-21267|0xffffffffffffaced]  <||@
  Comment 187 80 JUMP ~[] destination: B5 -> B8  <||@
  Comment 187 block B8 null  <||@
  Comment 187 86 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 187 88 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 194 90 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 201 92 DEOPT info [bci:20]  <||@
  Comment 201 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 206 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:879) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 207 block B7 null  <||@
  Comment 207 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 207 -1 r10|DWORD = MOVE input: int[-22291|0xffffffffffffa8ed]  <||@
  Comment 213 84 JUMP ~[] destination: B7 -> B8  <||@
  Comment 215 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 215 4  <||@
  Comment 221 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 221 5  <||@
  HexCodeFile>>> <|@
end_nmethod
