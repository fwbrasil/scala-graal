begin_compilation
  name " HotSpotCompilation-9698[java.util.HashMap.get(Object)]"
  method "HotSpotCompilation-9698[java.util.HashMap.get(Object)]"
  date 1527005215779
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?49 v487 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v325 ?49 ?108 ?431 v72 i277 v115 ?432 v333 v497 v486 v295 v342 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v470 i277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v497 
=== Succesors ===
next: v256 
=== Usages ===
v485 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v497 #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v470 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
=== Succesors ===
next: v35 
=== Usages ===
v32 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v485 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v256 
y: v31 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v256 y: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v220 a154 a154 a154 v238 v229 v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a1 
=== Succesors ===
=== Usages ===
?430 ?171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a471 a472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v125 v142 v270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v267 
=== Usages ===
j263 j268 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j281 
y: j278 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j281 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j263 
y: j279 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j263 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
j281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v266 #falseSuccessor: v265  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j281 
y: i261 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i261  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j268 
=== Succesors ===
=== Usages ===
v270 i285 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i56 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i269 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v271 v273 
=== Succesors ===
next: i277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v271 v273 #next: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v287 
=== Usages ===
i285 
=== Predecessor ===
v272 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
i277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i269 i277 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i269 i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v286 v287 
=== Succesors ===
next: a471 
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v286 v287 #next: a471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v181 
=== Usages ===
a434 v355 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a471 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a471  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.01797506187829823
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
a471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580786370666490806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606932060893155407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i39 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i39  <|@  <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6edebbea
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?430 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?49 
values: - - 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?49 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v295 
stateDuring: ?430 
=== Succesors ===
next: a472 
=== Usages ===
i175 
=== Predecessor ===
v34 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v295 stateDuring: ?430 #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v54 
=== Usages ===
a434 v356 
=== Predecessor ===
i39 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a472 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a472  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.01797506187829823
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4550763651340391677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576814610127157036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a434 <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v169 
values: a472 a471 
=== Succesors ===
=== Usages ===
a435 v488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v169 values: a472 a471  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v169 
values: i39 i285 
=== Succesors ===
=== Usages ===
i46 i47 ?171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v169 values: i39 i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v170 v172 
=== Succesors ===
next: i473 
=== Usages ===
a434 i175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v170 v172 #next: i473  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?49 
values: - - i175 
=== Succesors ===
=== Usages ===
v444 i473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?49 values: - - i175  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a434 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?171 
guard: - 
address: v488 
=== Succesors ===
next: v398 
=== Usages ===
i59 v142 v306 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?171 guard: - address: v488 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i473 
y: i56 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i473 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v395 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v397 #falseSuccessor: v395  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77843
stableDimension: 0
stamp: i32 [-77843] ⇊00000000fffecfed ⇈00000000fffecfed
stampKind: i32
value: int[-77843|0xfffffffffffecfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B48" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i175 
y: i45 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i175 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
=== Inputs ===
x: i46 
y: i175 
=== Succesors ===
=== Usages ===
?431 i60 v67 ?432 v110 v333 ?108 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i46 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i473 
y: i58 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i473 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: i32
=== Inputs ===
x: i47 
y: i59 
=== Succesors ===
=== Usages ===
v489 v306 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i47 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i473 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i473  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v399 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a474 
=== Usages ===
a474 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid a435 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a434 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a434  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a435 
index: i60 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a435 index: i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v489 
=== Succesors ===
next: v65 
=== Usages ===
a316 v317 v490 v491 v492 v498 v500 a501 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v489 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a474  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.06446366666825179
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589226021485115926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B26" 
    xhandlers
    flags 
    probability 4606450313733319401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
=== Succesors ===
next: v70 
=== Usages ===
v67 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v490 #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i475 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i475  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?433 ?431 ?432 ?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.8259689429943833
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v68 #falseSuccessor: v69  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605010190344953245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a476  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: v75 
=== Usages ===
a324 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a476 
=== Succesors ===
=== Usages ===
v72 v325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a476  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a324 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a324  <|@  <|@
f <@~|@floating>@ <|@
tid a316 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
a154 ?431 a154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a474  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9163405208487175
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
a476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4604438380247838057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4589238901440086433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i79  <|@  <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2f586ec3
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a324 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a324  <|@  <|@
tid ?431 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - a316 - - - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - a316 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v325 
stateDuring: ?431 
=== Succesors ===
next: v87 
=== Usages ===
v81 
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v325 stateDuring: ?431 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i56 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i79 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.07444460791525673
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4572098748999343751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a477 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
=== Succesors ===
next: v93 
=== Usages ===
a437 v358 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v492 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a477  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.1388936170212766
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
a477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v92 #falseSuccessor: v91  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 4559193570309609540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4571341955619588991
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B44" 
    xhandlers
    flags 
    probability 4588628691733929841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4594928513844000049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v500 
=== Succesors ===
next: v196 
=== Usages ===
a437 v359 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v500 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a478  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.1388936170212766
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v195 #falseSuccessor: v194  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 4582057987692171522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4594128418058531601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594275040979341165
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a437 <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v186 
values: a477 a478 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v186 values: a477 a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v479 
=== Usages ===
a437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
=== Succesors ===
next: v454 
=== Usages ===
v467 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v479 
y: v466 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v479 y: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 8.895038545166933E-4
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v452 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 4548783763754726610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a474  <|@  <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@10638d3d
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a501 i47 a2 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a501 i47 a2  <|@  <|@
tid ?433 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v333 
stateDuring: ?433 
=== Succesors ===
next: v153 
=== Usages ===
a154 
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v333 stateDuring: ?433 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594270498264753376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a437 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a437  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B38" "B47" 
    successors "B33" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595035163339694704
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v106 
values: a438 a345 a347 
=== Succesors ===
=== Usages ===
?108 v495 v494 a154 ?432 a154 v493 v499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: a438 a345 a347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1498615141123714
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v105 
=== Succesors ===
next: i480 
=== Usages ===
a107 v116 v129 v137 v139 v213 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v105 #next: i480  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - - a107 - - 
=== Succesors ===
=== Usages ===
v386 i480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - - a107 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?108 
guard: - 
address: v493 
=== Succesors ===
next: v113 
=== Usages ===
v110 
=== Predecessor ===
v106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?108 guard: - address: v493 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i480 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i480  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.8234163966392338
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593999122078641085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
=== Succesors ===
next: v120 
=== Usages ===
a341 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v494 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v115 v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a341 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a341  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.7992338499042312
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592386780825938734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583416595062174002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i123 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i123  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1391044a
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a341 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a341  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - - a107 - - 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - - a107 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?432 
=== Succesors ===
next: v133 
=== Usages ===
v125 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?432 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i56 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.04475281873373808
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
i123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v132 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563198884380759866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a482 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a482  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a482 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
=== Succesors ===
next: v141 
=== Usages ===
a345 v360 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.29161471321695764
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
a482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v198 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555116540746745423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561010887683935053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583069341219560383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583945551496852884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
=== Succesors ===
next: v211 
=== Usages ===
a347 v361 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a483  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.29161471321695764
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v212 #falseSuccessor: v210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4575987619784622818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v201 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v201 #next: v137  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B30" "B43" "B20" "B25" "B34" "B39" "B8" "B27" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606604687199354658
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v152 
values: a102 a10 a316 a316 a107 a107 a10 a10 
=== Succesors ===
=== Usages ===
v496 v11 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v152 values: a102 a10 a316 a316 a107 a107 a10 a10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v153 v158 v159 v160 v161 v162 v182 v197 
=== Succesors ===
next: v14 
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v153 v158 v159 v160 v161 v162 v182 v197 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
stamp: void
trueSuccessorProbability: 0.4296267496111975
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4600914669496254643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4602983162410180297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a154 
index: - 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
=== Succesors ===
next: v24 
=== Usages ===
a353 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v496 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a353 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a353 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581528552495068195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?108 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?108 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a483  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78619
stableDimension: 0
stamp: i32 [-78619] ⇊00000000fffecce5 ⇈00000000fffecce5
stampKind: i32
value: int[-78619|0xfffffffffffecce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B14" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i442 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-78619 - -76555] ⇊00000000fffec4e5 ⇈00000000fffedffd
valueDescription: i32
=== Inputs ===
merge: v439 
values: i446 i448 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v439 values: i446 i448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v444 
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i442 
speculation: a10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i442 speculation: a10  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/util/HashMap;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?49 v487 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v325 ?49 ?108 ?431 v72 i277 v115 ?432 v333 v497 v486 v295 v342 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v470 i277 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v497 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v497 
=== Succesors ===
next: v256 
=== Usages ===
v485 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v497 #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v2|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v470 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
=== Succesors ===
next: v35 
=== Usages ===
v32 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v485 #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v256 
y: v31 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v256 y: v31  <|@  <|@
f <@~|@floating>@ <|@
tid a10 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 v220 a154 a154 a154 v238 v229 v444 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?49 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a2 - a1 
=== Succesors ===
=== Usages ===
?430 ?171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 - a1  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a471 a472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i56 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 v125 v142 v270 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v32 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v32 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v2|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v486 
=== Succesors ===
next: v267 
=== Usages ===
j263 j268 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v486 #next: v267  <|@  <|@
f <@~|@floating>@ <|@
tid j278 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j263 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j281 
y: j278 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j281 y: j278  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j263 
y: j279 
=== Succesors ===
=== Usages ===
v267 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j263 y: j279  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v264 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v265 
=== Usages ===
=== Predecessor ===
j281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v264 #trueSuccessor: v266 #falseSuccessor: v265  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = AND v5|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j268 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j281 
y: i261 
=== Succesors ===
=== Usages ===
i269 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j281 y: i261  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j268 
=== Succesors ===
=== Usages ===
v270 i285 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i269 
y: i56 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i269 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v270 
=== Succesors ===
trueSuccessor: v275 
falseSuccessor: v274 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v270 #trueSuccessor: v275 #falseSuccessor: v274  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHR v5|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV v7|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v273 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v273  <|@  <|@
f <@*|@fixed>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@*|@fixed>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v265 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v271 v273 
=== Succesors ===
next: i277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v271 v273 #next: i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i277 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: a2 
=== Succesors ===
next: v287 
=== Usages ===
i285 
=== Predecessor ===
v272 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: a2 #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
i277 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i285 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v283 
values: i269 i277 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v283 values: i269 i277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v286 v287 
=== Succesors ===
next: a471 
=== Usages ===
i285 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v286 v287 #next: a471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a471 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v181 
=== Usages ===
a434 v355 
=== Predecessor ===
v283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a471 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a471  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.01797506187829823
=== Inputs ===
condition: v355 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
a471 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v355 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580786370666490806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B8 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606932060893155407
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v172 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v172  <|@  <|@
f <@*|@fixed>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
v180 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD[.], v10|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i39 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i39  <|@  <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6edebbea
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?430 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 0
=== Inputs ===
outerFrameState: ?49 
values: - - 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?49 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i39 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 9
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v295 
stateDuring: ?430 
=== Succesors ===
next: a472 
=== Usages ===
i175 
=== Predecessor ===
v34 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v295 stateDuring: ?430 #next: a472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a472 <|@
result v13|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap.table
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n [Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v487 
=== Succesors ===
next: v54 
=== Usages ===
a434 v356 
=== Predecessor ===
i39 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v487 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a472 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a472  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 6]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.01797506187829823
=== Inputs ===
condition: v356 
=== Succesors ===
trueSuccessor: v52 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
a472 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v356 #trueSuccessor: v52 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[.], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4550763651340391677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576814610127157036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD[.], v12|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a434 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n [Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v169 
values: a472 a471 
=== Succesors ===
=== Usages ===
a435 v488 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v169 values: a472 a471  <|@  <|@
f <@~|@floating>@ <|@
tid i175 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v169 
values: i39 i285 
=== Succesors ===
=== Usages ===
i46 i47 ?171 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v169 values: i39 i285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v170 v172 
=== Succesors ===
next: i473 
=== Usages ===
a434 i175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v170 v172 #next: i473  <|@  <|@
tid ?171 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<HashMap.hash(Object)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.util.HashMap.hash(HashMap.java:339) [bci: 9]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rethrowException: false
sourceFile: HashMap.java
sourceLine: 339
stackSize: 1
=== Inputs ===
outerFrameState: ?49 
values: - - i175 
=== Succesors ===
=== Usages ===
v444 i473 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?49 values: - - i175  <|@  <|@
f <@~|@floating>@ <|@
tid v488 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a434 
=== Succesors ===
=== Usages ===
i473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i473 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 10]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?171 
guard: - 
address: v488 
=== Succesors ===
next: v398 
=== Usages ===
i59 v142 v306 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?171 guard: - address: v488 #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i473 
y: i56 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i473 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v142 
=== Succesors ===
trueSuccessor: v397 
falseSuccessor: v395 
=== Usages ===
=== Predecessor ===
i473 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v142 #trueSuccessor: v397 #falseSuccessor: v395  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD[.], v15|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v15|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid i446 <|@
result int[-77843|0xfffffffffffecfed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -77843
stableDimension: 0
stamp: i32 [-77843] ⇊00000000fffecfed ⇈00000000fffecfed
stampKind: i32
value: int[-77843|0xfffffffffffecfed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v397 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77843|0xfffffffffffecfed]] destination: B14 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B48" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 14]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 15]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i46 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 17]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
x: i175 
y: i45 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i175 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.XorNode$$Lambda$140/534106600@448e1437
nodeSourcePosition: at java.util.HashMap.hash(HashMap.java:339) [bci: 18]
at java.util.HashMap.get(HashMap.java:557) [bci: 2]
stamp: i32
=== Inputs ===
x: i46 
y: i175 
=== Succesors ===
=== Usages ===
?431 i60 v67 ?432 v110 v333 ?108 
=== Predecessor ===
- >@ <|@
instruction <@^|@org.graalvm.compiler.nodes.calc.XorNode>@ x: i46 y: i175  <|@  <|@
f <@~|@floating>@ <|@
tid i58 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 21]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i473 
y: i58 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i473 y: i58  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 23]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: i32
=== Inputs ===
x: i47 
y: i59 
=== Succesors ===
=== Usages ===
v489 v306 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i47 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i473 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i473  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v399 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v399 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = XOR (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a474 
=== Usages ===
a474 
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a474  <|@  <|@
f <@~|@floating>@ <|@
tid a435 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 1]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a [Ljava/util/HashMap$Node;
=== Inputs ===
value: a434 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a434  <|@  <|@
f <@~|@floating>@ <|@
tid v489 <|@
result [v21|QWORD[.] + v20|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a435 
index: i60 
=== Succesors ===
=== Usages ===
a474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a435 index: i60  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a474 <|@
result v22|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: v399 
address: v489 
=== Succesors ===
next: v65 
=== Usages ===
a316 v317 v490 v491 v492 v498 v500 a501 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v399 address: v489 #next: v65  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
v65 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a474  <|@  <|@
f <@*|@fixed>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 28]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.06446366666825179
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v64 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
a474 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v64 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v21|QWORD[.] + v20|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589226021485115926
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B26" 
    xhandlers
    flags 
    probability 4606450313733319401
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 31]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i475 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i475  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
result [v22|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i475 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 33]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v490 
=== Succesors ===
next: v70 
=== Usages ===
v67 
=== Predecessor ===
v63 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v490 #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i475 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i475  <|@  <|@
tid ?151 <|@
d <@d|@=== Debug Properties ===
bci: 6
code: ResolvedJavaMethodBytecode<HashMap.get(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 557
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
?433 ?431 ?432 ?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 37]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.8259689429943833
=== Inputs ===
condition: v67 
=== Succesors ===
trueSuccessor: v68 
falseSuccessor: v69 
=== Usages ===
=== Predecessor ===
i475 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v67 #trueSuccessor: v68 #falseSuccessor: v69  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605010190344953245
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 40]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a476 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a476  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
result [v22|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a476 <|@
result v24|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v491 
=== Succesors ===
next: v75 
=== Usages ===
a324 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v491 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid a324 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 42]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a476 
=== Succesors ===
=== Usages ===
v72 v325 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a476  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a324 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a324  <|@  <|@
f <@~|@floating>@ <|@
tid a316 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
a154 ?431 a154 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a474  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 49]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.9163405208487175
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
a476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4604438380247838057
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4589238901440086433
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:571) [bci: 52]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i79 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i79  <|@  <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2f586ec3
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a324 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a324  <|@  <|@
tid ?431 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 572
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - a316 - - - 
=== Succesors ===
=== Usages ===
i79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - a316 - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i79 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 59
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v325 
stateDuring: ?431 
=== Succesors ===
next: v87 
=== Usages ===
v81 
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v325 stateDuring: ?431 #next: v87  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i79 
y: i56 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i79 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:572) [bci: 62]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.07444460791525673
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v85 
falseSuccessor: v86 
=== Usages ===
=== Predecessor ===
i79 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v85 #falseSuccessor: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v18|DWORD v1|QWORD[.] - v26|QWORD[.] - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4572098748999343751
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a477 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a477  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
result [v22|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a477 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
result v28|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v492 
=== Succesors ===
next: v93 
=== Usages ===
a437 v358 
=== Predecessor ===
v85 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v492 #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a477 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a477  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.1388936170212766
=== Inputs ===
condition: v358 
=== Succesors ===
trueSuccessor: v92 
falseSuccessor: v91 
=== Usages ===
=== Predecessor ===
a477 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v358 #trueSuccessor: v92 #falseSuccessor: v91  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v22|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD[.], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 4559193570309609540
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v229  <|@  <|@
f <@*|@fixed>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4571341955619588991
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v187  <|@  <|@
f <@*|@fixed>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.]] destination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B44" 
    xhandlers
    flags 
    probability 4588628691733929841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:573) [bci: 65]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v86 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4594928513844000049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 68]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
f <@~|@floating>@ <|@
tid v500 <|@
result [v22|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v29|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v500 
=== Succesors ===
next: v196 
=== Usages ===
a437 v359 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v500 #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a478 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a478  <|@  <|@
f <@*|@fixed>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 76]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.1388936170212766
=== Inputs ===
condition: v359 
=== Succesors ===
trueSuccessor: v195 
falseSuccessor: v194 
=== Usages ===
=== Predecessor ===
a478 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v359 #trueSuccessor: v195 #falseSuccessor: v194  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v22|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 4582057987692171522
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v195 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4594128418058531601
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 79]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v189  <|@  <|@
f <@*|@fixed>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
v194 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594275040979341165
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a437 <|@
result v30|DWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: n Ljava/util/HashMap$Node;
valueDescription: n -
=== Inputs ===
merge: v186 
values: a477 a478 
=== Succesors ===
=== Usages ===
a438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v186 values: a477 a478  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v187 v189 
=== Succesors ===
next: v479 
=== Usages ===
a437 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v187 v189 #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v498 <|@
result [v22|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a474 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v479 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v498 
=== Succesors ===
next: v454 
=== Usages ===
v467 
=== Predecessor ===
v186 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v498 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
rawvalue: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v479 
y: v466 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v479 y: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 8.895038545166933E-4
=== Inputs ===
condition: v467 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v467 #trueSuccessor: v452 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v22|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 4548783763754726610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a102 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a102  <|@  <|@
f <@~|@floating>@ <|@
tid a501 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a474 
=== Succesors ===
=== Usages ===
v333 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a474  <|@  <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: a# Ljava/util/HashMap$TreeNode;
signature: [Ljdk.vm.ci.meta.JavaType;@10638d3d
stamp: void
targetMethod: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>
=== Inputs ===
arguments: a501 i47 a2 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a501 i47 a2  <|@  <|@
tid ?433 <|@
d <@d|@=== Debug Properties ===
bci: 94
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 576
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - - - - - - - - 
=== Succesors ===
=== Usages ===
a102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - - - - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a102 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 94
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: a# Ljava/util/HashMap$TreeNode;
targetMethod: Direct#HashMap$TreeNode.getTreeNode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v333 
stateDuring: ?433 
=== Succesors ===
next: v153 
=== Usages ===
a154 
=== Predecessor ===
v452 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v333 stateDuring: ?433 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
a102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594270498264753376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:575) [bci: 81]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@~|@floating>@ <|@
tid a438 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:574) [bci: 70]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a437 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a437  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B38" "B47" 
    successors "B33" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595035163339694704
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a107 <|@
result v34|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v106 
values: a438 a345 a347 
=== Succesors ===
=== Usages ===
?108 v495 v494 a154 ?432 a154 v493 v499 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v106 values: a438 a345 a347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.1498615141123714
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v105 
=== Succesors ===
next: i480 
=== Usages ===
a107 v116 v129 v137 v139 v213 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v105 #next: i480  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 578
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - - a107 - - 
=== Succesors ===
=== Usages ===
v386 i480 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - - a107 - -  <|@  <|@
f <@~|@floating>@ <|@
tid v493 <|@
result [v34|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
i480 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i480 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.hash
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 100]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?108 
guard: - 
address: v493 
=== Succesors ===
next: v113 
=== Usages ===
v110 
=== Predecessor ===
v106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?108 guard: - address: v493 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v110 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i47 
y: i480 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i47 y: i480  <|@  <|@
f <@*|@fixed>@ <|@
tid v113 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 104]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.8234163966392338
=== Inputs ===
condition: v110 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v112 
=== Usages ===
=== Predecessor ===
i480 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v110 #trueSuccessor: v111 #falseSuccessor: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction CMP (x: v18|DWORD, y: [v34|QWORD[.] + 12]) size: DWORD state [bci:98, 6] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593999122078641085
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 107]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a481 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
result [v34|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a481 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a481 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.key
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v494 
=== Succesors ===
next: v120 
=== Usages ===
a341 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v494 #next: v120  <|@  <|@
f <@~|@floating>@ <|@
tid a341 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 109]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a481 
=== Succesors ===
=== Usages ===
v115 v342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a481  <|@  <|@
f <@~|@floating>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a2 
y: a341 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.ObjectEqualsNode>@ x: a2 y: a341  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 116]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.7992338499042312
=== Inputs ===
condition: v115 
=== Succesors ===
trueSuccessor: v116 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
a481 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v115 #trueSuccessor: v116 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592386780825938734
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v161  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v116 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583416595062174002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 119]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: i123 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i123  <|@  <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1391044a
stamp: void
targetMethod: HotSpotMethod<Object.equals(Object)>
=== Inputs ===
arguments: a2 a341 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a341  <|@  <|@
tid ?432 <|@
d <@d|@=== Debug Properties ===
bci: 126
code: ResolvedJavaMethodBytecode<HashMap.getNode(int, Object)>
duringCall: true
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: HashMap.java
sourceLine: 579
stackSize: 0
=== Inputs ===
outerFrameState: ?151 
values: - i47 a2 - - a107 - - 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?151 values: - i47 a2 - - a107 - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 126
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Object.equals
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v342 
stateDuring: ?432 
=== Succesors ===
next: v133 
=== Usages ===
v125 
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v342 stateDuring: ?432 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i123 
y: i56 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i123 y: i56  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:579) [bci: 129]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.04475281873373808
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v132 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
i123 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v132 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563198884380759866
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a482 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a482  <|@  <|@
f <@~|@floating>@ <|@
tid v495 <|@
result [v34|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a482 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a482 <|@
result v38|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v495 
=== Succesors ===
next: v141 
=== Usages ===
a345 v360 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v495 #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.29161471321695764
=== Inputs ===
condition: v360 
=== Succesors ===
trueSuccessor: v198 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
a482 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v360 #trueSuccessor: v198 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[.] = MOV [v34|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD[.], y: v38|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555116540746745423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v200  <|@  <|@
f <@*|@fixed>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v198 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561010887683935053
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a482 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a482  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B38 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583069341219560383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:580) [bci: 132]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583945551496852884
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 135]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a483  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
result [v34|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a107 
index: - 
=== Succesors ===
=== Usages ===
a483 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.next
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
nullCheck: false
stamp: n Ljava/util/HashMap$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v499 
=== Succesors ===
next: v211 
=== Usages ===
a347 v361 
=== Predecessor ===
v112 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v499 #next: v211  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a483  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 143]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
trueSuccessorProbability: 0.29161471321695764
=== Inputs ===
condition: v361 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v210 
=== Usages ===
=== Predecessor ===
a483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v361 #trueSuccessor: v212 #falseSuccessor: v210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v34|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4575987619784622818
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v201  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v200 v201 
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v200 v201 #next: v137  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:584) [bci: 146]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v106 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v106 #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v152 
=== Predecessor ===
v137 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B30" "B43" "B20" "B25" "B34" "B39" "B8" "B27" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606604687199354658
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a154 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a Ljava/util/HashMap$Node;
valueDescription: a -
=== Inputs ===
merge: v152 
values: a102 a10 a316 a316 a107 a107 a10 a10 
=== Succesors ===
=== Usages ===
v496 v11 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v152 values: a102 a10 a316 a316 a107 a107 a10 a10  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v153 v158 v159 v160 v161 v162 v182 v197 
=== Succesors ===
next: v14 
=== Usages ===
a154 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v153 v158 v159 v160 v161 v162 v182 v197 #next: v14  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
stamp: void
=== Inputs ===
value: a154 
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a154  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 11]
stamp: void
trueSuccessorProbability: 0.4296267496111975
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v12 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v12 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD[.], y: v41|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4600914669496254643
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a10 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a10 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4602983162410180297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 18]
stamp: void
=== Inputs ===
=== Succesors ===
next: a484 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a484  <|@  <|@
f <@~|@floating>@ <|@
tid v496 <|@
result [v41|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a154 
index: - 
=== Succesors ===
=== Usages ===
a484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a154 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a484 <|@
result v42|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: HashMap$Node.value
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 19]
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: - 
address: v496 
=== Succesors ===
next: v24 
=== Usages ===
a353 
=== Predecessor ===
v13 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v496 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid a353 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 19]
op: Uncompress
stamp: a Ljava/lang/Object;
=== Inputs ===
value: a484 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a484  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.get(HashMap.java:557) [bci: 22]
stamp: void
=== Inputs ===
result: a353 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a484 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a353 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581528552495068195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?108 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?108 #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid a347 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:581) [bci: 137]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
op: Uncompress
stamp: a Ljava/util/HashMap$Node;
=== Inputs ===
value: a483 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a483  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B47 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap.getNode(HashMap.java:569) [bci: 24]
at java.util.HashMap.get(HashMap.java:557) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
result int[-78619|0xfffffffffffecce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -78619
stableDimension: 0
stamp: i32 [-78619] ⇊00000000fffecce5 ⇈00000000fffecce5
stampKind: i32
value: int[-78619|0xfffffffffffecce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
v401 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78619|0xfffffffffffecce5]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B14" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i442 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-78619 - -76555] ⇊00000000fffec4e5 ⇈00000000fffedffd
valueDescription: i32
=== Inputs ===
merge: v439 
values: i446 i448 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v439 values: i446 i448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v447 
=== Succesors ===
next: v444 
=== Usages ===
i442 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v447 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?171 
actionAndReason: i442 
speculation: a10 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?171 actionAndReason: i442 speculation: a10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v15|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [v2|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP (x: v4|QWORD, y: v3|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = AND v5|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v6|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = SHR v5|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = MOV v7|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v8|DWORD, y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v11|DWORD[.], y: v11|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606932060893155407
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD[.], v10|DWORD] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD[.], v15|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v15|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction v16|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B48" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = SHR v15|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = XOR (x: v17|DWORD, y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = DEC v16|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = AND (x: v18|DWORD, y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v16|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[.] = MOV [v21|QWORD[.] + v20|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v22|DWORD[.], y: v22|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B26" 
    xhandlers
    flags 
    probability 4606450313733319401
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = MOV [v22|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v23|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605010190344953245
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD[.] = MOV [v22|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v24|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v25|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4604438380247838057
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B30" "B43" "B20" "B25" "B34" "B39" "B8" "B27" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606604687199354658
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v41|QWORD[.], y: v41|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4602983162410180297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[.] = MOV [v41|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4600914669496254643
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4594928513844000049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v29|DWORD[.] = MOV [v22|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v29|DWORD[.], y: v29|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4594128418058531601
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|DWORD[.]] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594275040979341165
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|DWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v22|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594270498264753376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = UNCOMPRESSPOINTER (input: v30|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD[.]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B38" "B47" 
    successors "B33" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595035163339694704
    begin_IR
      LIR
      nr   -1  <|@ instruction [v34|QWORD[.]] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction CMP (x: v18|DWORD, y: [v34|QWORD[.] + 12]) size: DWORD state [bci:98, 6] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593999122078641085
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = MOV [v34|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v35|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583416595062174002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6] <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|DWORD, y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563198884380759866
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD[.] = MOV [v34|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v38|DWORD[.], y: v38|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561010887683935053
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = UNCOMPRESSPOINTER (input: v38|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD[.]] destination: B38 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583945551496852884
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v34|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v40|DWORD[.], y: v40|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581528552495068195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - v18|DWORD v1|QWORD[.] - - v34|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD[.]] destination: B47 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592386780825938734
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4589238901440086433
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - v18|DWORD v1|QWORD[.] - v26|QWORD[.] - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6] <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B44" 
    xhandlers
    flags 
    probability 4588628691733929841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v26|QWORD[.]] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589226021485115926
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583069341219560383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v34|QWORD[.]] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 4582057987692171522
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580786370666490806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B8 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[.] = MOV [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v13|DWORD[.], y: v13|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576814610127157036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|DWORD[.], v12|DWORD] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v9|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4575987619784622818
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[Object[null]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4572098748999343751
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|DWORD[.] = MOV [v22|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v28|DWORD[.], y: v28|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4571341955619588991
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|DWORD[.]] destination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 4559193570309609540
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555116540746745423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4550763651340391677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 4548783763754726610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = UNCOMPRESSPOINTER (input: v22|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.]] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-78619|0xfffffffffffecce5]] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B14" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: v15|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: v0|QWORD[.] 
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-77843|0xfffffffffffecfed]] destination: B14 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: invokevirtual #31         // getNode:(int, java.lang.Object)java.util.HashMap$Node
     9: dup           
    10: astore_2      
    11: ifnonnull     18
    14: aconst_null   
    15: goto          22
    18: aload_2       
    19: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B5" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   22  <|@ instruction r11|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = SHR r10|QWORD y: 8 size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606914895974952345
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4606932060893155407
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B9 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B9" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: rsi|QWORD[.] 
locals: - rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr  122  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B48" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r9|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = XOR (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = AND (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B26" 
    xhandlers
    flags 
    probability 4606450313733319401
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605010190344953245
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4604438380247838057
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B30" "B43" "B20" "B25" "B34" "B39" "B8" "B27" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606604687199354658
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  376  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4602983162410180297
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  390  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4600914669496254643
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4594928513844000049
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4594128418058531601
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594275040979341165
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594270498264753376
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B38" "B47" 
    successors "B33" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595035163339694704
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - r9|DWORD rdx|QWORD[.] - - r10|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction CMP (x: r9|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98, 6] <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593999122078641085
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  298  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583416595062174002
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:44|DWORD stack:32|QWORD[.] - - stack:40|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6] <|@ <|@
      nr  316  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563198884380759866
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  326  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561010887683935053
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B38 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B41" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583945551496852884
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581528552495068195
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:44|DWORD stack:32|QWORD[.] - - r10|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B47 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B44" 
    xhandlers
    flags 
    probability 4592386780825938734
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B34 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4589238901440086433
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:44|DWORD stack:32|QWORD[.] - stack:40|QWORD[.] - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6] <|@ <|@
      nr  204  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B44" 
    xhandlers
    flags 
    probability 4588628691733929841
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589226021485115926
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  162  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583069341219560383
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  348  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 4582057987692171522
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580786370666490806
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B8 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: stack:40|QWORD[.] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2] <|@ <|@
      nr   94  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD[.] = MOV [rbx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576814610127157036
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rbx:0, stack:16]
live-base-pointers: []
java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: rbx|QWORD[.] stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4576803513614379298
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B3 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B42" 
    xhandlers
    flags 
    probability 4575987619784622818
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B37" "B41" 
    successors "B43" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4572098748999343751
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4571341955619588991
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 4559193570309609540
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B42" 
    xhandlers
    flags 
    probability 4555116540746745423
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B37 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4550763651340391677
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 4548783763754726610
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6] <|@ <|@
      nr  274  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r11|DWORD = MOVE input: int[-78619|0xfffffffffffecce5] <|@ <|@
      nr  412  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B14" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rdx:0, rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: rbx|QWORD[.] 
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE input: int[-77843|0xfffffffffffecfed] <|@ <|@
      nr  130  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: invokevirtual #31         // getNode:(int, java.lang.Object)java.util.HashMap$Node
     9: dup           
    10: astore_2      
    11: ifnonnull     18
    14: aconst_null   
    15: goto          22
    18: aload_2       
    19: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:16]
live-base-pointers: []
java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   14  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B6" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr   22  <|@ instruction r11|QWORD = AND r10|QWORD y: 7 size: QWORD <|@ <|@
      nr   24  <|@ instruction CMP r11|QWORD y: 1 size: QWORD <|@ <|@
      nr   26  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction r10|QWORD = SHR r10|QWORD y: 8 size: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD = MOV r10|QWORD size: DWORD <|@ <|@
      nr   34  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" "B6" 
    successors "B8" "B13" 
    xhandlers
    flags 
    probability 4607092346807469997
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   72  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B7" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:16]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: rsi|QWORD[.] 
locals: - rdx|QWORD[.] - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2] <|@ <|@
      nr  122  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B48" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  136  <|@ instruction r9|DWORD = SHR r10|DWORD y: 16 size: DWORD <|@ <|@
      nr  138  <|@ instruction r9|DWORD = XOR (x: r9|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction rcx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  142  <|@ instruction rcx|DWORD = AND (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  144  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4607020513836063276
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  152  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  154  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B26" 
    xhandlers
    flags 
    probability 4606450313733319401
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  170  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  172  <|@ instruction BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605010190344953245
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  178  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  180  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  182  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B44" 
    xhandlers
    flags 
    probability 4604438380247838057
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction JUMP ~[] destination: B20 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B30" "B43" "B20" "B25" "B33" "B35" "B8" "B27" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606604687199354658
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  376  <|@ instruction TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4602983162410180297
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  390  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  392  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors 
    xhandlers
    flags 
    probability 4600914669496254643
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  384  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" "B29" 
    xhandlers
    flags 
    probability 4594928513844000049
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  242  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B26" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4594275040979341165
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  258  <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed} <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4594270498264753376
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B38" "B47" 
    successors "B33" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4595035163339694704
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [rdx:0, r10:0, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - r9|DWORD rdx|QWORD[.] - - r10|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction CMP (x: r9|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98, 6] <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B44" "B35" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593999122078641085
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  298  <|@ instruction CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B44 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583416595062174002
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:579) [bci: 126]
locals: - stack:44|DWORD stack:32|QWORD[.] - - stack:40|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6] <|@ <|@
      nr  316  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B43" "B38" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4563198884380759866
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  326  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  328  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B43 falseDestination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4561010887683935053
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  338  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction JUMP ~[] destination: B38 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B43" "B47" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583945551496852884
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  356  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B43 falseDestination: B40 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B32" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581528552495068195
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:578) [bci: 98]
locals: - stack:44|DWORD stack:32|QWORD[.] - - r10|QWORD[.] - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6] <|@ <|@
      nr  398  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  400  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B47 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B25" 
    xhandlers
    flags 
    probability 4589238901440086433
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:572) [bci: 59]
locals: - stack:44|DWORD stack:32|QWORD[.] - stack:40|QWORD[.] - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6] <|@ <|@
      nr  204  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  206  <|@ instruction BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B44" 
    xhandlers
    flags 
    probability 4588628691733929841
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  234  <|@ instruction r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B25 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors 
    xhandlers
    flags 
    probability 4589226021485115926
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  162  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B44" 
    xhandlers
    flags 
    probability 4582057987692171522
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B27 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B44" 
    xhandlers
    flags 
    probability 4580786370666490806
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B8 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 9]
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: stack:40|QWORD[.] 
locals: - stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2] <|@ <|@
      nr   94  <|@ instruction rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction r11|DWORD[.] = MOV [rbx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   98  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  100  <|@ instruction BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576814610127157036
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4581335648048988814
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rbx:0, stack:16]
live-base-pointers: []
java.util.HashMap.get(HashMap.java:557) [bci: 0]
locals: rbx|QWORD[.] stack:32|QWORD[.] - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0] <|@ <|@
      nr   60  <|@ instruction r10|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B36" "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576190148444077332
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  372  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4572098748999343751
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD <|@ <|@
      nr  212  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" 
    xhandlers
    flags 
    probability 4571341955619588991
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B24 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors 
    xhandlers
    flags 
    probability 4559193570309609540
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  222  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4550763651340391677
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  106  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B44" 
    xhandlers
    flags 
    probability 4548783763754726610
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3 <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.util.HashMap.getNode(HashMap.java:576) [bci: 94]
locals: - - - - - - - - 
java.util.HashMap.get(HashMap.java:557) [bci: 6]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6] <|@ <|@
      nr  274  <|@ instruction r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B30 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction r11|DWORD = MOVE input: int[-78619|0xfffffffffffecce5] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B14" "B48" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  422  <|@ st <@st|@reference-map: [rdx:0, rbx:0]
live-base-pointers: []
java.util.HashMap.hash(HashMap.java:339) [bci: 12]
stack: r10|DWORD 
locals: - - 
java.util.HashMap.get(HashMap.java:557) [bci: 2]
stack: rbx|QWORD[.] 
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:12, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B49" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r11|DWORD = MOVE input: int[-77843|0xfffffffffffecfed] <|@ <|@
      nr  132  <|@ instruction JUMP ~[] destination: B14 -> B49 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokestatic  #28         // hash:(java.lang.Object)int
     5: aload_1       
     6: invokevirtual #31         // getNode:(int, java.lang.Object)java.util.HashMap$Node
     9: dup           
    10: astore_2      
    11: ifnonnull     18
    14: aconst_null   
    15: goto          22
    18: aload_2       
    19: getfield      #32         // java.util.HashMap$Node.value:java.lang.Object
    22: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204889542410448b52084e8b14d5d001000049bbaddeaddeaddeadde4d3bda0f85160200004c8b124d8bda4983e3074983fb010f853f02000049c1ea08458bd24585d20f842f020000448b5e244585db0f84d6010000468b04dd0c0000004585c00f84dc020000458bca41c1e9104533ca418bc8ffc94123c9443bc10f86a402000049c1e303458b548b104585d20f846c01000044894c2404428b34d50c000000413bf10f8563000000428b34d510000000448bde49c1e303458bc249c1e0034c3bda0f85040100004d8bd04d85d20f841b000000418b421448c1e003488b6c24204883c428850500000000c5f877c348b80000000000000000488b6c24204883c428850500000000c5f877c3428b34d51800000085f60f840001000042813cd508000000addeadde0f84d301000048c1e6034c8bd66666660f1f840000000000453b4a0c0f855f000000418b7210448bde49c1e3034c3bda0f846dffffff4c89542408488bf2498bd348b8ffffffffffffffff0f1f4000e8000000009085c04c8b5424080f8541ffffff418b721885f60f84ff00000048c1e6034c8bd6448b4c2404488b542410eb97418b721885f60f84e000000085050000000048c1e6034c8bd6488b542410e974ffffff4c8944240844891424488b742410498bd348b8ffffffffffffffffe8000000009085c00f84af0000004c8b542408e9ccfeffff48b80000000000000000488b6c24204883c428850500000000c5f877c349ba0000000000000000e9a0feffff49ba0000000000000000e991feffff4889742408488b74241048b8ffffffffffffffff90e80000000090488b5c2408448b5b244585db0f847d000000448bd0488b542410488bf3e9defdffff488bde488b742410e80000000090448bd0488b542410488bf3e9b3fdffff49ba0000000000000000e927feffff448b1424428b34d51800000085f60f840f000000448b4c2404488b542410e955feffff48b80000000000000000488b6c24204883c428850500000000c5f877c348b80000000000000000488b6c24204883c428850500000000c5f877c349c1e203498bf2418bd1488b4c24100f1f8000000000e800000000904c8bd0e9a6fdffff41bbe5ccfeff488bde45899f9c0200004d89a7a8020000e8000000009041bbedcffeffebe1e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:16]at java.util.HashMap.get(HashMap.java:557) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 57 10 r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD  <||@
  Comment 65 12 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 65 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 75 14 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 78 16 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 84 block B1 null  <||@
  Comment 84 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 20 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 87 22 r11|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 94 24 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 98 26 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 104 block B2 null  <||@
  Comment 104 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 30 r10|QWORD = SHR r10|QWORD y: 8 size: QWORD  <||@
  Comment 108 32 r10|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 111 34 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 36 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 120 block B7 null  <||@
  Comment 120 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 120 70 r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 124 72 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 127 74 BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B13  <||@
  Comment 133 block B13 null  <||@
  Comment 133 118 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 133 120 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2]  <||@
  Comment 133 [rdx:0, rsi:0, r11:0, stack:16]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rdx|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |              |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 122 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 144 124 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 150 block B15 null  <||@
  Comment 150 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 136 r9|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 157 138 r9|DWORD = XOR (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 160 140 rcx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 165 142 rcx|DWORD = AND (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 168 144 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 171 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48  <||@
  Comment 177 block B16 null  <||@
  Comment 177 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 150 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 181 152 r10|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 186 154 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 189 156 BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 195 block B18 null  <||@
  Comment 195 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 166 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 200 168 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 208 170 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 211 172 BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26  <||@
  Comment 217 block B19 null  <||@
  Comment 217 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 176 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 225 178 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 232 180 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 239 182 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 242 184 BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 248 block B20 null  <||@
  Comment 248 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 188 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 251 190 JUMP ~[] destination: B20 -> B44  <||@
  Comment 251 block B44 null  <||@
  Comment 251 374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 251 376 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 254 378 BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 260 block B46 null  <||@
  Comment 260 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 388 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 264 390 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 268 392 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 277 12  <||@
  Comment 287 block B45 null  <||@
  Comment 287 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 382 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 297 384 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 306 12  <||@
  Comment 316 block B26 null  <||@
  Comment 316 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 240 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 324 242 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 326 244 BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B29  <||@
  Comment 332 block B29 null  <||@
  Comment 332 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 258 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 332 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 344 260 BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 350 block B31 null  <||@
  Comment 350 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 280 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 354 282 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 357 284 JUMP ~[] destination: B31 -> B32  <||@
  Comment 357 block B32 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 357 286 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 368 288 CMP (x: r9|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98, 6]  <||@
  Comment 368 [rdx:0, r10:0, stack:16]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1         |2             |3  |4  |5             |6  |7 
     locals:  |-  |r9|DWORD  |rdx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 290 BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 378 block B33 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 378 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 294 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 382 296 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 389 298 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 392 300 BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B44 falseDestination: B33 -> B35  <||@
  Comment 398 block B35 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 398 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 308 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 403 310 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 406 312 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 409 314 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6]  <||@
  Comment 409 7  <||@
  Comment 423 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 428 [stack:8, stack:16]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |-  |stack:40|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 429 316 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 431 322 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 436 318 BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B44  <||@
  Comment 442 block B36 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 442 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 324 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 446 326 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 448 328 BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B43 falseDestination: B36 -> B38  <||@
  Comment 454 block B38 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 454 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 336 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 458 338 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 461 340 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 466 342 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 471 344 JUMP ~[] destination: B38 -> B32  <||@
  Comment 473 block B40 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 473 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 354 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 477 356 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 479 358 BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B43 falseDestination: B40 -> B47  <||@
  Comment 485 block B47 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 485 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 396 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6]  <||@
  Comment 485 [rsi:0, r10:0, stack:16]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 485 {infopoint: SAFEPOINT}  <||@
  Comment 485 11  <||@
  Comment 491 398 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 495 400 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 498 404 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 503 406 JUMP ~[] destination: B47 -> B32  <||@
  Comment 508 block B21 null  <||@
  Comment 508 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 194 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 513 196 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 517 198 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 522 200 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 525 202 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6]  <||@
  Comment 525 7  <||@
  Comment 535 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 540 [stack:0, stack:8, stack:16]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 541 204 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 543 206 BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 549 block B25 null  <||@
  Comment 549 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 234 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 554 236 JUMP ~[] destination: B25 -> B44  <||@
  Comment 559 block B17 null  <||@
  Comment 559 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 160 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 569 162 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 578 12  <||@
  Comment 588 block B27 null  <||@
  Comment 588 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 248 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 598 250 JUMP ~[] destination: B27 -> B44  <||@
  Comment 603 block B8 null  <||@
  Comment 603 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 78 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 613 80 JUMP ~[] destination: B8 -> B44  <||@
  Comment 618 block B10 null  <||@
  Comment 618 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 88 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 623 90 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 628 92 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2]  <||@
  Comment 628 7  <||@
  Comment 639 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 644 [stack:8, stack:16]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |-                  |stack:32|QWORD[.]  |- 
     stack:   |stack:40|QWORD[.]  |                   |    <||@
  Comment 645 94 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 650 96 r11|DWORD[.] = MOV [rbx|QWORD[.] + 36] size: DWORD  <||@
  Comment 654 98 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 657 100 BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 663 block B12 null  <||@
  Comment 663 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 110 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 666 112 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 671 114 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 674 116 JUMP ~[] destination: B12 -> B13  <||@
  Comment 679 block B6 null  <||@
  Comment 679 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 50 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 682 56 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 687 58 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 687 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 692 [rbx:0, stack:16]at java.util.HashMap.get(HashMap.java:557) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-   <||@
  Comment 693 60 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 696 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 701 64 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 704 66 JUMP ~[] destination: B6 -> B7  <||@
  Comment 709 block B43 null  <||@
  Comment 709 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 370 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 719 372 JUMP ~[] destination: B43 -> B44  <||@
  Comment 724 block B22 null  <||@
  Comment 724 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 210 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 728 212 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 736 214 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 738 216 BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 744 block B24 null  <||@
  Comment 744 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 744 226 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 749 228 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 754 230 JUMP ~[] destination: B24 -> B29  <||@
  Comment 759 block B23 null  <||@
  Comment 759 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 220 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 769 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 778 12  <||@
  Comment 788 block B11 null  <||@
  Comment 788 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 104 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 798 106 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 807 12  <||@
  Comment 817 block B30 null  <||@
  Comment 817 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 264 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 821 266 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 824 268 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 827 270 rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 832 272 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6]  <||@
  Comment 832 9  <||@
  Comment 839 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 844 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 845 274 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 848 276 JUMP ~[] destination: B30 -> B44  <||@
  Comment 853 block B48 null  <||@
  Comment 853 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 853 410 r11|DWORD = MOVE input: int[-78619|0xfffffffffffecce5]  <||@
  Comment 859 414 JUMP ~[] destination: B48 -> B49  <||@
  Comment 859 block B49 null  <||@
  Comment 859 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 859 130 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 862 418 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 869 420 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 876 422 DEOPT info [bci:12, 2]  <||@
  Comment 876 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 881 [rdx:0, rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rdx|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |              |    <||@
  Comment 882 block B14 null  <||@
  Comment 882 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 128 r11|DWORD = MOVE input: int[-77843|0xfffffffffffecfed]  <||@
  Comment 888 132 JUMP ~[] destination: B14 -> B49  <||@
  Comment 890 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 890 4  <||@
  Comment 896 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 896 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9698[java.util.HashMap.get(Object)]"
  method "HotSpotCompilation-9698[java.util.HashMap.get(Object)]"
  date 1527005215958
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107becc00 448b560849c1e203493bc20f854f92c1fe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24204889542410448b52084e8b14d5d001000049bb4056d123010000004d3bda0f85160200004c8b124d8bda4983e3074983fb010f853f02000049c1ea08458bd24585d20f842f020000448b5e244585db0f84d6010000468b04dd0c0000004585c00f84dc020000458bca41c1e9104533ca418bc8ffc94123c9443bc10f86a402000049c1e303458b548b104585d20f846c01000044894c2404428b34d50c000000413bf10f8563000000428b34d510000000448bde49c1e303458bc249c1e0034c3bda0f85040100004d8bd04d85d20f841b000000418b421448c1e003488b6c24204883c4288505eb22cafcc5f877c348b80000000000000000488b6c24204883c4288505ce22cafcc5f877c3428b34d51800000085f60f840001000042813cd508000000826500f80f84d301000048c1e6034c8bd66666660f1f840000000000453b4a0c0f855f000000418b7210448bde49c1e3034c3bda0f846dffffff4c89542408488bf2498bd348b8ffffffffffffffff0f1f4000e83495c1fe9085c04c8b5424080f8541ffffff418b721885f60f84ff00000048c1e6034c8bd6448b4c2404488b542410eb97418b721885f60f84e000000085051b22cafc48c1e6034c8bd6488b542410e974ffffff4c8944240844891424488b742410498bd348b8ffffffffffffffffe8c494c1fe9085c00f84af0000004c8b542408e9ccfeffff48b80000000000000000488b6c24204883c4288505be21cafcc5f877c349ba0000000000000000e9a0feffff49ba0000000000000000e991feffff4889742408488b74241048b8ffffffffffffffff90e85c94c1fe90488b5c2408448b5b244585db0f847d000000448bd0488b542410488bf3e9defdffff488bde488b742410e8ac04cefe90448bd0488b542410488bf3e9b3fdffff49ba0000000000000000e927feffff448b1424428b34d51800000085f60f840f000000448b4c2404488b542410e955feffff48b80000000000000000488b6c24204883c4288505f620cafcc5f877c348b80000000000000000488b6c24204883c4288505d920cafcc5f877c349c1e203498bf2418bd1488b4c24100f1f8000000000e85491c1fe904c8bd0e9a6fdffff41bbe5ccfeff488bde45899f9c0200004d89a7a8020000e88da6c1fe9041bbedcffeffebe1e8a1d605ff90e87ba5c1fe90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@80bfc39 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 53 [rdx:0, rsi:0, stack:16]at java.util.HashMap.get(HashMap.java:557) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 53 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 57 10 r10|QWORD = MOV [r10|DWORD * 8 + 464] size: QWORD  <||@
  Comment 65 12 r11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 65 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 75 14 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 78 16 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10  <||@
  Comment 84 block B1 null  <||@
  Comment 84 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 84 20 r10|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 87 22 r11|QWORD = AND r10|QWORD y: 7 size: QWORD  <||@
  Comment 94 24 CMP r11|QWORD y: 1 size: QWORD  <||@
  Comment 98 26 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B6  <||@
  Comment 104 block B2 null  <||@
  Comment 104 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 104 30 r10|QWORD = SHR r10|QWORD y: 8 size: QWORD  <||@
  Comment 108 32 r10|DWORD = MOV r10|QWORD size: DWORD  <||@
  Comment 111 34 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 36 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B2 -> B6 falseDestination: B2 -> B7  <||@
  Comment 120 block B7 null  <||@
  Comment 120 68 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 120 70 r11|DWORD[.] = MOV [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 124 72 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 127 74 BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B13  <||@
  Comment 133 block B13 null  <||@
  Comment 133 118 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 133 120 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:12, 2]  <||@
  Comment 133 [rdx:0, rsi:0, r11:0, stack:16]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rdx|QWORD[.]  |- 
     stack:   |rsi|QWORD[.]  |              |    <||@
  Comment 133 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 141 122 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 144 124 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 150 block B15 null  <||@
  Comment 150 134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 150 136 r9|DWORD = SHR r10|DWORD y: 16 size: DWORD  <||@
  Comment 157 138 r9|DWORD = XOR (x: r9|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 160 140 rcx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 165 142 rcx|DWORD = AND (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 168 144 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 171 146 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B48  <||@
  Comment 177 block B16 null  <||@
  Comment 177 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 177 150 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 181 152 r10|DWORD[.] = MOV [r11|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 186 154 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 189 156 BRANCH trueDestinationProbability: 0.06446366666825179 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 195 block B18 null  <||@
  Comment 195 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 166 stack:44|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 200 168 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 208 170 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 211 172 BRANCH trueDestinationProbability: 0.8259689429943833 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B26  <||@
  Comment 217 block B19 null  <||@
  Comment 217 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 217 176 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 225 178 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 232 180 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 239 182 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 242 184 BRANCH trueDestinationProbability: 0.9163405208487175 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 248 block B20 null  <||@
  Comment 248 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 248 188 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 251 190 JUMP ~[] destination: B20 -> B44  <||@
  Comment 251 block B44 null  <||@
  Comment 251 374 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 251 376 TEST (x: r10|QWORD[.], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 254 378 BRANCH trueDestinationProbability: 0.4296267496111975 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46  <||@
  Comment 260 block B46 null  <||@
  Comment 260 386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 260 388 rax|DWORD[.] = MOV [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 264 390 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 268 392 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 277 12  <||@
  Comment 287 block B45 null  <||@
  Comment 287 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 287 382 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 297 384 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 306 12  <||@
  Comment 316 block B26 null  <||@
  Comment 316 238 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 316 240 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 324 242 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 326 244 BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B29  <||@
  Comment 332 block B29 null  <||@
  Comment 332 256 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 332 258 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}  <||@
  Comment 332 {meta{HotSpotType<Ljava/util/HashMap$TreeNode;, resolved>;compressed}}  <||@
  Comment 344 260 BRANCH trueDestinationProbability: 8.895038545166933E-4 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31  <||@
  Comment 350 block B31 null  <||@
  Comment 350 278 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 350 280 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 354 282 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 357 284 JUMP ~[] destination: B31 -> B32  <||@
  Comment 357 block B32 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 357 286 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 368 288 CMP (x: r9|DWORD, y: [r10|QWORD[.] + 12]) size: DWORD state [bci:98, 6]  <||@
  Comment 368 [rdx:0, r10:0, stack:16]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1         |2             |3  |4  |5             |6  |7 
     locals:  |-  |r9|DWORD  |rdx|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 368 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 372 290 BRANCH trueDestinationProbability: 0.8234163966392338 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B40  <||@
  Comment 378 block B33 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 378 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 378 294 rsi|DWORD[.] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 382 296 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 389 298 CMP (x: r11|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 392 300 BRANCH trueDestinationProbability: 0.7992338499042312 condition: = trueDestination: B33 -> B44 falseDestination: B33 -> B35  <||@
  Comment 398 block B35 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 398 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 398 308 stack:40|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 403 310 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 406 312 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 409 314 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:126, 6]  <||@
  Comment 409 7  <||@
  Comment 423 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 428 [stack:8, stack:16]at java.util.HashMap.getNode(HashMap.java:579) [bci: 126, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4  |5                  |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |-  |stack:40|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 429 316 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 431 322 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 436 318 BRANCH trueDestinationProbability: 0.04475281873373808 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B44  <||@
  Comment 442 block B36 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 442 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 442 324 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 446 326 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 448 328 BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B36 -> B43 falseDestination: B36 -> B38  <||@
  Comment 454 block B38 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 454 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 336 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 458 338 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 461 340 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 466 342 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 471 344 JUMP ~[] destination: B38 -> B32  <||@
  Comment 473 block B40 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 473 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 473 354 rsi|DWORD[.] = MOV [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 477 356 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 479 358 BRANCH trueDestinationProbability: 0.29161471321695764 condition: = trueDestination: B40 -> B43 falseDestination: B40 -> B47  <||@
  Comment 485 block B47 loop 0 depth 1 header:106|LoopBegin  <||@
  Comment 485 394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 396 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:98, 6]  <||@
  Comment 485 [rsi:0, r10:0, stack:16]at java.util.HashMap.getNode(HashMap.java:578) [bci: 98, duringCall: false, rethrow: false]
              |0  |1               |2                  |3  |4  |5             |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |-  |r10|QWORD[.]  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 485 {infopoint: SAFEPOINT}  <||@
  Comment 485 11  <||@
  Comment 491 398 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 495 400 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 498 404 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 503 406 JUMP ~[] destination: B47 -> B32  <||@
  Comment 508 block B21 null  <||@
  Comment 508 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 508 194 stack:40|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 513 196 stack:48|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 517 198 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 522 200 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 525 202 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<Object.equals(Object)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:59, 6]  <||@
  Comment 525 7  <||@
  Comment 535 {HotSpotMethod<Object.equals(Object)>}  <||@
  Comment 540 [stack:0, stack:8, stack:16]at java.util.HashMap.getNode(HashMap.java:572) [bci: 59, duringCall: true, rethrow: false]
              |0  |1               |2                  |3  |4                  |5  |6  |7 
     locals:  |-  |stack:44|DWORD  |stack:32|QWORD[.]  |-  |stack:40|QWORD[.]  |-  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 541 204 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 543 206 BRANCH trueDestinationProbability: 0.07444460791525673 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B25  <||@
  Comment 549 block B25 null  <||@
  Comment 549 232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 549 234 r10|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 554 236 JUMP ~[] destination: B25 -> B44  <||@
  Comment 559 block B17 null  <||@
  Comment 559 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 160 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 569 162 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 578 12  <||@
  Comment 588 block B27 null  <||@
  Comment 588 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 588 248 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 598 250 JUMP ~[] destination: B27 -> B44  <||@
  Comment 603 block B8 null  <||@
  Comment 603 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 603 78 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 613 80 JUMP ~[] destination: B8 -> B44  <||@
  Comment 618 block B10 null  <||@
  Comment 618 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 88 stack:40|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 623 90 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 628 92 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:9, 2]  <||@
  Comment 628 7  <||@
  Comment 639 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 644 [stack:8, stack:16]at java.util.HashMap.hash(HashMap.java:339) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |-                  |stack:32|QWORD[.]  |- 
     stack:   |stack:40|QWORD[.]  |                   |    <||@
  Comment 645 94 rbx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 650 96 r11|DWORD[.] = MOV [rbx|QWORD[.] + 36] size: DWORD  <||@
  Comment 654 98 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 657 100 BRANCH trueDestinationProbability: 0.01797506187829823 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 663 block B12 null  <||@
  Comment 663 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 110 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 666 112 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 671 114 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 674 116 JUMP ~[] destination: B12 -> B13  <||@
  Comment 679 block B6 null  <||@
  Comment 679 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 679 50 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 682 56 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 687 58 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:0]  <||@
  Comment 687 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 692 [rbx:0, stack:16]at java.util.HashMap.get(HashMap.java:557) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2 
     locals:  |rbx|QWORD[.]  |stack:32|QWORD[.]  |-   <||@
  Comment 693 60 r10|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 696 62 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 701 64 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 704 66 JUMP ~[] destination: B6 -> B7  <||@
  Comment 709 block B43 null  <||@
  Comment 709 368 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 709 370 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 719 372 JUMP ~[] destination: B43 -> B44  <||@
  Comment 724 block B22 null  <||@
  Comment 724 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 724 210 r10|DWORD[.] = MOVE stack:48|DWORD[.] moveKind: DWORD  <||@
  Comment 728 212 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 736 214 TEST (x: rsi|DWORD[.], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 738 216 BRANCH trueDestinationProbability: 0.1388936170212766 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24  <||@
  Comment 744 block B24 null  <||@
  Comment 744 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 744 226 r9|DWORD = MOVE stack:44|DWORD moveKind: DWORD  <||@
  Comment 749 228 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 754 230 JUMP ~[] destination: B24 -> B29  <||@
  Comment 759 block B23 null  <||@
  Comment 759 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 759 220 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 769 222 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 778 12  <||@
  Comment 788 block B11 null  <||@
  Comment 788 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 788 104 rax|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 798 106 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 807 12  <||@
  Comment 817 block B30 null  <||@
  Comment 817 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 817 264 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@64c9a58d encoding: base: 0 shift: 3  <||@
  Comment 821 266 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 824 268 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 827 270 rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 832 272 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] [] callTarget: HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:94, 6]  <||@
  Comment 832 9  <||@
  Comment 839 {HotSpotMethod<HashMap$TreeNode.getTreeNode(int, Object)>}  <||@
  Comment 844 []at java.util.HashMap.getNode(HashMap.java:576) [bci: 94, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |- 
  at java.util.HashMap.get(HashMap.java:557) [bci: 6, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 845 274 r10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 848 276 JUMP ~[] destination: B30 -> B44  <||@
  Comment 853 block B48 null  <||@
  Comment 853 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 853 410 r11|DWORD = MOVE input: int[-78619|0xfffffffffffecce5]  <||@
  Comment 859 414 JUMP ~[] destination: B48 -> B49  <||@
  Comment 859 block B49 null  <||@
  Comment 859 416 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 859 130 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 862 418 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 869 420 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 876 422 DEOPT info [bci:12, 2]  <||@
  Comment 876 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 881 [rdx:0, rbx:0]at java.util.HashMap.hash(HashMap.java:339) [bci: 12, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |-          |- 
     stack:   |r10|DWORD  |  
  at java.util.HashMap.get(HashMap.java:557) [bci: 2, duringCall: true, rethrow: false]
              |0             |1             |2 
     locals:  |-             |rdx|QWORD[.]  |- 
     stack:   |rbx|QWORD[.]  |              |    <||@
  Comment 882 block B14 null  <||@
  Comment 882 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 128 r11|DWORD = MOVE input: int[-77843|0xfffffffffffecfed]  <||@
  Comment 888 132 JUMP ~[] destination: B14 -> B49  <||@
  Comment 890 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 890 4  <||@
  Comment 896 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 896 5  <||@
  HexCodeFile>>> <|@
end_nmethod
