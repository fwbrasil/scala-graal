begin_compilation
  name " HotSpotCompilation-6972[java.util.Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)]"
  method "HotSpotCompilation-6972[java.util.Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)]"
  date 1527005195510
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a696 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a696  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v711 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a696 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
=== Succesors ===
next: i697 
=== Usages ===
v712 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 #next: i697  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v44 ?85 v43 v183 j393 ?237 v717 ?100 v716 ?118 ?111 ?124 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3144
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v307 i697 a701 i702 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a696 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v712 
=== Succesors ===
next: v9 
=== Usages ===
i60 i50 i70 
=== Predecessor ===
a696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v712 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v245 a353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7848080518349682
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i698 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i698  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 8]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i698 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
=== Succesors ===
next: v212 
=== Usages ===
i60 v62 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
stamp: i32
=== Inputs ===
x: i697 
y: i698 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i698 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i60 y: i698  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v211 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163] ⇊00000000ffff6aed ⇈00000000ffff6aed
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i699 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i699  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 31]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i699 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
=== Succesors ===
next: v216 
=== Usages ===
i70 v72 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
stamp: i32
=== Inputs ===
x: i697 
y: i699 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i699  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i699 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i70 y: i699  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v215 #falseSuccessor: v213  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3156) [bci: 80]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i700 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i700  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 54]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i700 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v220 
=== Usages ===
i50 v52 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
stamp: i32
=== Inputs ===
x: i697 
y: i700 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i700  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i700 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i700  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
i700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v219 #falseSuccessor: v217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39699
stableDimension: 0
stamp: i32 [-39699] ⇊00000000ffff64ed ⇈00000000ffff64ed
stampKind: i32
value: int[-39699|0xffffffffffff64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i305 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-41995 - -36619] ⇊00000000ffff40e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v301 
values: i309 i311 i313 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i309 i311 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v308 v310 v312 
=== Succesors ===
next: v307 
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v308 v310 v312 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i305 
speculation: a304 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i305 speculation: a304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a701  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a701 v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v717 
=== Succesors ===
next: i702 
=== Usages ===
a162 v721 v718 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v717 #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
i702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v718 
=== Succesors ===
next: i703 
=== Usages ===
i103 i281 v259 
=== Predecessor ===
a701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v718 #next: i703  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i703 v240 i709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: v107 
=== Usages ===
i88 i127 
=== Predecessor ===
i702 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i88 i94 v104 i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 6]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i703 
y: i87 
=== Succesors ===
=== Usages ===
v183 i103 i238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i703 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i88 
y: i702 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i87 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i103 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a701 
=== Succesors ===
=== Usages ===
?111 ?237 a126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a701  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3154
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - 
=== Succesors ===
=== Usages ===
?100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 -  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 202
stackSize: 0
=== Inputs ===
outerFrameState: ?85 
values: a2 - 
=== Succesors ===
=== Usages ===
?118 ?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 74]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
?124 ?118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9529541826683171
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
i703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596556376054446831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i110 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i110  <|@  <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@734ba789
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i88 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i88  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 649
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: a2 i32 
=== Succesors ===
=== Usages ===
?111 ?237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a2 i32  <|@  <|@
tid ?237 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?118 
values: - - a2 a162 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - a2 a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v183 
stateDuring: ?237 
=== Succesors ===
next: v251 
=== Usages ===
?111 v338 j404 i329 v380 i281 a353 v245 v259 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v183 stateDuring: ?237 #next: v251  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?118 
values: - - a2 a162 i110 
=== Succesors ===
=== Usages ===
a353 v257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - a2 a162 i110  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i5 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i110 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
i110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v250 #falseSuccessor: v246  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j332 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j332 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j377 
=== Usages ===
v723 v724 
=== Predecessor ===
v246 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j332 
index: - 
=== Succesors ===
=== Usages ===
j377 v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: j378 
=== Usages ===
j336 v725 v726 a352 v731 v727 v728 v729 v730 
=== Predecessor ===
j332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: j378  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j332 
index: - 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v341 
=== Usages ===
v342 
=== Predecessor ===
j377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i110 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v340 #falseSuccessor: v339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4576406039876697391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i110 
y: i87 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i110 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i329 
y: i360 
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i361 
y: i330 
=== Succesors ===
=== Usages ===
j335 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i361 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i331 
=== Succesors ===
=== Usages ===
j336 v727 v728 v729 v730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i331  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64
=== Inputs ===
x: j335 
y: j377 
=== Succesors ===
=== Usages ===
v342 v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j335 y: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j336 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j378 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v347 #falseSuccessor: v346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4546351519551884231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576353515695740951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
value: j336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v723 value: j336 stateAfter: - lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v727 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v727 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v728 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v728 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v729 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v729 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v730 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v730 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
value: i110 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 value: i110 stateAfter: - lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: j328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: j328 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: v403 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: v403 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a352 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j377 
=== Succesors ===
next: v354 
=== Usages ===
a357 
=== Predecessor ===
v351 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j377 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
a352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4562311638983958796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4562731832431610312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?111 
arguments: v327 i110 i5 
=== Succesors ===
next: v356 
=== Usages ===
a357 
=== Predecessor ===
v344 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?111 arguments: v327 i110 i5 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
a353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v355 
values: a352 a353 
=== Succesors ===
=== Usages ===
v733 a287 v722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: a352 a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v546 
=== Usages ===
a357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v418 
=== Usages ===
j547 j549 
=== Predecessor ===
v355 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i110 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i702 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v259 
trueValue: i702 
falseValue: i110 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v259 trueValue: i702 falseValue: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i281 
=== Succesors ===
=== Usages ===
j611 v733 j409 v415 v543 j593 j599 j603 j607 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j328 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j610 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 j662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j566 j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j607 j659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 j635 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j603 j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j641 j583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j599 j653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j647 j591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j593 j648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j636 v649 j576 j584 v594 j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a357 
index: - 
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v546 
address: v722 
=== Succesors ===
=== Usages ===
v734 v736 v738 v740 v742 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v546 address: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v546 
address: v721 
=== Succesors ===
=== Usages ===
v735 v737 v739 v741 v743 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v546 address: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j405 
y: j592 
=== Succesors ===
=== Usages ===
v594 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j593 
y: j364 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j593 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v419 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B62" 
    successors "B25" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v423 
values: j364 j591 
=== Succesors ===
=== Usages ===
v743 j591 v742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v423 values: j364 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v422 
=== Succesors ===
next: v704 
=== Usages ===
v704 v427 v428 j584 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v422 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j584 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v423 
address: v743 
=== Succesors ===
next: v680 
=== Usages ===
v680 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v423 address: v743 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j584 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v742 
value: v704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v742 value: v704 stateAfter: - lastLocationAccess: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j584 
y: j159 
=== Succesors ===
=== Usages ===
j576 j584 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j584 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j593 
y: j591 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j593 y: j591  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v427 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v423 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v423 #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j576 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v432 
values: j364 j591 
=== Succesors ===
=== Usages ===
v741 j583 j567 v600 v740 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v432 values: j364 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: v456 
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j405 
y: j598 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j599 
y: j576 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j599 y: j576  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v455 #falseSuccessor: v454  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
v705 
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j576 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v454 
address: v741 
=== Succesors ===
next: v678 
=== Usages ===
v678 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v454 address: v741 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j576 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v740 
value: v705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v740 value: v705 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j576 
y: j383 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j576 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j567 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j583 j576 
=== Succesors ===
=== Usages ===
v739 j575 j559 v604 v738 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j583 j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v459 
=== Succesors ===
next: v462 
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v459 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j405 
y: j602 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j567 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j603 y: j567  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v461 #falseSuccessor: v460  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
v706 
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j567 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v460 
address: v739 
=== Succesors ===
next: v676 
=== Usages ===
v676 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v460 address: v739 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j567 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
value: v706 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 value: v706 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j567 
y: j574 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j567 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v447 
values: j575 j567 
=== Succesors ===
=== Usages ===
v737 j566 j550 v608 v736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v447 values: j575 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v446 v465 
=== Succesors ===
next: v468 
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v446 v465 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j405 
y: j606 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j607 
y: j559 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j607 y: j559  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
v707 
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j559 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v466 
address: v737 
=== Succesors ===
next: v674 
=== Usages ===
v674 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v466 address: v737 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j559 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
value: v707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 value: v707 stateAfter: - lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid j566 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j559 
y: j552 
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j559 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j550 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v451 
values: j566 j559 
=== Succesors ===
=== Usages ===
v735 v612 v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: j566 j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v471 
=== Succesors ===
next: v474 
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v471 #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j405 
y: j610 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j610  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j611 
y: j550 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j611 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v473 #falseSuccessor: v472  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i708 
=== Usages ===
i708 
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i708  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j550 
=== Succesors ===
=== Usages ===
i708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i708 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v472 
address: v735 
=== Succesors ===
next: v672 
=== Usages ===
v672 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v472 address: v735 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j550 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
i708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 value: i708 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v453 v477 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v453 v477 #next: v615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v484 
=== Usages ===
j617 
=== Predecessor ===
v436 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
j409 v543 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j404 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j404  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v483 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a357 
index: j405 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: j405  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v615 
address: v733 
=== Succesors ===
=== Usages ===
v744 v745 v746 v747 v748 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v615 address: v733  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j404 
y: j405 
=== Succesors ===
=== Usages ===
j662 j648 j653 j656 j659 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j404 y: j405  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j409 
y: j592 
=== Succesors ===
=== Usages ===
v649 v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j648 
y: j364 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j648 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v649 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v649 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v489 
values: j364 j647 
=== Succesors ===
=== Usages ===
v748 j647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v489 values: j364 j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v488 
=== Succesors ===
next: v690 
=== Usages ===
j642 v492 v493 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v488 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j642 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: v691 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: v691 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j642 
y: j159 
=== Succesors ===
=== Usages ===
j636 j642 v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j642 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j648 
y: j647 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j648 y: j647  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v492 #falseSuccessor: v494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v489 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v489 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v497 
values: j364 j647 
=== Succesors ===
=== Usages ===
v747 j641 j630 v654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v497 values: j364 j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v498 
=== Succesors ===
next: v519 
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v498 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j409 
y: j598 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j636 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j653 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v518 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j636 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
value: v695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v747 value: v695 stateAfter: - lastLocationAccess: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j636 
y: j383 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j636 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v508 
values: j641 j636 
=== Succesors ===
=== Usages ===
v746 j635 j624 v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v508 values: j641 j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v522 
=== Succesors ===
next: v525 
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v522 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j409 
y: j602 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j630 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j630  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j630 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
value: v694 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v746 value: v694 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid j635 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j630 
y: j574 
=== Succesors ===
=== Usages ===
j624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j630 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j624 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v511 
values: j635 j630 
=== Succesors ===
=== Usages ===
v745 j629 j618 v660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v511 values: j635 j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v510 v528 
=== Succesors ===
next: v531 
=== Usages ===
j624 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v510 v528 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j409 
y: j606 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j659 
y: j624 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j659 y: j624  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j624 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j624  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
value: v693 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 value: v693 stateAfter: - lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j624 
y: j552 
=== Succesors ===
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j624 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v514 
values: j629 j624 
=== Succesors ===
=== Usages ===
v744 v663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v514 values: j629 j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v534 
=== Succesors ===
next: v537 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j409 
y: j610 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j610  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j662 
y: j618 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j662 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v663 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v663 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j618 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j618  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: i692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: i692 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v489 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v500 v516 v540 
=== Succesors ===
next: a287 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v516 v540 #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a357 
=== Succesors ===
next: v186 
=== Usages ===
a126 a185 
=== Predecessor ===
v501 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a357 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a287 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: a185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j393 
=== Usages ===
=== Predecessor ===
a287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: a185 stateAfter: - lastLocationAccess: - #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v399 
=== Usages ===
j395 
=== Predecessor ===
v186 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j393 
y: i394 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j393 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: j398 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j398  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: i400 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i709 
=== Usages ===
=== Predecessor ===
j393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: i400 stateAfter: - lastLocationAccess: - #next: i709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i709 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: v122 
=== Usages ===
i94 i127 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i709 
y: i87 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i709 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
i709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B10" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v123 
values: a287 a162 
=== Succesors ===
=== Usages ===
v720 ?124 v719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: a287 a162  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i709 i703 
=== Succesors ===
=== Usages ===
v720 ?124 v173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i709 i703  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i94 i88 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i94 i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v125 
=== Succesors ===
next: v240 
=== Usages ===
a126 i127 i238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v125 #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
value: i238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i710 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 value: i238 stateAfter: - lastLocationAccess: - #next: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a126 
index: - 
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: v236 
=== Usages ===
v173 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i710 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i127 y: i710  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v233 #falseSuccessor: v235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
v181 
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a126 
index: i127 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v233 
address: v720 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v233 address: v720 value: i191 stateAfter: - lastLocationAccess: - #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3156) [bci: 80]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 650
stackSize: 2
=== Inputs ===
outerFrameState: ?100 
values: a2 i32 a126 i127 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a2 i32 a126 i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 174
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v423 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v423  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a696 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a696  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/Formatter$FormatSpecifier;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v711 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v711 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a696 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a696 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$FormatSpecifier.f
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 5]
nullCheck: false
stamp: n# Ljava/util/Formatter$Flags;
=== Inputs ===
stateBefore: - 
guard: - 
address: v711 
=== Succesors ===
next: i697 
=== Usages ===
v712 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v711 #next: i697  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/lang/StringBuilder;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v44 ?85 v43 v183 j393 ?237 v717 ?100 v716 ?118 ?111 ?124 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32 [0 - 1] ⇈0000000000000001
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v6 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3144
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v307 i697 a701 i702 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v712 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a696 
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i697 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v712 
=== Succesors ===
next: v9 
=== Usages ===
i60 i50 i70 
=== Predecessor ===
a696 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v712 #next: v9  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6 v245 a353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i5 
=== Succesors ===
=== Usages ===
v9 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 1]
stamp: void
trueSuccessorProbability: 0.7848080518349682
=== Inputs ===
condition: v6 
=== Succesors ===
trueSuccessor: v7 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6 #trueSuccessor: v7 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i698 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i698  <|@  <|@
f <@~|@floating>@ <|@
tid a11 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 8]
rawvalue: Formatter.Flags@859099015
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@859099015]
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v713 <|@
result [v5|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a11 
index: - 
=== Succesors ===
=== Usages ===
i698 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a11 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i698 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v713 
=== Succesors ===
next: v212 
=== Usages ===
i60 v62 
=== Predecessor ===
v7 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v713 #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
stamp: i32
=== Inputs ===
x: i697 
y: i698 
=== Succesors ===
=== Usages ===
v62 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i698  <|@  <|@
f <@~|@floating>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 11]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i698 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i60 y: i698  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v62 
=== Succesors ===
trueSuccessor: v211 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i698 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v62 #trueSuccessor: v211 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v5|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result int[-38163|0xffffffffffff6aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38163
stableDimension: 0
stamp: i32 [-38163] ⇊00000000ffff6aed ⇈00000000ffff6aed
stampKind: i32
value: int[-38163|0xffffffffffff6aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v211 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38163|0xffffffffffff6aed]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3145) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i699 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i699  <|@  <|@
f <@~|@floating>@ <|@
tid a18 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 31]
rawvalue: Formatter.Flags@2009893684
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@2009893684]
=== Inputs ===
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v714 <|@
result [v8|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a18 
index: - 
=== Succesors ===
=== Usages ===
i699 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a18 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i699 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v714 
=== Succesors ===
next: v216 
=== Usages ===
i70 v72 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v714 #next: v216  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
stamp: i32
=== Inputs ===
x: i697 
y: i699 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i699  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 34]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i70 
y: i699 
=== Succesors ===
=== Usages ===
v216 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i70 y: i699  <|@  <|@
f <@*|@fixed>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v215 
falseSuccessor: v213 
=== Usages ===
=== Predecessor ===
i699 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v215 #falseSuccessor: v213  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid i313 <|@
result int[-38931|0xffffffffffff67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v215 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed]] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3147) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v216 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@*|@fixed>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3156) [bci: 80]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 50]
stamp: void
=== Inputs ===
=== Succesors ===
next: i700 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i700  <|@  <|@
f <@~|@floating>@ <|@
tid a26 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 54]
rawvalue: Formatter.Flags@1921891745
stableDimension: 0
stamp: a!# Ljava/util/Formatter$Flags;
stampKind: a -
value: Object[Formatter.Flags@1921891745]
=== Inputs ===
=== Succesors ===
=== Usages ===
v715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v715 <|@
result [v11|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a26 
index: - 
=== Succesors ===
=== Usages ===
i700 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a26 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i700 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Formatter$Flags.flags
nodeSourcePosition: at java.util.Formatter$Flags.valueOf(Formatter.java:4416) [bci: 1]
at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 5]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v715 
=== Succesors ===
next: v220 
=== Usages ===
i50 v52 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v715 #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 8]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
stamp: i32
=== Inputs ===
x: i697 
y: i700 
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i697 y: i700  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4420) [bci: 13]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 57]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i50 
y: i700 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i50 y: i700  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v219 
falseSuccessor: v217 
=== Usages ===
=== Predecessor ===
i700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v219 #falseSuccessor: v217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND (x: v4|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: v310 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v310  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result int[-39699|0xffffffffffff64ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -39699
stableDimension: 0
stamp: i32 [-39699] ⇊00000000ffff64ed ⇈00000000ffff64ed
stampKind: i32
value: int[-39699|0xffffffffffff64ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 
=== Predecessor ===
v219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39699|0xffffffffffff64ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i305 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-41995 - -36619] ⇊00000000ffff40e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v301 
values: i309 i311 i313 
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v301 values: i309 i311 i313  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v308 v310 v312 
=== Succesors ===
next: v307 
=== Usages ===
i305 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v308 v310 v312 #next: v307  <|@  <|@
f <@~|@floating>@ <|@
tid a304 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i305 
speculation: a304 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i305 speculation: a304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3151) [bci: 60]
stamp: void
=== Inputs ===
=== Succesors ===
next: a701 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a701  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a701 v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a701 <|@
result v15|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v717 
=== Succesors ===
next: i702 
=== Usages ===
a162 v721 v718 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v717 #next: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v718 <|@
result [v15|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
i702 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i702 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v718 
=== Succesors ===
next: i703 
=== Usages ===
i103 i281 v259 
=== Predecessor ===
a701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v718 #next: i703  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i703 v240 i709 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i703 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: v107 
=== Usages ===
i88 i127 
=== Predecessor ===
i702 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: v107  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i88 i94 v104 i329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i88 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 6]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i703 
y: i87 
=== Succesors ===
=== Usages ===
v183 i103 i238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i703 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i88 
y: i702 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i88 y: i702  <|@  <|@
f <@~|@floating>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i103 
y: i87 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i103 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a701 
=== Succesors ===
=== Usages ===
?111 ?237 a126 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a701  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 76
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: Formatter.java
sourceLine: 3154
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - a2 - 
=== Succesors ===
=== Usages ===
?100 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 -  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 202
stackSize: 0
=== Inputs ===
outerFrameState: ?85 
values: a2 - 
=== Succesors ===
=== Usages ===
?118 ?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result int[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 74]
rawvalue: 45
stableDimension: 0
stamp: i32 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i32
value: int[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
?124 ?118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9529541826683171
=== Inputs ===
condition: v104 
=== Succesors ===
trueSuccessor: v105 
falseSuccessor: v106 
=== Usages ===
=== Predecessor ===
i703 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v104 #trueSuccessor: v105 #falseSuccessor: v106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v15|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596556376054446831
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v125  <|@  <|@
f <@*|@fixed>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
v105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v17|DWORD, v18|DWORD] destination: B10 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: i110 
=== Usages ===
=== Predecessor ===
v107 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i110  <|@  <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@734ba789
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i88 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i88  <|@  <|@
tid ?118 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 649
stackSize: 0
=== Inputs ===
outerFrameState: ?100 
values: a2 i32 
=== Succesors ===
=== Usages ===
?111 ?237 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a2 i32  <|@  <|@
tid ?237 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?118 
values: - - a2 a162 
=== Succesors ===
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - a2 a162  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i110 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v183 
stateDuring: ?237 
=== Succesors ===
next: v251 
=== Usages ===
?111 v338 j404 i329 v380 i281 a353 v245 v259 
=== Predecessor ===
v106 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v183 stateDuring: ?237 #next: v251  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?118 
values: - - a2 a162 i110 
=== Succesors ===
=== Usages ===
a353 v257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?118 values: - - a2 a162 i110  <|@  <|@
f <@~|@floating>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i5 
=== Succesors ===
=== Usages ===
v251 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i110 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v245 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v246 
=== Usages ===
=== Predecessor ===
i110 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v245 #trueSuccessor: v250 #falseSuccessor: v246  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v1|QWORD[.] v20|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -65889 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v1|QWORD[.] v20|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 7, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: j332 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j332 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j377 
=== Usages ===
v723 v724 
=== Predecessor ===
v246 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v723 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j332 
index: - 
=== Succesors ===
=== Usages ===
j377 v379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j377 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
=== Succesors ===
next: j378 
=== Usages ===
j336 v725 v726 a352 v731 v727 v728 v729 v730 
=== Predecessor ===
j332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v723 #next: j378  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j332 
index: - 
=== Succesors ===
=== Usages ===
j378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v724 
=== Succesors ===
next: v341 
=== Usages ===
v342 
=== Predecessor ===
j377 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v724 #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid i337 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i110 
y: i337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i110 y: i337  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v338 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v339 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v338 #trueSuccessor: v340 #falseSuccessor: v339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4576406039876697391
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid i329 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i110 
y: i87 
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i110 y: i87  <|@  <|@
f <@~|@floating>@ <|@
tid i360 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i361 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i361 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i329 
y: i360 
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i329 y: i360  <|@  <|@
f <@~|@floating>@ <|@
tid i330 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i331 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i361 
y: i330 
=== Succesors ===
=== Usages ===
j335 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i361 y: i330  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i331 
=== Succesors ===
=== Usages ===
j336 v727 v728 v729 v730 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i331  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64
=== Inputs ===
x: j335 
y: j377 
=== Succesors ===
=== Usages ===
v342 v379 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j335 y: j377  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j336 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j378 y: j336  <|@  <|@
f <@*|@fixed>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v347 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v347 #falseSuccessor: v346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v24|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND v25|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4546351519551884231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576353515695740951
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v379 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v723 
value: j336 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v723 value: j336 stateAfter: - lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v727 <|@
result [v27|QWORD + v22|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v727 
=== Succesors ===
next: v369 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v727 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result [v27|QWORD + v22|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v728 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v728 #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v729 <|@
result [v27|QWORD + v22|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v729 
=== Succesors ===
next: v375 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v729 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v730 <|@
result [v27|QWORD + v22|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j335 
index: j377 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j335 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
address: v730 
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v730 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v725 <|@
result [v22|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v725 
value: i110 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v725 value: i110 stateAfter: - lastLocationAccess: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v726 <|@
result [v22|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v726 
value: j328 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v726 value: j328 stateAfter: - lastLocationAccess: - #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v731 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j377 
index: - 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j377 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v731 
value: v403 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v381 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v731 value: v403 stateAfter: - lastLocationAccess: - #next: v351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: a352 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a352 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j377 
=== Succesors ===
next: v354 
=== Usages ===
a357 
=== Predecessor ===
v351 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j377 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
a352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4562311638983958796
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@*|@fixed>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4562731832431610312
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v343 v345 
=== Succesors ===
next: a353 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v343 v345 #next: a353  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a353 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a353 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?111 
arguments: v327 i110 i5 
=== Succesors ===
next: v356 
=== Usages ===
a357 
=== Predecessor ===
v344 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?111 arguments: v327 i110 i5 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
a353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v1|QWORD[.] v20|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a357 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v355 
values: a352 a353 
=== Succesors ===
=== Usages ===
v733 a287 v722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v355 values: a352 a353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v546 
=== Usages ===
a357 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v546  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v418 
=== Usages ===
j547 j549 
=== Predecessor ===
v355 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i702 
y: i110 
=== Succesors ===
=== Usages ===
i281 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i702 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i281 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v259 
trueValue: i702 
falseValue: i110 
=== Succesors ===
=== Usages ===
j405 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v259 trueValue: i702 falseValue: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j405 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i281 
=== Succesors ===
=== Usages ===
j611 v733 j409 v415 v543 j593 j599 j603 j607 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i281  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j328 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j610 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j611 j662 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j552 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j566 j629 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j606 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j607 j659 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j574 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j575 j635 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j602 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j603 j656 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j383 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j641 j583 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j599 j653 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j647 j591 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j593 j648 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j364 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j636 v649 j576 j584 v594 j642 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v415 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v415 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v16|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v34|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v722 <|@
result [v32|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a357 
index: - 
=== Succesors ===
=== Usages ===
j549 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j549 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v546 
address: v722 
=== Succesors ===
=== Usages ===
v734 v736 v738 v740 v742 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v546 address: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v721 <|@
result [v15|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a701 
=== Succesors ===
=== Usages ===
j547 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a701  <|@  <|@
f <@~|@floating>@ <|@
tid j547 <|@
result v36|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v546 
address: v721 
=== Succesors ===
=== Usages ===
v735 v737 v739 v741 v743 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v546 address: v721  <|@  <|@
f <@~|@floating>@ <|@
tid j593 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j405 
y: j592 
=== Succesors ===
=== Usages ===
v594 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j593 
y: j364 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j593 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v594 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v594 #trueSuccessor: v419 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v32|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = LEA [v15|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B62" 
    successors "B25" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j584 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v423 
values: j364 j591 
=== Succesors ===
=== Usages ===
v743 j591 v742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v423 values: j364 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v422 
=== Succesors ===
next: v704 
=== Usages ===
v704 v427 v428 j584 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v422 #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid v743 <|@
result [v36|QWORD[*] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j584 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v704 <|@
result v39|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v423 
address: v743 
=== Succesors ===
next: v680 
=== Usages ===
v680 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v423 address: v743 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v742 <|@
result [v35|QWORD[.] + v38|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j584 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j584  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v742 
value: v704 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v742 value: v704 stateAfter: - lastLocationAccess: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid j591 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j584 
y: j159 
=== Succesors ===
=== Usages ===
j576 j584 v596 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j584 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j593 
y: j591 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j593 y: j591  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v596 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v596 #trueSuccessor: v427 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V256_WORD = H [v36|QWORD[*] + v38|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v38|QWORD * 2], input: v39|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v38|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v423 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v423 #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j576 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v432 
values: j364 j591 
=== Succesors ===
=== Usages ===
v741 j583 j567 v600 v740 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v432 values: j364 j591  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: v456 
=== Usages ===
j576 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid j599 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j405 
y: j598 
=== Succesors ===
=== Usages ===
v600 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j599 
y: j576 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j599 y: j576  <|@  <|@
f <@*|@fixed>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v455 
falseSuccessor: v454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v455 #falseSuccessor: v454  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v459  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
v705 
=== Predecessor ===
v456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid v741 <|@
result [v36|QWORD[*] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j576 
=== Succesors ===
=== Usages ===
v705 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v705 <|@
result v43|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v454 
address: v741 
=== Succesors ===
next: v678 
=== Usages ===
v678 
=== Predecessor ===
v454 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v454 address: v741 #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid v740 <|@
result [v35|QWORD[.] + v41|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j576 
=== Succesors ===
=== Usages ===
v678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v740 
value: v705 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v705 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v740 value: v705 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j576 
y: j383 
=== Succesors ===
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j576 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_WORD = H [v36|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 2], input: v43|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j567 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j583 j576 
=== Succesors ===
=== Usages ===
v739 j575 j559 v604 v738 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j583 j576  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v459 
=== Succesors ===
next: v462 
=== Usages ===
j567 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v459 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid j603 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j405 
y: j602 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j603 
y: j567 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j603 y: j567  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v604 
=== Succesors ===
trueSuccessor: v461 
falseSuccessor: v460 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v604 #trueSuccessor: v461 #falseSuccessor: v460  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v34|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@*|@fixed>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v461 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v706 
=== Usages ===
v706 
=== Predecessor ===
v462 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v706  <|@  <|@
f <@~|@floating>@ <|@
tid v739 <|@
result [v36|QWORD[*] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j567 
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
result v47|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v460 
address: v739 
=== Succesors ===
next: v676 
=== Usages ===
v676 
=== Predecessor ===
v460 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v460 address: v739 #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid v738 <|@
result [v35|QWORD[.] + v45|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j567 
=== Succesors ===
=== Usages ===
v676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v738 
value: v706 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v738 value: v706 stateAfter: - lastLocationAccess: - #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid j575 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j567 
y: j574 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j567 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v447 
=== Predecessor ===
v676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V64_WORD = H [v36|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v45|QWORD * 2], input: v47|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j559 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v447 
values: j575 j567 
=== Succesors ===
=== Usages ===
v737 j566 j550 v608 v736 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v447 values: j575 j567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v446 v465 
=== Succesors ===
next: v468 
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v446 v465 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid j607 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j405 
y: j606 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j607 
y: j559 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j607 y: j559  <|@  <|@
f <@*|@fixed>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v608 
=== Succesors ===
trueSuccessor: v467 
falseSuccessor: v466 
=== Usages ===
=== Predecessor ===
v447 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v608 #trueSuccessor: v467 #falseSuccessor: v466  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v34|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v707 
=== Usages ===
v707 
=== Predecessor ===
v468 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid v737 <|@
result [v36|QWORD[*] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j559 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v707 <|@
result v51|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v466 
address: v737 
=== Succesors ===
next: v674 
=== Usages ===
v674 
=== Predecessor ===
v466 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v466 address: v737 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v736 <|@
result [v35|QWORD[.] + v49|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j559 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v736 
value: v707 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v736 value: v707 stateAfter: - lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid j566 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j559 
y: j552 
=== Succesors ===
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j559 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
v674 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V32_WORD = H [v36|QWORD[*] + v49|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v49|QWORD * 2], input: v51|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j550 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v451 
values: j566 j559 
=== Succesors ===
=== Usages ===
v735 v612 v734 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: j566 j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v450 v471 
=== Succesors ===
next: v474 
=== Usages ===
j550 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v471 #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j405 
y: j610 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j405 y: j610  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j611 
y: j550 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j611 y: j550  <|@  <|@
f <@*|@fixed>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v612 
=== Succesors ===
trueSuccessor: v473 
falseSuccessor: v472 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v612 #trueSuccessor: v473 #falseSuccessor: v472  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v34|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v477 
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v477  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v473 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i708 
=== Usages ===
i708 
=== Predecessor ===
v474 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i708  <|@  <|@
f <@~|@floating>@ <|@
tid v735 <|@
result [v36|QWORD[*] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j547 
index: j550 
=== Succesors ===
=== Usages ===
i708 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j547 index: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i708 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v472 
address: v735 
=== Succesors ===
next: v672 
=== Usages ===
v672 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v472 address: v735 #next: v672  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
result [v35|QWORD[.] + v53|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j549 
index: j550 
=== Succesors ===
=== Usages ===
v672 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j549 index: j550  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v734 
value: i708 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
i708 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v734 value: i708 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@*|@fixed>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSX [v36|QWORD[*] + v53|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v53|QWORD * 2], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v453 v477 
=== Succesors ===
next: v615 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v453 v477 #next: v615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v484 
=== Usages ===
j617 
=== Predecessor ===
v436 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i110 
=== Succesors ===
=== Usages ===
j409 v543 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i110  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j405 
y: j404 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j405 y: j404  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v543 
=== Succesors ===
trueSuccessor: v483 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
v615 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v543 #trueSuccessor: v483 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v487 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v733 <|@
result [v32|QWORD[.] + v34|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a357 
index: j405 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a357 index: j405  <|@  <|@
f <@~|@floating>@ <|@
tid j617 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v615 
address: v733 
=== Succesors ===
=== Usages ===
v744 v745 v746 v747 v748 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v615 address: v733  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j404 
y: j405 
=== Succesors ===
=== Usages ===
j662 j648 j653 j656 j659 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j404 y: j405  <|@  <|@
f <@~|@floating>@ <|@
tid j648 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j409 
y: j592 
=== Succesors ===
=== Usages ===
v649 v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j592  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j648 
y: j364 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j648 y: j364  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v649 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v649 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = LEA [v32|QWORD[.] + v34|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SUB (x: v56|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v485 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
v486 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j642 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v489 
values: j364 j647 
=== Succesors ===
=== Usages ===
v748 j647 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v489 values: j364 j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v488 
=== Succesors ===
next: v690 
=== Usages ===
j642 v492 v493 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v488 #next: v690  <|@  <|@
f <@~|@floating>@ <|@
tid v748 <|@
result [v57|QWORD[.] + v60|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j642 
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j642  <|@  <|@
f <@~|@floating>@ <|@
tid v691 <|@
result v61|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v690 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v748 
value: v691 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v748 value: v691 stateAfter: - lastLocationAccess: - #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid j647 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j642 
y: j159 
=== Succesors ===
=== Usages ===
j636 j642 v651 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j642 y: j159  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j648 
y: j647 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j648 y: j647  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v651 
=== Succesors ===
trueSuccessor: v492 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
v690 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v651 #trueSuccessor: v492 #falseSuccessor: v494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v60|QWORD * 2], input: v61|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v489 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v489 #next: v498  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
v492 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j636 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v497 
values: j364 j647 
=== Succesors ===
=== Usages ===
v747 j641 j630 v654 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v497 values: j364 j647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v496 v498 
=== Succesors ===
next: v519 
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v496 v498 #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid j653 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j409 
y: j598 
=== Succesors ===
=== Usages ===
v654 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j598  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j653 
y: j636 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j653 y: j636  <|@  <|@
f <@*|@fixed>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v654 
=== Succesors ===
trueSuccessor: v518 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v654 #trueSuccessor: v518 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v58|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v522  <|@  <|@
f <@*|@fixed>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v518 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v519 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@~|@floating>@ <|@
tid v747 <|@
result [v57|QWORD[.] + v63|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j636 
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j636  <|@  <|@
f <@~|@floating>@ <|@
tid v695 <|@
result v65|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v747 
value: v695 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v747 value: v695 stateAfter: - lastLocationAccess: - #next: v507  <|@  <|@
f <@~|@floating>@ <|@
tid j641 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j636 
y: j383 
=== Succesors ===
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j636 y: j383  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
v689 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v63|QWORD * 2], input: v65|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j630 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v508 
values: j641 j636 
=== Succesors ===
=== Usages ===
v746 j635 j624 v657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v508 values: j641 j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v507 v522 
=== Succesors ===
next: v525 
=== Usages ===
j630 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v507 v522 #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j409 
y: j602 
=== Succesors ===
=== Usages ===
v657 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j602  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j656 
y: j630 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j656 y: j630  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v524 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v524 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v58|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v687 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v687  <|@  <|@
f <@~|@floating>@ <|@
tid v746 <|@
result [v57|QWORD[.] + v67|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j630 
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j630  <|@  <|@
f <@~|@floating>@ <|@
tid v694 <|@
result v69|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v687 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v746 
value: v694 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v746 value: v694 stateAfter: - lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid j635 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j630 
y: j574 
=== Succesors ===
=== Usages ===
j624 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j630 y: j574  <|@  <|@
f <@*|@fixed>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
v687 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v67|QWORD * 2], input: v69|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j624 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v511 
values: j635 j630 
=== Succesors ===
=== Usages ===
v745 j629 j618 v660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v511 values: j635 j630  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v510 v528 
=== Succesors ===
next: v531 
=== Usages ===
j624 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v510 v528 #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j659 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j409 
y: j606 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j606  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j659 
y: j624 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j659 y: j624  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v660 
=== Succesors ===
trueSuccessor: v530 
falseSuccessor: v529 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v660 #trueSuccessor: v530 #falseSuccessor: v529  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v58|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v534 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v534  <|@  <|@
f <@*|@fixed>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v530 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@~|@floating>@ <|@
tid v745 <|@
result [v57|QWORD[.] + v71|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j624 
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j624  <|@  <|@
f <@~|@floating>@ <|@
tid v693 <|@
result v73|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v745 
value: v693 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v745 value: v693 stateAfter: - lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j624 
y: j552 
=== Succesors ===
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j624 y: j552  <|@  <|@
f <@*|@fixed>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v71|QWORD * 2], input: v73|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j618 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v514 
values: j629 j624 
=== Succesors ===
=== Usages ===
v744 v663 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v514 values: j629 j624  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v513 v534 
=== Succesors ===
next: v537 
=== Usages ===
j618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v513 v534 #next: v537  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j409 
y: j610 
=== Succesors ===
=== Usages ===
v663 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j409 y: j610  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j662 
y: j618 
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j662 y: j618  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v663 
=== Succesors ===
trueSuccessor: v536 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v663 #trueSuccessor: v536 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = DEC v58|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@~|@floating>@ <|@
tid v744 <|@
result [v57|QWORD[.] + v75|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j617 
index: j618 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j617 index: j618  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v744 
value: i692 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v744 value: i692 stateAfter: - lastLocationAccess: - #next: v516  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[.] + v75|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v489 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v494 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
v482 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v500 v516 v540 
=== Succesors ===
next: a287 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v516 v540 #next: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a287 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a357 
=== Succesors ===
next: v186 
=== Usages ===
a126 a185 
=== Predecessor ===
v501 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a357 #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid a185 <|@
result v77|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: Compress
stamp: n! -
=== Inputs ===
value: a287 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a287  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v717 
value: a185 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j393 
=== Usages ===
=== Predecessor ===
a287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v717 value: a185 stateAfter: - lastLocationAccess: - #next: j393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j393 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: v399 
=== Usages ===
j395 
=== Predecessor ===
v186 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2 #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j395 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j393 
y: i394 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j393 y: i394  <|@  <|@
f <@~|@floating>@ <|@
tid j398 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v732 <|@
result [v78|QWORD[*] + v79|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j395 
index: j398 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j395 index: j398  <|@  <|@
f <@~|@floating>@ <|@
tid i400 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v732 
value: i400 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i709 
=== Usages ===
=== Predecessor ===
j393 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v732 value: i400 stateAfter: - lastLocationAccess: - #next: i709  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i709 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
=== Succesors ===
next: v122 
=== Usages ===
i94 i127 
=== Predecessor ===
v399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v716 #next: v122  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: i32
=== Inputs ===
x: i709 
y: i87 
=== Succesors ===
=== Usages ===
i238 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i709 y: i87  <|@  <|@
f <@*|@fixed>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
i709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 16], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v78|QWORD[*] + v79|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = INC v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.], v80|DWORD, v81|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B10" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a126 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v123 
values: a287 a162 
=== Succesors ===
=== Usages ===
v720 ?124 v719 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: a287 a162  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i709 i703 
=== Succesors ===
=== Usages ===
v720 ?124 v173 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i709 i703  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v123 
values: i94 i88 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v123 values: i94 i88  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v122 v125 
=== Succesors ===
next: v240 
=== Usages ===
a126 i127 i238 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v122 v125 #next: v240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v716 
value: i238 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i710 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v716 value: i238 stateAfter: - lastLocationAccess: - #next: i710  <|@  <|@
f <@~|@floating>@ <|@
tid v719 <|@
result [v82|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a126 
index: - 
=== Succesors ===
=== Usages ===
i710 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i710 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v719 
=== Succesors ===
next: v236 
=== Usages ===
v173 
=== Predecessor ===
v240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v719 #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i710 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i127 y: i710  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v173 
=== Succesors ===
trueSuccessor: v233 
falseSuccessor: v235 
=== Usages ===
=== Predecessor ===
i710 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v173 #trueSuccessor: v233 #falseSuccessor: v235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.], v83|DWORD, v84|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: [v82|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
v181 
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v720 <|@
result [v82|QWORD[.] + v83|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a126 
index: i127 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a126 index: i127  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result short[45|0x2d] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rawvalue: 45
stableDimension: 0
stamp: i16 [45] ⇊000000000000002d ⇈000000000000002d
stampKind: i16
value: short[45|0x2d]
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v233 
address: v720 
value: i191 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v233 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v233 address: v720 value: i191 stateAfter: - lastLocationAccess: - #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3156) [bci: 80]
stamp: void
=== Inputs ===
result: a2 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a2 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v82|QWORD[.] + v83|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 22]
at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
at java.lang.StringBuilder.append(char) [bci: -1]
at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 650
stackSize: 2
=== Inputs ===
outerFrameState: ?100 
values: a2 i32 a126 i127 
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?100 values: a2 i32 a126 i127  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 174
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?124 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -44571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25]
stack: v82|QWORD[.] v83|DWORD 
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v423 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B62 -> B24 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v4|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v5|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = AND (x: v4|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v6|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOV [v8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = AND (x: v4|DWORD, y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v9|DWORD, y: v10|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = AND (x: v4|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v15|DWORD[.] = MOV [v1|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = INC v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SUB (x: v18|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v19|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596556376054446831
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.], v17|DWORD, v18|DWORD] destination: B10 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B10" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|QWORD[.], v83|DWORD, v84|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v83|DWORD, y: [v82|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v82|QWORD[.] + v83|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v18|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v1|QWORD[.] v20|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v21|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v21|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4576406039876697391
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = SHL v21|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = LEA [v24|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND v25|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVSXD v26|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = ADD (x: v27|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576353515695740951
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v27|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD[.]] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: v21|DWORD, ~trueValue: v16|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v34|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = LEA [v32|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[*] = LEA [v15|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v37|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v41|QWORD, y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|V128_WORD = H [v36|QWORD[*] + v41|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v41|QWORD * 2], input: v43|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = LEA [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v44|QWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v34|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|V64_WORD = H [v36|QWORD[*] + v45|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v45|QWORD * 2], input: v47|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = LEA [v45|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v34|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V32_WORD = H [v36|QWORD[*] + v49|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v49|QWORD * 2], input: v51|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v49|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = DEC v34|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVSX [v36|QWORD[*] + v53|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD[.] + v53|QWORD * 2], y: v55|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVSXD v21|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v56|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|DWORD[.] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 16], y: v77|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v78|QWORD[*] + v79|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = INC v80|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD[.], v80|DWORD, v81|DWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[.] = LEA [v32|QWORD[.] + v34|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SUB (x: v56|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v59|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v63|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v58|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v63|QWORD, y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v63|QWORD * 2], input: v65|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v63|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v67|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = LEA [v58|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v67|QWORD, y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v67|QWORD * 2], input: v69|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v67|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v58|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v71|QWORD * 2], input: v73|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = DEC v58|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v57|QWORD[.] + v75|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v63|QWORD] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|QWORD] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction J (address: [v57|QWORD[.] + v60|QWORD * 2], input: v61|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B62 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B62" 
    successors "B25" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [v38|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|V256_WORD = H [v36|QWORD[*] + v38|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v35|QWORD[.] + v38|QWORD * 2], input: v39|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v38|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v40|QWORD] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4562311638983958796
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4562731832431610312
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v30|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v21|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v1|QWORD[.] v20|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4546351519551884231
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -44571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25]
stack: v82|QWORD[.] v83|DWORD 
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-39699|0xffffffffffff64ed]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -65889 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v1|QWORD[.] v20|QWORD[.] v21|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: v1|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: v1|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 7, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed]] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38163|0xffffffffffff6aed]] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: ifne          50
     4: aload_0       
     5: getfield      #7          // f:java.util.Formatter$Flags
     8: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    11: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    14: ifeq          27
    17: aload_1       
    18: bipush        43
    20: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    23: pop           
    24: goto          80
    27: aload_0       
    28: getfield      #7          // f:java.util.Formatter$Flags
    31: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    34: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    37: ifeq          80
    40: aload_1       
    41: bipush        32
    43: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    46: pop           
    47: goto          80
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          73
    63: aload_1       
    64: bipush        40
    66: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    69: pop           
    70: goto          80
    73: aload_1       
    74: bipush        45
    76: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    79: pop           
    80: aload_1       
    81: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B59" 
    xhandlers
    flags 
    probability 4596556376054446831
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B10 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B10" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r9|QWORD[.] + rax|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:48|QWORD[.] stack:32|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: stack:48|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - stack:48|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76] <|@ <|@
      nr  120  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B17" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4576406039876697391
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576353515695740951
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  178  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  214  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  218  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  236  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  286  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  288  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  310  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  312  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  322  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  334  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  336  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B20" "B37" "B36" 
    successors "B39" "B57" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B58" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" "B54" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  522  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  524  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  528  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B40" "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  426  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  428  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  438  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  450  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  452  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  454  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  474  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  478  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  486  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  500  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B56 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B56" 
    successors "B43" "B56" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  398  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  400  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B24" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4570900452685719032
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B62 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B62" 
    successors "B25" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  258  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  406  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B51 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4563478843005213008
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B54 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4562311638983958796
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4562731832431610312
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:48|QWORD[.] stack:32|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: stack:48|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76] <|@ <|@
      nr  208  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B18" 
    xhandlers
    flags 
    probability 4546351519551884231
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B15 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV [r15|QWORD + 668] y: -44571 size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rdx:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25]
stack: r9|QWORD[.] rax|DWORD 
locals: rdx|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: rdx|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-39699|0xffffffffffff64ed] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 668] y: -65889 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [rdx:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdx|QWORD[.] r9|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: rdx|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: rdx|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 7, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: ifne          50
     4: aload_0       
     5: getfield      #7          // f:java.util.Formatter$Flags
     8: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    11: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    14: ifeq          27
    17: aload_1       
    18: bipush        43
    20: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    23: pop           
    24: goto          80
    27: aload_0       
    28: getfield      #7          // f:java.util.Formatter$Flags
    31: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    34: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    37: ifeq          80
    40: aload_1       
    41: bipush        32
    43: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    46: pop           
    47: goto          80
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          73
    63: aload_1       
    64: bipush        40
    66: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    69: pop           
    70: goto          80
    73: aload_1       
    74: bipush        45
    76: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    79: pop           
    80: aload_1       
    81: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr   12  <|@ instruction BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015] <|@ <|@
      nr   18  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   20  <|@ instruction r11|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   22  <|@ instruction CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684] <|@ <|@
      nr   36  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   40  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors 
    xhandlers
    flags 
    probability 4605244142044879071
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745] <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   62  <|@ instruction r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B59" "B11" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r10|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0] <|@ <|@
      nr   86  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   90  <|@ instruction r8|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   92  <|@ instruction rsi|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr   94  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr   98  <|@ instruction BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B59 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B9" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr  540  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  542  <|@ instruction CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD <|@ <|@
      nr  544  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 4596921127311088772
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  548  <|@ instruction MOV [r9|QWORD[.] + rax|DWORD * 2 + 16] y: 45 size: WORD <|@ <|@
      nr  550  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  552  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:48|QWORD[.] stack:32|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: stack:48|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - stack:48|QWORD[.] - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76] <|@ <|@
      nr  120  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B18" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  142  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  144  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" "B16" 
    xhandlers
    flags 
    probability 4576406039876697391
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr  152  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr  154  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr  158  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4576353515695740951
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  174  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  176  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  178  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  180  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  186  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B38" "B21" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  190  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: > <|@ <|@
      nr  218  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  220  <|@ instruction CMP r10|QWORD y: 1 size: QWORD <|@ <|@
      nr  222  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B26" "B24" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  236  <|@ instruction r9|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr  238  <|@ instruction TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  240  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B29" "B28" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r9|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  274  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  286  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  288  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B26" 
    successors "B32" "B31" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  296  <|@ instruction r9|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr  298  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  310  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  312  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  314  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B29" 
    successors "B35" "B34" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  320  <|@ instruction r9|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr  322  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  334  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  336  <|@ instruction r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B32" 
    successors "B38" "B37" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  344  <|@ instruction r9|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD <|@ <|@
      nr  358  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B19" "B37" "B35" 
    successors "B39" "B58" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction r11|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B38" "B55" "B53" 
    successors "B59" 
    xhandlers
    flags 
    probability 4576989641887324496
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3 <|@ <|@
      nr  518  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  520  <|@ instruction r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  522  <|@ instruction r11|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  524  <|@ instruction MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  526  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  528  <|@ instruction r11|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr  530  <|@ instruction r8|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction rax|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B44" "B42" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  374  <|@ instruction r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction r10|QWORD = LEA [r11|QWORD - 16] size: QWORD <|@ <|@
      nr  378  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  384  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  380  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B44 falseDestination: B39 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  412  <|@ instruction r10|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  414  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  426  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  428  <|@ instruction r10|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr  430  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B44" 
    successors "B50" "B49" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction r10|QWORD = LEA [r11|QWORD - 4] size: QWORD <|@ <|@
      nr  438  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  440  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  448  <|@ instruction xmm0|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  450  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  452  <|@ instruction r10|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr  454  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B47" 
    successors "B53" "B52" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD = LEA [r11|QWORD - 2] size: QWORD <|@ <|@
      nr  462  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  464  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  474  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  476  <|@ instruction r10|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr  478  <|@ instruction r9|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" "B50" 
    successors "B58" "B55" 
    xhandlers
    flags 
    probability 4572486042259954000
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  484  <|@ instruction r11|QWORD = DEC r11|QWORD size: QWORD <|@ <|@
      nr  486  <|@ instruction CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B58" 
    xhandlers
    flags 
    probability 4570900452685719032
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B55 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" "B42" 
    successors "B44" "B42" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  396  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  398  <|@ instruction J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  400  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr  402  <|@ instruction CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" 
    successors "B26" "B24" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4572486042259954000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  256  <|@ instruction xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  258  <|@ instruction J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  262  <|@ instruction CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B13" "B14" 
    successors "B19" 
    xhandlers
    flags 
    probability 4562731832431610312
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  202  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  206  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:48|QWORD[.] stack:32|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: stack:48|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: stack:48|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - stack:48|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76] <|@ <|@
      nr  210  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOV [r15|QWORD + 668] y: -44571 size: DWORD <|@ <|@
      nr  558  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  560  <|@ st <@st|@reference-map: [rdx:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25]
stack: r9|QWORD[.] rax|DWORD 
locals: rdx|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: rdx|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:25, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOVE input: int[-39699|0xffffffffffff64ed] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B2" "B7" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   76  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [r15|QWORD + 668] y: -65889 size: DWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  136  <|@ st <@st|@reference-map: [rdx:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: rdx|QWORD[.] r9|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7]
locals: rdx|QWORD[.] int[45|0x2d] 
java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2]
locals: rdx|QWORD[.] - 
java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76]
locals: - rdx|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:20, 7, 2, 76] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B4 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B2 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: ifne          50
     4: aload_0       
     5: getfield      #7          // f:java.util.Formatter$Flags
     8: getstatic     #113        // java.util.Formatter$Flags.PLUS:java.util.Formatter$Flags
    11: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    14: ifeq          27
    17: aload_1       
    18: bipush        43
    20: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    23: pop           
    24: goto          80
    27: aload_0       
    28: getfield      #7          // f:java.util.Formatter$Flags
    31: getstatic     #114        // java.util.Formatter$Flags.LEADING_SPACE:java.util.Formatter$Flags
    34: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    37: ifeq          80
    40: aload_1       
    41: bipush        32
    43: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    46: pop           
    47: goto          80
    50: aload_0       
    51: getfield      #7          // f:java.util.Formatter$Flags
    54: getstatic     #117        // java.util.Formatter$Flags.PARENTHESES:java.util.Formatter$Flags
    57: invokevirtual #9          // java.util.Formatter$Flags.contains:(java.util.Formatter$Flags)boolean
    60: ifeq          73
    63: aload_1       
    64: bipush        40
    66: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    69: pop           
    70: goto          80
    73: aload_1       
    74: bipush        45
    76: invokevirtual #102        // java.lang.StringBuilder.append:(char)java.lang.StringBuilder
    79: pop           
    80: aload_1       
    81: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24208b461c448b14c50c00000085c90f854b00000048b8addeaddeaddeadde8b400c458bda4423d8413bc30f848303000048b8addeaddeaddeadde8b400c4423d0413bc20f8462030000488bc2488b6c24204883c428850500000000c5f877c348b8addeaddeaddeadde8b400c4423d0413bc20f84f8020000448b5210468b1cd50c0000008b420c448bc041ffc0418bf0412bf3458bca49c1e10383fe010f8d2c0000004489420c413b410c0f83a70200006641c74441102d00488bc2488b6c24204883c428850500000000c5f877c34c894c241044895c240c4489542408488bf248891424418bd0e80000000090448be84585ed0f8c90020000498b7760498b57704181fdffffff000f832c020000418bcdd1e18d491783e1f84863c94c8bd14c03d64c3bd20f870f0200004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608addeadde488bc6448b5c240c453beb458bd5450f4fd34d63d24983fa010f8c9e000000448b4424084c8d58104e8d04c5100000004d8d4af04d85c948c7c1000000000f8d7b0100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f3c000000488b14244c8bd049c1ea03448952104c8bd249c1ea0949bb00e01b17010000004788241a448b520c458bda41ffc3458bc34c8bc8418bc2e93cfeffff4e8d4450104d2bda4d8d53f04d85d249c7c1000000000f8d7e0000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f42ffffff6647892448e938ffffff0f1f80000000000f1f8000000000c5f9efc0c4817e7f04484d8d49104d3bca7eede96affffff0f1f840000000000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe96bfeffff48beaddeaddeaddeadde418bd5b900000000e80000000090e90dfeffff41c7879c020000e551ffff4d89a7a8020000e8000000009041baed64ffff4589979c0200004d89a7a8020000e800000000904c8b4c2410488b142441c7879c0200009ffefeff4d89a7a8020000e8000000009041baed67ffffebc341baed6affffebbbe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 8 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 67 {Object[Formatter.Flags@859099015]}  <||@
  Comment 77 18 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 20 r11|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 86 22 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 95 block B3 null  <||@
  Comment 95 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 34 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 95 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 105 36 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 108 38 r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 111 40 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 42 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 120 block B5 null  <||@
  Comment 120 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 52 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 123 54 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 132 12  <||@
  Comment 142 block B6 null  <||@
  Comment 142 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 142 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 152 60 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 155 62 r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 158 64 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 161 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 167 block B9 null  <||@
  Comment 167 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 84 r10|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 167 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 167 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 171 86 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 171 [rdx:0, rsi:0, r10:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 179 88 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 182 90 r8|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 188 92 rsi|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 194 94 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3  <||@
  Comment 201 96 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 204 98 BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B59 falseDestination: B9 -> B11  <||@
  Comment 210 block B59 null  <||@
  Comment 210 538 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 210 540 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 214 542 CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 218 544 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 224 block B60 null  <||@
  Comment 224 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 548 MOV [r9|QWORD[.] + rax|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 232 550 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 235 552 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 244 12  <||@
  Comment 254 block B11 null  <||@
  Comment 254 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 106 stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 259 108 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 264 110 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 269 112 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 272 114 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 276 116 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 279 118 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76]  <||@
  Comment 279 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 279 9  <||@
  Comment 284 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:48|QWORD[.]  |stack:32|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:48|QWORD[.]  |-   <||@
  Comment 285 120 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 288 122 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 291 124 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 297 block B13 null  <||@
  Comment 297 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 140 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 301 142 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 305 144 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 312 146 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 318 block B14 null  <||@
  Comment 318 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 150 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 323 152 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 326 154 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 329 156 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 332 158 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 338 160 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 341 162 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16  <||@
  Comment 347 block B16 null  <||@
  Comment 347 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 170 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 351 172 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 359 174 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 367 176 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 375 178 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 383 180 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 387 182 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 394 184 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 401 186 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 401 188 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 404 192 JUMP ~[] destination: B16 -> B19  <||@
  Comment 404 block B19 null  <||@
  Comment 404 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 404 190 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 409 214 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 412 216 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 419 218 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 422 220 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 426 222 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 432 block B21 null  <||@
  Comment 432 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 230 r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 437 232 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 234 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 449 236 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 453 238 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 456 244 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 463 240 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 469 block B26 null  <||@
  Comment 469 270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 469 272 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 473 274 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 476 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 482 block B28 null  <||@
  Comment 482 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 284 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 488 286 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 494 288 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 498 290 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 501 292 JUMP ~[] destination: B28 -> B29  <||@
  Comment 501 block B29 null  <||@
  Comment 501 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 296 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 505 298 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 508 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 514 block B31 null  <||@
  Comment 514 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 308 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 520 310 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 526 312 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 530 314 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 533 316 JUMP ~[] destination: B31 -> B32  <||@
  Comment 533 block B32 null  <||@
  Comment 533 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 533 320 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 537 322 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 540 324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 546 block B34 null  <||@
  Comment 546 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 332 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 552 334 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 558 336 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 562 338 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 565 340 JUMP ~[] destination: B34 -> B35  <||@
  Comment 565 block B35 null  <||@
  Comment 565 342 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 344 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 571 346 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 574 348 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 580 block B37 null  <||@
  Comment 580 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 356 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 585 358 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 590 360 JUMP ~[] destination: B37 -> B38  <||@
  Comment 590 block B38 null  <||@
  Comment 590 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 364 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 593 366 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 596 368 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 602 block B58 null  <||@
  Comment 602 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 510 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 606 516 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3  <||@
  Comment 613 518 MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 617 520 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 624 522 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 634 524 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 638 526 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 642 528 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 648 530 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 651 532 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 654 534 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 657 536 JUMP ~[] destination: B58 -> B59  <||@
  Comment 662 block B39 null  <||@
  Comment 662 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 372 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 667 374 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 670 376 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 674 378 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 677 384 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 684 380 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B44 falseDestination: B39 -> B42  <||@
  Comment 690 block B44 null  <||@
  Comment 690 410 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 690 412 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 694 414 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 697 416 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 703 block B46 null  <||@
  Comment 703 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 424 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 707 426 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 713 428 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 717 430 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 720 432 JUMP ~[] destination: B46 -> B47  <||@
  Comment 720 block B47 null  <||@
  Comment 720 434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 720 436 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 724 438 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 727 440 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 733 block B49 null  <||@
  Comment 733 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 448 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 737 450 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 743 452 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 747 454 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 750 456 JUMP ~[] destination: B49 -> B50  <||@
  Comment 750 block B50 null  <||@
  Comment 750 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 750 460 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 754 462 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 757 464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 763 block B52 null  <||@
  Comment 763 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 472 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 767 474 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 773 476 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 777 478 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 780 480 JUMP ~[] destination: B52 -> B53  <||@
  Comment 780 block B53 null  <||@
  Comment 780 482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 780 484 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 783 486 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 786 488 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 792 block B55 null  <||@
  Comment 792 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 498 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 797 502 JUMP ~[] destination: B55 -> B58  <||@
  Comment 802 block B42 loop 1 depth 1 header:489|LoopBegin  <||@
  Comment 802 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 396 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 820 398 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 826 400 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 830 402 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 833 404 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 840 block B24 loop 0 depth 1 header:423|LoopBegin  <||@
  Comment 840 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 848 256 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 854 258 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 860 260 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 864 262 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 867 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 874 block B18 null  <||@
  Comment 874 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 200 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 874 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 884 202 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 887 204 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 892 206 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76]  <||@
  Comment 892 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 897 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:48|QWORD[.]  |stack:32|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:48|QWORD[.]  |-   <||@
  Comment 898 210 JUMP ~[] destination: B18 -> B19  <||@
  Comment 903 block B61 null  <||@
  Comment 903 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 556 MOV [r15|QWORD + 668] y: -44571 size: DWORD  <||@
  Comment 914 558 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 921 560 DEOPT info [bci:25, 2, 76]  <||@
  Comment 921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 926 [rdx:0, r9:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |int[45|0x2d] 
     stack:   |r9|QWORD[.]   |rax|DWORD    
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1             |2 
     locals:  |-  |rdx|QWORD[.]  |-   <||@
  Comment 927 block B7 null  <||@
  Comment 927 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 70 r10|DWORD = MOVE input: int[-39699|0xffffffffffff64ed]  <||@
  Comment 933 72 JUMP ~[] destination: B7 -> B8  <||@
  Comment 933 block B8 null  <||@
  Comment 933 74 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 933 76 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 940 78 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 947 80 DEOPT info [bci:0]  <||@
  Comment 947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 952 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 953 block B12 null  <||@
  Comment 953 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 128 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 958 130 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 962 132 MOV [r15|QWORD + 668] y: -65889 size: DWORD  <||@
  Comment 973 134 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 980 136 DEOPT info [bci:20, 7, 2, 76]  <||@
  Comment 980 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 985 [rdx:0, r9:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1            |2         
     locals:  |-             |-            |          
     stack:   |rdx|QWORD[.]  |r9|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1             |2 
     locals:  |-  |rdx|QWORD[.]  |-   <||@
  Comment 986 block B4 null  <||@
  Comment 986 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 46 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 992 48 JUMP ~[] destination: B4 -> B8  <||@
  Comment 994 block B2 null  <||@
  Comment 994 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 28 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1000 30 JUMP ~[] destination: B2 -> B8  <||@
  Comment 1002 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1002 4  <||@
  Comment 1008 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1008 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6972[java.util.Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)]"
  method "HotSpotCompilation-6972[java.util.Formatter$FormatSpecifier.leadingSign(StringBuilder, boolean)]"
  date 1527005195923
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b49380 448b560849c1e203493bc20f85cfcacbfe900f1f80000000000f1f800000000089842400c0feff4883ec2848896c24208b461c448b14c50c00000085c90f854b00000048b868711ac0060000008b400c458bda4423d8413bc30f848303000048b878711ac0060000008b400c4423d0413bc20f8462030000488bc2488b6c24204883c4288505fc5bd4fcc5f877c348b8a8711ac0060000008b400c4423d0413bc20f84f8020000448b5210468b1cd50c0000008b420c448bc041ffc0418bf0412bf3458bca49c1e10383fe010f8d2c0000004489420c413b410c0f83a70200006641c74441102d00488bc2488b6c24204883c42885058c5bd4fcc5f877c34c894c241044895c240c4489542408488bf248891424418bd0e804cccbfe90448be84585ed0f8c90020000498b7760498b57704181fdffffff000f832c020000418bcdd1e18d491783e1f84863c94c8bd14c03d64c3bd20f870f0200004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608410000f8488bc6448b5c240c453beb458bd5450f4fd34d63d24983fa010f8c9e000000448b4424084c8d58104e8d04c5100000004d8d4af04d85c948c7c1000000000f8d7b0100004d8d4af8493bc90f8f13000000c4c17a6f0448c4c17a7f044b4c8d4908498bc94d8d4afc493bc90f8f13000000c4c1f96e0448c4c1f97e044b4c8d4904498bc94d8d4afe493bc90f8f13000000c4c1796e0448c4c1797e044b4c8d4902498bc94d8bca49ffc9493bc90f8f0a000000450fbf0448664589044b4d63dd4d3bda0f8f3c000000488b14244c8bd049c1ea03448952104c8bd249c1ea0949bb00e01b17010000004788241a448b520c458bda41ffc3458bc34c8bc8418bc2e93cfeffff4e8d4450104d2bda4d8d53f04d85d249c7c1000000000f8d7e0000004d8d53f84d3bca0f8f11000000c5f9efc0c4817a7f04484d8d51084d8bca4d8d53fc4d3bca0f8f11000000c5f9efc0c481f97e04484d8d51044d8bca4d8d53fe4d3bca0f8f11000000c5f9efc0c481797e04484d8d51024d8bca49ffcb4d3bcb0f8f42ffffff6647892448e938ffffff0f1f80000000000f1f8000000000c5f9efc0c4817e7f04484d8d49104d3bca7eede96affffff0f1f840000000000c4c17e6f0448c4c17e7f044b488d4910493bc97eebe96bfeffff48be080200c007000000418bd5b900000000e8dfd644ff90e90dfeffff41c7879c020000e551ffff4d89a7a8020000e8e0decbfe9041baed64ffff4589979c0200004d89a7a8020000e8c6decbfe904c8b4c2410488b142441c7879c0200009ffefeff4d89a7a8020000e8a5decbfe9041baed67ffffebc341baed6affffebbbe8b10e10ff90e88bddcbfe90f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@52b50bdc slotKind: QWORD  <||@
  Comment 48 6 rax|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 51 8 r10|DWORD = MOV [rax|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 51 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 51 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 59 10 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 61 12 BRANCH trueDestinationProbability: 0.7848080518349682 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B6  <||@
  Comment 67 block B1 null  <||@
  Comment 67 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 16 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@859099015]  <||@
  Comment 67 {Object[Formatter.Flags@859099015]}  <||@
  Comment 77 18 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 80 20 r11|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 86 22 CMP (x: rax|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 89 24 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 95 block B3 null  <||@
  Comment 95 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 34 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@2009893684]  <||@
  Comment 95 {Object[Formatter.Flags@2009893684]}  <||@
  Comment 105 36 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 108 38 r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 111 40 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 114 42 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 120 block B5 null  <||@
  Comment 120 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 120 52 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 123 54 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 132 12  <||@
  Comment 142 block B6 null  <||@
  Comment 142 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 58 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Formatter.Flags@1921891745]  <||@
  Comment 142 {Object[Formatter.Flags@1921891745]}  <||@
  Comment 152 60 rax|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 155 62 r10|DWORD = AND (x: r10|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 158 64 CMP (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 161 66 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B9  <||@
  Comment 167 block B9 null  <||@
  Comment 167 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 167 84 r10|DWORD[.] = MOV [rdx|QWORD[.] + 16] size: DWORD state [bci:0]  <||@
  Comment 167 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 167 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 171 86 r11|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 171 [rdx:0, rsi:0, r10:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 171 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 179 88 rax|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 182 90 r8|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 188 92 rsi|DWORD = SUB (x: r8|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 194 94 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3  <||@
  Comment 201 96 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 204 98 BRANCH trueDestinationProbability: 0.9529541826683171 condition: < trueDestination: B9 -> B59 falseDestination: B9 -> B11  <||@
  Comment 210 block B59 null  <||@
  Comment 210 538 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 210 540 MOV (x: [rdx|QWORD[.] + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 214 542 CMP (x: rax|DWORD, y: [r9|QWORD[.] + 12]) size: DWORD  <||@
  Comment 218 544 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 224 block B60 null  <||@
  Comment 224 546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 224 548 MOV [r9|QWORD[.] + rax|DWORD * 2 + 16] y: 45 size: WORD  <||@
  Comment 232 550 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 235 552 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 244 12  <||@
  Comment 254 block B11 null  <||@
  Comment 254 104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 254 106 stack:32|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 259 108 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 264 110 stack:40|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 269 112 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 272 114 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 276 116 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 279 118 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 7, 2, 76]  <||@
  Comment 279 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 279 9  <||@
  Comment 284 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:48|QWORD[.]  |stack:32|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:48|QWORD[.]  |-   <||@
  Comment 285 120 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 288 122 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 291 124 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B11 -> B12 falseDestination: B11 -> B13  <||@
  Comment 297 block B13 null  <||@
  Comment 297 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 297 140 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 301 142 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 305 144 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 312 146 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B13 -> B14 falseDestination: B13 -> B18  <||@
  Comment 318 block B14 null  <||@
  Comment 318 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 318 150 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 323 152 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 326 154 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 329 156 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 332 158 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 338 160 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 341 162 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B18 falseDestination: B14 -> B16  <||@
  Comment 347 block B16 null  <||@
  Comment 347 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 347 170 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 351 172 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 359 174 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 367 176 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 375 178 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 383 180 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 387 182 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 394 184 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 394 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 401 186 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 401 188 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 404 192 JUMP ~[] destination: B16 -> B19  <||@
  Comment 404 block B19 null  <||@
  Comment 404 212 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 404 190 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 409 214 CMP (x: r13|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 412 216 r10|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r11|DWORD) condition: >  <||@
  Comment 419 218 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 422 220 CMP r10|QWORD y: 1 size: QWORD  <||@
  Comment 426 222 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B19 -> B38 falseDestination: B19 -> B21  <||@
  Comment 432 block B21 null  <||@
  Comment 432 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 230 r8|DWORD[.] = MOVE stack:40|DWORD[.] moveKind: DWORD  <||@
  Comment 437 232 r11|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 441 234 r8|QWORD[*] = LEA [r8|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 449 236 r9|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 453 238 TEST (x: r9|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 456 244 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 463 240 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B21 -> B26 falseDestination: B21 -> B24  <||@
  Comment 469 block B26 null  <||@
  Comment 469 270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 469 272 r9|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 473 274 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 476 276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B26 -> B29 falseDestination: B26 -> B28  <||@
  Comment 482 block B28 null  <||@
  Comment 482 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 482 284 xmm0|V128_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 488 286 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 494 288 r9|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 498 290 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 501 292 JUMP ~[] destination: B28 -> B29  <||@
  Comment 501 block B29 null  <||@
  Comment 501 294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 501 296 r9|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 505 298 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 508 300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B29 -> B32 falseDestination: B29 -> B31  <||@
  Comment 514 block B31 null  <||@
  Comment 514 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 514 308 xmm0|V64_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 520 310 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 526 312 r9|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 530 314 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 533 316 JUMP ~[] destination: B31 -> B32  <||@
  Comment 533 block B32 null  <||@
  Comment 533 318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 533 320 r9|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 537 322 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 540 324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B32 -> B35 falseDestination: B32 -> B34  <||@
  Comment 546 block B34 null  <||@
  Comment 546 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 546 332 xmm0|V32_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 552 334 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 558 336 r9|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 562 338 rcx|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 565 340 JUMP ~[] destination: B34 -> B35  <||@
  Comment 565 block B35 null  <||@
  Comment 565 342 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 565 344 r9|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 571 346 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 574 348 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B35 -> B38 falseDestination: B35 -> B37  <||@
  Comment 580 block B37 null  <||@
  Comment 580 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 580 356 r8|DWORD = MOVSX [r8|QWORD[*] + rcx|QWORD * 2] size: DWORD  <||@
  Comment 585 358 MOV (x: [r11|QWORD[.] + rcx|QWORD * 2], y: r8|DWORD) size: WORD  <||@
  Comment 590 360 JUMP ~[] destination: B37 -> B38  <||@
  Comment 590 block B38 null  <||@
  Comment 590 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 364 r11|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 593 366 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 596 368 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B58  <||@
  Comment 602 block B58 null  <||@
  Comment 602 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 510 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 606 516 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@65938710 encoding: base: 0 shift: 3  <||@
  Comment 613 518 MOV (x: [rdx|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 617 520 r10|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 624 522 r11|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 634 524 MOVB (x: [r10|QWORD[*] + r11|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 638 526 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 642 528 r11|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 648 530 r8|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 651 532 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 654 534 rax|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 657 536 JUMP ~[] destination: B58 -> B59  <||@
  Comment 662 block B39 null  <||@
  Comment 662 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 662 372 r8|QWORD[.] = LEA [rax|QWORD[.] + r10|QWORD * 2 + 16] size: QWORD  <||@
  Comment 667 374 r11|QWORD = SUB (x: r11|QWORD, ~y: r10|QWORD) size: QWORD  <||@
  Comment 670 376 r10|QWORD = LEA [r11|QWORD - 16] size: QWORD  <||@
  Comment 674 378 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 677 384 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 684 380 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B39 -> B44 falseDestination: B39 -> B42  <||@
  Comment 690 block B44 null  <||@
  Comment 690 410 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 690 412 r10|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 694 414 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 697 416 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 703 block B46 null  <||@
  Comment 703 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 703 424 xmm0|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 707 426 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 713 428 r10|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 717 430 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 720 432 JUMP ~[] destination: B46 -> B47  <||@
  Comment 720 block B47 null  <||@
  Comment 720 434 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 720 436 r10|QWORD = LEA [r11|QWORD - 4] size: QWORD  <||@
  Comment 724 438 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 727 440 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B47 -> B50 falseDestination: B47 -> B49  <||@
  Comment 733 block B49 null  <||@
  Comment 733 446 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 733 448 xmm0|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 737 450 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 743 452 r10|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 747 454 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 750 456 JUMP ~[] destination: B49 -> B50  <||@
  Comment 750 block B50 null  <||@
  Comment 750 458 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 750 460 r10|QWORD = LEA [r11|QWORD - 2] size: QWORD  <||@
  Comment 754 462 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 757 464 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B53 falseDestination: B50 -> B52  <||@
  Comment 763 block B52 null  <||@
  Comment 763 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 472 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 767 474 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 773 476 r10|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 777 478 r9|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 780 480 JUMP ~[] destination: B52 -> B53  <||@
  Comment 780 block B53 null  <||@
  Comment 780 482 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 780 484 r11|QWORD = DEC r11|QWORD size: QWORD  <||@
  Comment 783 486 CMP (x: r9|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 786 488 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B58 falseDestination: B53 -> B55  <||@
  Comment 792 block B55 null  <||@
  Comment 792 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 498 MOV (x: [r8|QWORD[.] + r9|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 797 502 JUMP ~[] destination: B55 -> B58  <||@
  Comment 802 block B42 loop 1 depth 1 header:489|LoopBegin  <||@
  Comment 802 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 816 396 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 820 398 J (address: [r8|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 826 400 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 830 402 CMP (x: r9|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 833 404 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B42 -> B44 falseDestination: B42 -> B42  <||@
  Comment 840 block B24 loop 0 depth 1 header:423|LoopBegin  <||@
  Comment 840 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 848 256 xmm0|V256_WORD = H [r8|QWORD[*] + rcx|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 854 258 J (address: [r11|QWORD[.] + rcx|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 860 260 rcx|QWORD = LEA [rcx|QWORD + 16] size: QWORD  <||@
  Comment 864 262 CMP (x: rcx|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 867 264 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B26 falseDestination: B24 -> B24  <||@
  Comment 874 block B18 null  <||@
  Comment 874 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 874 200 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 874 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 884 202 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 887 204 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 892 206 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 7, 2, 76]  <||@
  Comment 892 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 897 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:48|QWORD[.]  |stack:32|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1                  |2 
     locals:  |-  |stack:48|QWORD[.]  |-   <||@
  Comment 898 210 JUMP ~[] destination: B18 -> B19  <||@
  Comment 903 block B61 null  <||@
  Comment 903 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 556 MOV [r15|QWORD + 668] y: -44571 size: DWORD  <||@
  Comment 914 558 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 921 560 DEOPT info [bci:25, 2, 76]  <||@
  Comment 921 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 926 [rdx:0, r9:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:650) [bci: 25, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |int[45|0x2d] 
     stack:   |r9|QWORD[.]   |rax|DWORD    
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1             |2 
     locals:  |-  |rdx|QWORD[.]  |-   <||@
  Comment 927 block B7 null  <||@
  Comment 927 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 927 70 r10|DWORD = MOVE input: int[-39699|0xffffffffffff64ed]  <||@
  Comment 933 72 JUMP ~[] destination: B7 -> B8  <||@
  Comment 933 block B8 null  <||@
  Comment 933 74 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 933 76 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 940 78 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 947 80 DEOPT info [bci:0]  <||@
  Comment 947 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 952 [rdx:0, rsi:0]at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3144) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 953 block B12 null  <||@
  Comment 953 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 953 128 r9|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 958 130 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 962 132 MOV [r15|QWORD + 668] y: -65889 size: DWORD  <||@
  Comment 973 134 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 980 136 DEOPT info [bci:20, 7, 2, 76]  <||@
  Comment 980 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 985 [rdx:0, r9:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1            |2         
     locals:  |-             |-            |          
     stack:   |rdx|QWORD[.]  |r9|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:649) [bci: 7, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |int[45|0x2d] 
  at java.lang.StringBuilder.append(StringBuilder.java:202) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.util.Formatter$FormatSpecifier.leadingSign(Formatter.java:3154) [bci: 76, duringCall: true, rethrow: false]
              |0  |1             |2 
     locals:  |-  |rdx|QWORD[.]  |-   <||@
  Comment 986 block B4 null  <||@
  Comment 986 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 986 46 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 992 48 JUMP ~[] destination: B4 -> B8  <||@
  Comment 994 block B2 null  <||@
  Comment 994 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 994 28 r10|DWORD = MOVE input: int[-38163|0xffffffffffff6aed]  <||@
  Comment 1000 30 JUMP ~[] destination: B2 -> B8  <||@
  Comment 1002 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1002 4  <||@
  Comment 1008 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1008 5  <||@
  HexCodeFile>>> <|@
end_nmethod
