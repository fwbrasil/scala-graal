begin_compilation
  name " HotSpotCompilation-1327[bench.Fusing.fused()]"
  method "HotSpotCompilation-1327[bench.Fusing.fused()]"
  date 1527270356052
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a570  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/Fusing;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v579 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing.l
nullCheck: false
stamp: n# Lbench/Fusing$List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: a571 
=== Usages ===
?24 v582 v580 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: a571  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing.fused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v256 a293 a571 i573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a570 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v582 
=== Succesors ===
next: v158 
=== Usages ===
v378 v102 
=== Predecessor ===
a570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v582 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v157 #falseSuccessor: v155  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid a259 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@421893758
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@421893758]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107] ⇊00000000ffff9ded ⇈00000000ffff9ded
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a572 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a572  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a570 
=== Succesors ===
=== Usages ===
a572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a572 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: i573 
=== Usages ===
v583 v581 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v581 
=== Succesors ===
next: v166 
=== Usages ===
a293 j116 i119 v143 v141 v319 i269 v278 
=== Predecessor ===
a572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v581 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i140 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v165 #falseSuccessor: v163  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid a253 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29316
stableDimension: 0
stamp: i32 [-29316] ⇊00000000ffff8d7c ⇈00000000ffff8d7c
stampKind: i32
value: int[-29316|0xffffffffffff8d7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
j126 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i120 j142 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32
=== Inputs ===
x: i573 
y: i110 
=== Succesors ===
=== Usages ===
i120 i239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i573 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$165/1585210790@8b31120
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i119 
y: i110 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i119 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/975568520@3de4eeb
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$20/1530918645@47b2056a
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j124 j541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j121 
y: j123 
=== Succesors ===
=== Usages ===
j142 v484 v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j121 y: j123  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$17/850672218@6174ab99
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j124 
y: i110 
=== Succesors ===
=== Usages ===
j126 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j124 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v163 
object: j142 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v163 object: j142  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/975568520@3de4eeb
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$20/1530918645@47b2056a
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i573 
=== Succesors ===
=== Usages ===
v127 j541 j528 j534 j538 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j126 
y: j116 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j126 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 a293 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i18 
=== Succesors ===
=== Usages ===
v567 v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v565 #falseSuccessor: v568  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v566 #falseSuccessor: v169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v564 
=== Succesors ===
next: j272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v564 #next: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j316 
=== Usages ===
v586 v587 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
j316 v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
=== Succesors ===
next: j317 
=== Usages ===
j276 v588 v589 a292 v594 v590 v591 v592 v593 
=== Predecessor ===
j272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 #next: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
=== Succesors ===
next: v281 
=== Usages ===
v282 
=== Predecessor ===
j316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v587 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i277 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i573 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a293 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 i269 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
j317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v280 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$17/850672218@6174ab99
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i573 
y: i37 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i573 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i269 
y: i300 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i269 y: i300  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$101/496442494@892d0f8
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i301 
y: i270 
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i301 y: i270  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$15/774397919@286f65e9
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$16/323535180@55a308b1
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i271 
=== Succesors ===
=== Usages ===
j276 v590 v591 v592 v593 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i271  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j275 
y: j316 
=== Succesors ===
=== Usages ===
v282 v318 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j276 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j317 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v282 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v282 #trueSuccessor: v287 #falseSuccessor: v286  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: j276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: j276 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v590 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v590 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v591 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v591 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v592 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v592 #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v593 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v593 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i573 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
value: j268 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v589 value: j268 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: v379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: v379 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a292 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j316 
=== Succesors ===
next: v294 
=== Usages ===
a297 
=== Predecessor ===
v291 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j316 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@b245683
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v267 i573 i18 
=== Succesors ===
next: v296 
=== Usages ===
a297 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v267 i573 i18 #next: v296  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v295 
values: a292 a293 
=== Succesors ===
=== Usages ===
v585 a243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a292 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v294 v296 
=== Succesors ===
next: v489 
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v296 #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v418 
=== Usages ===
j490 j492 
=== Predecessor ===
v295 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
j490 j471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j511 v529 j474 v484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a297 
index: - 
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a297 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v489 
address: v585 
=== Succesors ===
=== Usages ===
v605 v607 v609 v611 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v489 address: v585  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v489 
address: v583 
=== Succesors ===
=== Usages ===
v606 v608 v610 v612 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v489 address: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j116 
y: j527 
=== Succesors ===
=== Usages ===
v529 v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j527  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j172 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j528 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v419 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v423 
values: j172 j526 
=== Succesors ===
=== Usages ===
v612 j526 v611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v423 values: j172 j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v422 
=== Succesors ===
next: v574 
=== Usages ===
v574 v427 v428 j519 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v422 #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j519 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v423 
address: v612 
=== Succesors ===
next: v561 
=== Usages ===
v561 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v423 address: v612 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j519 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
value: v574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 value: v574 stateAfter: - lastLocationAccess: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j519 
y: j322 
=== Succesors ===
=== Usages ===
j511 j519 v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j526 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j528 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v427 #falseSuccessor: v429  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v423 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v423 #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v432 
values: j172 j526 
=== Succesors ===
=== Usages ===
v610 j518 j502 v535 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v432 values: j172 j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: v451 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j116 
y: j533 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j533  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j534 
y: j511 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j534 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v450 #falseSuccessor: v449  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
v575 
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j511 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v449 
address: v610 
=== Succesors ===
next: v559 
=== Usages ===
v559 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v449 address: v610 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j511 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 value: v575 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j511 
y: j495 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j495  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j502 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j518 j511 
=== Succesors ===
=== Usages ===
v608 j510 j493 v539 v607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j518 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v454 
=== Succesors ===
next: v457 
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v454 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j116 
y: j537 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j538 
y: j502 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j538 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v456 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
v576 
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j502 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v455 
address: v608 
=== Succesors ===
next: v557 
=== Usages ===
v557 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v455 address: v608 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j502 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: v576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: v576 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j502 
y: j509 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j502 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j493 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v446 
values: j510 j502 
=== Succesors ===
=== Usages ===
v606 v542 v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: j510 j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v460 
=== Succesors ===
next: v463 
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v460 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j116 
y: j123 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j123  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j541 
y: j493 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j541 y: j493  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v462 #falseSuccessor: v461  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i577 
=== Usages ===
i577 
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j493 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v461 
address: v606 
=== Succesors ===
next: v555 
=== Usages ===
v555 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v461 address: v606 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j493 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
value: i577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
i577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 value: i577 stateAfter: - lastLocationAccess: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v448 v466 
=== Succesors ===
next: a243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v448 v466 #next: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a243 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a297 
=== Succesors ===
next: v470 
=== Usages ===
a177 ?24 v584 
=== Predecessor ===
v436 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a297 #next: v470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v394 
=== Usages ===
j471 j473 
=== Predecessor ===
a243 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j124 
y: j172 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j124 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a243 
index: - 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a243 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v470 
address: v584 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v470 address: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v470 
address: v583 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v470 address: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v396 
values: j172 j483 
=== Succesors ===
=== Usages ===
v604 j483 v603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: j172 j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v395 
=== Succesors ===
next: i578 
=== Usages ===
i578 v402 v404 j474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v395 #next: i578  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j471 
index: j474 
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i578 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v396 
address: v604 
=== Succesors ===
next: v553 
=== Usages ===
i552 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v396 address: v604 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j473 
index: j474 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32
=== Inputs ===
x: i578 
y: i37 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i578 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
value: i552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
i578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 value: i552 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j474 
y: j268 
=== Succesors ===
=== Usages ===
v486 j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j124 
y: j483 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j124 y: j483  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v402 #falseSuccessor: v405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v396 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v396 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v401 
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v401 #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
v595 v596 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j350 v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
=== Succesors ===
next: j351 
=== Usages ===
j381 j356 v600 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 #next: j351  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
=== Succesors ===
next: v342 
=== Usages ===
v339 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j350 
y: j380 
=== Succesors ===
=== Usages ===
v339 v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j351 
y: j381 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j351 y: j381  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<Fusing.fused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$39/2096940664@1050092962
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$39/2096940664;
stampKind: a -
value: Object[Fusing$$Lambda$39/2096940664@1050092962]
=== Inputs ===
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$101/496442494@892d0f8
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i119 
y: i238 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i238  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: a570 a7 a243 i239 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a570 a7 a243 i239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@b245683
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?24 
arguments: v267 i37 i110 
=== Succesors ===
next: j347 
=== Usages ===
j347 
=== Predecessor ===
v340 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?24 arguments: v267 i37 i110 #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a346 
=== Succesors ===
next: v357 
=== Usages ===
j356 
=== Predecessor ===
a346 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a346 #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
j347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
value: j381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v595 value: j381 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v600 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v600 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v354 
values: j350 j347 
=== Succesors ===
=== Usages ===
v599 v598 a174 v601 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v354 values: j350 j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v357 
=== Succesors ===
next: a174 
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v357 #next: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j356 
=== Succesors ===
next: j368 
=== Usages ===
a181 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j356 #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v362 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
=== Succesors ===
next: v369 
=== Usages ===
v369 
=== Predecessor ===
a174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: j368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: j368 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
value: v385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v599 value: v385 stateAfter: - lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a243 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
value: a177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 value: a177 stateAfter: - lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: a571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: a571 stateAfter: - lastLocationAccess: - #next: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a174 
=== Succesors ===
next: v182 
=== Usages ===
v11 
=== Predecessor ===
v378 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a174 #next: v182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a181 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a181 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a181 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v396 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v423 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v423  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@453417843
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@453417843]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20507
stableDimension: 0
stamp: i32 [-20507] ⇊00000000ffffafe5 ⇈00000000ffffafe5
stampKind: i32
value: int[-20507|0xffffffffffffafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i254 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-29316 - -17419] ⇊00000000ffff8164 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v250 
values: i258 i263 i265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v250 values: i258 i263 i265  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v250 
values: a259 a253 a266 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v250 values: a259 a253 a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v262 v264 
=== Succesors ===
next: v256 
=== Usages ===
i254 a255 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v262 v264 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i254 
speculation: a255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i254 speculation: a255  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a570  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/Fusing;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v579 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing.l
nullCheck: false
stamp: n# Lbench/Fusing$List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
=== Succesors ===
next: a571 
=== Usages ===
?24 v582 v580 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 #next: a571  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing.fused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v256 a293 a571 i573 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a570 
=== Succesors ===
=== Usages ===
a571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a571 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v582 
=== Succesors ===
next: v158 
=== Usages ===
v378 v102 
=== Predecessor ===
a570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v582 #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a571 
=== Succesors ===
=== Usages ===
v158 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a571  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v157 
falseSuccessor: v155 
=== Usages ===
=== Predecessor ===
a571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v157 #falseSuccessor: v155  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid a259 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@421893758
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@421893758]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i258 <|@
result int[-25107|0xffffffffffff9ded] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -25107
stableDimension: 0
stamp: i32 [-25107] ⇊00000000ffff9ded ⇈00000000ffff9ded
stampKind: i32
value: int[-25107|0xffffffffffff9ded]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v157 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25107|0xffffffffffff9ded], v3|QWORD[.]] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a572 
=== Usages ===
=== Predecessor ===
v158 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a572  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a570 
=== Succesors ===
=== Usages ===
a572 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a572 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
=== Succesors ===
next: i573 
=== Usages ===
v583 v581 
=== Predecessor ===
v155 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v580 #next: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
i573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i573 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v581 
=== Succesors ===
next: v166 
=== Usages ===
a293 j116 i119 v143 v141 v319 i269 v278 
=== Predecessor ===
a572 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v581 #next: v166  <|@  <|@
f <@~|@floating>@ <|@
tid i140 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i140 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i140  <|@  <|@
f <@*|@fixed>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v141 
=== Succesors ===
trueSuccessor: v165 
falseSuccessor: v163 
=== Usages ===
=== Predecessor ===
i573 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v141 #trueSuccessor: v165 #falseSuccessor: v163  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid a253 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result int[-29316|0xffffffffffff8d7c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -29316
stableDimension: 0
stamp: i32 [-29316] ⇊00000000ffff8d7c ⇈00000000ffff8d7c
stampKind: i32
value: int[-29316|0xffffffffffff8d7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v165 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-29316|0xffffffffffff8d7c], Object[null]] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v569 
=== Usages ===
j126 
=== Predecessor ===
v166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v569  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i119 i120 j142 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i119 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32
=== Inputs ===
x: i573 
y: i110 
=== Succesors ===
=== Usages ===
i120 i239 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i573 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$165/1585210790@8b31120
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i119 
y: i110 
=== Succesors ===
=== Usages ===
j121 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i119 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/975568520@3de4eeb
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$20/1530918645@47b2056a
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i120 
=== Succesors ===
=== Usages ===
j124 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i120  <|@  <|@
f <@~|@floating>@ <|@
tid j123 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j124 j541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j124 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j121 
y: j123 
=== Succesors ===
=== Usages ===
j142 v484 v486 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j121 y: j123  <|@  <|@
f <@~|@floating>@ <|@
tid j142 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$17/850672218@6174ab99
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j124 
y: i110 
=== Succesors ===
=== Usages ===
j126 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j124 y: i110  <|@  <|@
f <@~|@floating>@ <|@
tid j126 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v163 
object: j142 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v163 object: j142  <|@  <|@
f <@~|@floating>@ <|@
tid j116 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$19/975568520@3de4eeb
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$20/1530918645@47b2056a
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i573 
=== Succesors ===
=== Usages ===
v127 j541 j528 j534 j538 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i573  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j126 
y: j116 
=== Succesors ===
=== Usages ===
v569 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j126 y: j116  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v143 a293 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i18 
=== Succesors ===
=== Usages ===
v567 v418 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i573 y: i18  <|@  <|@
f <@*|@fixed>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v127 
=== Succesors ===
trueSuccessor: v565 
falseSuccessor: v568 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v127 #trueSuccessor: v565 #falseSuccessor: v568  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v563  <|@  <|@
f <@*|@fixed>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v565 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v569 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@*|@fixed>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v566 
falseSuccessor: v169 
=== Usages ===
=== Predecessor ===
v568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v566 #falseSuccessor: v169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
v566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v563 v564 
=== Succesors ===
next: j272 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v563 v564 #next: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j316 
=== Usages ===
v586 v587 
=== Predecessor ===
v562 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
j316 v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j316 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
=== Succesors ===
next: j317 
=== Usages ===
j276 v588 v589 a292 v594 v590 v591 v592 v593 
=== Predecessor ===
j272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v586 #next: j317  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j317 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
=== Succesors ===
next: v281 
=== Usages ===
v282 
=== Predecessor ===
j316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v587 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i573 
y: i277 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i573 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a293 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v320 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i552 i269 a346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v278 
=== Succesors ===
trueSuccessor: v280 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
j317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v278 #trueSuccessor: v280 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i269 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$17/850672218@6174ab99
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i573 
y: i37 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i573 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i301 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i269 
y: i300 
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i269 y: i300  <|@  <|@
f <@~|@floating>@ <|@
tid i270 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i271 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i271 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$101/496442494@892d0f8
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i301 
y: i270 
=== Succesors ===
=== Usages ===
j275 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i301 y: i270  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$15/774397919@286f65e9
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$16/323535180@55a308b1
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i271 
=== Succesors ===
=== Usages ===
j276 v590 v591 v592 v593 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i271  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j275 
y: j316 
=== Succesors ===
=== Usages ===
v282 v318 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j275 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j317 
y: j276 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j317 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v282 
=== Succesors ===
trueSuccessor: v287 
falseSuccessor: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v282 #trueSuccessor: v287 #falseSuccessor: v286  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
value: j276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 value: j276 stateAfter: - lastLocationAccess: - #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v18|QWORD + v12|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v590 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v590 #next: v308  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v18|QWORD + v12|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v591 
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v591 #next: v311  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v18|QWORD + v12|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v592 
=== Succesors ===
next: v314 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v592 #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v18|QWORD + v12|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j275 
index: j316 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j275 index: j316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v593 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v593 #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v12|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
value: i573 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v588 value: i573 stateAfter: - lastLocationAccess: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v12|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
value: j268 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v589 value: j268 stateAfter: - lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v12|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j316 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j316 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v379 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
value: v379 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v291 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 value: v379 stateAfter: - lastLocationAccess: - #next: v291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a292 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a292 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j316 
=== Succesors ===
next: v294 
=== Usages ===
a297 
=== Predecessor ===
v291 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j316 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a292 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
v279 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v283 v285 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v283 v285 #next: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@b245683
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v267 i573 i18 
=== Succesors ===
next: v296 
=== Usages ===
a297 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v267 i573 i18 #next: v296  <|@  <|@
f <@*|@fixed>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a297 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v295 
values: a292 a293 
=== Succesors ===
=== Usages ===
v585 a243 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a292 a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v294 v296 
=== Succesors ===
next: v489 
=== Usages ===
a297 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v296 #next: v489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v418 
=== Usages ===
j490 j492 
=== Predecessor ===
v295 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a572 
=== Succesors ===
=== Usages ===
j490 j471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a572  <|@  <|@
f <@~|@floating>@ <|@
tid j172 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j519 j511 v529 j474 v484 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v143 
=== Succesors ===
trueSuccessor: v416 
falseSuccessor: v417 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v143 #trueSuccessor: v416 #falseSuccessor: v417  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v417 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a297 
index: - 
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a297 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v489 
address: v585 
=== Succesors ===
=== Usages ===
v605 v607 v609 v611 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v489 address: v585  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v489 
address: v583 
=== Succesors ===
=== Usages ===
v606 v608 v610 v612 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v489 address: v583  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j528 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j528 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j116 
y: j527 
=== Succesors ===
=== Usages ===
v529 v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j527  <|@  <|@
f <@~|@floating>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j172 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j528 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v529 
=== Succesors ===
trueSuccessor: v419 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v529 #trueSuccessor: v419 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v11|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v422 
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v422  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v423 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j519 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v423 
values: j172 j526 
=== Succesors ===
=== Usages ===
v612 j526 v611 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v423 values: j172 j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v422 
=== Succesors ===
next: v574 
=== Usages ===
v574 v427 v428 j519 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v422 #next: v574  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v24|QWORD[*] + v26|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j519 
=== Succesors ===
=== Usages ===
v574 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v574 <|@
result v27|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v423 
address: v612 
=== Succesors ===
next: v561 
=== Usages ===
v561 
=== Predecessor ===
v423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v423 address: v612 #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v23|QWORD[.] + v26|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j519 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j519  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
value: v574 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v430 
=== Usages ===
=== Predecessor ===
v574 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 value: v574 stateAfter: - lastLocationAccess: - #next: v430  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j519 
y: j322 
=== Succesors ===
=== Usages ===
j511 j519 v531 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j519 y: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j526 
=== Succesors ===
=== Usages ===
v430 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j528 y: j526  <|@  <|@
f <@*|@fixed>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v531 
=== Succesors ===
trueSuccessor: v427 
falseSuccessor: v429 
=== Usages ===
=== Predecessor ===
v561 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v531 #trueSuccessor: v427 #falseSuccessor: v429  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_DWORD = H [v24|QWORD[*] + v26|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 4], input: v27|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v423 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v423 #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j511 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v432 
values: j172 j526 
=== Succesors ===
=== Usages ===
v610 j518 j502 v535 v609 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v432 values: j172 j526  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: v451 
=== Usages ===
j511 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: v451  <|@  <|@
f <@~|@floating>@ <|@
tid j533 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j534 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j116 
y: j533 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j533  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j534 
y: j511 
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j534 y: j511  <|@  <|@
f <@*|@fixed>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v535 
=== Succesors ===
trueSuccessor: v450 
falseSuccessor: v449 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v535 #trueSuccessor: v450 #falseSuccessor: v449  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v11|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v450 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v575 
=== Usages ===
v575 
=== Predecessor ===
v451 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v575  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v24|QWORD[*] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j511 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v575 <|@
result v31|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v449 
address: v610 
=== Succesors ===
next: v559 
=== Usages ===
v559 
=== Predecessor ===
v449 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v449 address: v610 #next: v559  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v23|QWORD[.] + v29|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j511 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
value: v575 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v575 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 value: v575 stateAfter: - lastLocationAccess: - #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j511 
y: j495 
=== Succesors ===
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j511 y: j495  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
v559 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_DWORD = H [v24|QWORD[*] + v29|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 4], input: v31|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j502 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v443 
values: j518 j511 
=== Succesors ===
=== Usages ===
v608 j510 j493 v539 v607 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: j518 j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v454 
=== Succesors ===
next: v457 
=== Usages ===
j502 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v454 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j538 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j116 
y: j537 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j537  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j538 
y: j502 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j538 y: j502  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v539 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v539 #trueSuccessor: v456 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v11|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v460 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v460  <|@  <|@
f <@*|@fixed>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v456 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v576 
=== Usages ===
v576 
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v24|QWORD[*] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j502 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v576 <|@
result v35|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v455 
address: v608 
=== Succesors ===
next: v557 
=== Usages ===
v557 
=== Predecessor ===
v455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v455 address: v608 #next: v557  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v23|QWORD[.] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j502 
=== Succesors ===
=== Usages ===
v557 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
value: v576 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 value: v576 stateAfter: - lastLocationAccess: - #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j510 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j502 
y: j509 
=== Succesors ===
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j502 y: j509  <|@  <|@
f <@*|@fixed>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
v557 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_DWORD = H [v24|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 4], input: v35|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j493 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v446 
values: j510 j502 
=== Succesors ===
=== Usages ===
v606 v542 v605 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v446 values: j510 j502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v445 v460 
=== Succesors ===
next: v463 
=== Usages ===
j493 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v445 v460 #next: v463  <|@  <|@
f <@~|@floating>@ <|@
tid j541 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j116 
y: j123 
=== Succesors ===
=== Usages ===
v542 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j116 y: j123  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j541 
y: j493 
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j541 y: j493  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v542 
=== Succesors ===
trueSuccessor: v462 
falseSuccessor: v461 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v542 #trueSuccessor: v462 #falseSuccessor: v461  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@*|@fixed>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v462 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i577 
=== Usages ===
i577 
=== Predecessor ===
v463 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i577  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v24|QWORD[*] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j490 
index: j493 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j490 index: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i577 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v461 
address: v606 
=== Succesors ===
next: v555 
=== Usages ===
v555 
=== Predecessor ===
v461 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v461 address: v606 #next: v555  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v23|QWORD[.] + v37|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j492 
index: j493 
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j492 index: j493  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
value: i577 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
i577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 value: i577 stateAfter: - lastLocationAccess: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v555 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v24|QWORD[*] + v37|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v37|QWORD * 4], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v448 v466 
=== Succesors ===
next: a243 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v448 v466 #next: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a243 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a297 
=== Succesors ===
next: v470 
=== Usages ===
a177 ?24 v584 
=== Predecessor ===
v436 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a297 #next: v470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v394 
=== Usages ===
j471 j473 
=== Predecessor ===
a243 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j124 
y: j172 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j124 y: j172  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v393 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v392 #falseSuccessor: v393  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v22|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a243 
index: - 
=== Succesors ===
=== Usages ===
j473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a243 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j473 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v470 
address: v584 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v470 address: v584  <|@  <|@
f <@~|@floating>@ <|@
tid j471 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v470 
address: v583 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v470 address: v583  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v396 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j474 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v396 
values: j172 j483 
=== Succesors ===
=== Usages ===
v604 j483 v603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v396 values: j172 j483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v395 
=== Succesors ===
next: i578 
=== Usages ===
i578 v402 v404 j474 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v395 #next: i578  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v41|QWORD[*] + v42|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j471 
index: j474 
=== Succesors ===
=== Usages ===
i578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j471 index: j474  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i578 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v396 
address: v604 
=== Succesors ===
next: v553 
=== Usages ===
i552 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v396 address: v604 #next: v553  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v40|QWORD[.] + v42|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j473 
index: j474 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: j474  <|@  <|@
f <@~|@floating>@ <|@
tid i552 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i32
=== Inputs ===
x: i578 
y: i37 
=== Succesors ===
=== Usages ===
v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i578 y: i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
value: i552 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
i578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 value: i552 stateAfter: - lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j474 
y: j268 
=== Succesors ===
=== Usages ===
v486 j474 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j474 y: j268  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@3c0b4710
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j124 
y: j483 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j124 y: j483  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v402 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v402 #falseSuccessor: v405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v43|DWORD, ~y: [v41|QWORD[*] + v42|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v42|QWORD * 8], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v396 
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v396 #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v399 v401 
=== Succesors ===
next: j334 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v399 v401 #next: j334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j334 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
v595 v596 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j350 v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
=== Succesors ===
next: j351 
=== Usages ===
j381 j356 v600 
=== Predecessor ===
j334 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 #next: j351  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j334 
index: - 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
=== Succesors ===
next: v342 
=== Usages ===
v339 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v596 #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$18/161287389@405134d5
stamp: i64
=== Inputs ===
x: j350 
y: j380 
=== Succesors ===
=== Usages ===
v339 v352 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j350 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@55118c13
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j351 
y: j381 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j351 y: j381  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d70d1610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a346 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a346  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<Fusing.fused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 143
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result Object[Fusing$$Lambda$39/2096940664@1050092962] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$39/2096940664@1050092962
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$39/2096940664;
stampKind: a -
value: Object[Fusing$$Lambda$39/2096940664@1050092962]
=== Inputs ===
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i238 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$101/496442494@892d0f8
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i119 
y: i238 
=== Succesors ===
=== Usages ===
?24 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i119 y: i238  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?46 
values: a570 a7 a243 i239 
=== Succesors ===
=== Usages ===
a346 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?46 values: a570 a7 a243 i239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a346 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@b245683
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?24 
arguments: v267 i37 i110 
=== Succesors ===
next: j347 
=== Usages ===
j347 
=== Predecessor ===
v340 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?24 arguments: v267 i37 i110 #next: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j347 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a346 
=== Succesors ===
next: v357 
=== Usages ===
j356 
=== Predecessor ===
a346 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a346 #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
j347 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v6|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$39/2096940664@1050092962] v22|QWORD[.] v48|DWORD 
bench.Fusing.fused(Bench.scala:143) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
value: j381 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v595 value: j381 stateAfter: - lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v46|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v600 
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v352 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v600 #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j356 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v354 
values: j350 j347 
=== Succesors ===
=== Usages ===
v599 v598 a174 v601 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v354 values: j350 j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v355 v357 
=== Succesors ===
next: a174 
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v357 #next: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j356 
=== Succesors ===
next: j368 
=== Usages ===
a181 
=== Predecessor ===
v354 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j356 #next: j368  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v362 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v362  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v52|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j363 
index: - 
=== Succesors ===
=== Usages ===
j368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j363 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
=== Succesors ===
next: v369 
=== Usages ===
v369 
=== Predecessor ===
a174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v597 #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v50|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
value: j368 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 value: j368 stateAfter: - lastLocationAccess: - #next: v372  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v50|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v385 <|@
result meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
value: v385 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v599 value: v385 stateAfter: - lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v50|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a177 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a243 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
value: a177 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v372 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 value: a177 stateAfter: - lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v50|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j356 
index: - 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j356 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
value: a571 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 value: a571 stateAfter: - lastLocationAccess: - #next: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a174 
=== Succesors ===
next: v182 
=== Usages ===
v11 
=== Predecessor ===
v378 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a174 #next: v182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
a181 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v11  <|@  <|@
f <@*|@fixed>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a181 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a181 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v52|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*]], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v50|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*] + 12], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*] + 16], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v404 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v404  <|@  <|@
f <@*|@fixed>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v396 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v430 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v428  <|@  <|@
f <@*|@fixed>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v423 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v423  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid a266 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@453417843
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@453417843]
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i265 <|@
result int[-20507|0xffffffffffffafe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -20507
stableDimension: 0
stamp: i32 [-20507] ⇊00000000ffffafe5 ⇈00000000ffffafe5
stampKind: i32
value: int[-20507|0xffffffffffffafe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
v169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20507|0xffffffffffffafe5], v55|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i254 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-29316 - -17419] ⇊00000000ffff8164 ⇈00000000ffffbffd
valueDescription: i32
=== Inputs ===
merge: v250 
values: i258 i263 i265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v250 values: i258 i263 i265  <|@  <|@
f <@~|@floating>@ <|@
tid a255 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v250 
values: a259 a253 a266 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v250 values: a259 a253 a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v257 v262 v264 
=== Succesors ===
next: v256 
=== Usages ===
i254 a255 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v257 v262 v264 #next: v256  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i254 
speculation: a255 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i254 speculation: a255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v57|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = SHR v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = DEC v8|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHL v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v11|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = ADD (x: v18|QWORD, y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v19|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v12|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v12|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v20|QWORD[.] = MOVE v12|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v20|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v22|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v11|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v25|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v29|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v11|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V128_DWORD = H [v24|QWORD[*] + v29|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v29|QWORD * 4], input: v31|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v29|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v11|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|V64_DWORD = H [v24|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v33|QWORD * 4], input: v35|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v33|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v37|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = DEC v11|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v37|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOV [v24|QWORD[*] + v37|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + v37|QWORD * 4], y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v9|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = LEA [v22|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|QWORD] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = ADD (x: v43|DWORD, ~y: [v41|QWORD[*] + v42|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v40|QWORD[.] + v42|QWORD * 8], y: v44|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = INC v42|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v45|QWORD, y: v9|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA [v46|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v47|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v47|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v46|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v50|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v52|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*]], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v50|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v22|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*] + 12], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v50|QWORD[*] + 16], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v26|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|V256_DWORD = H [v24|QWORD[*] + v26|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[.] + v26|QWORD * 4], input: v27|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v26|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v28|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v28|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = AND v6|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$39/2096940664@1050092962] v22|QWORD[.] v48|DWORD 
bench.Fusing.fused(Bench.scala:143) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-25107|0xffffffffffff9ded], v3|QWORD[.]] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v57|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-20507|0xffffffffffffafe5], v55|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-29316|0xffffffffffff8d7c], Object[null]] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0, stack:36]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rdi|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  212  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 4] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 2] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  284  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  288  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: r10|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B39 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B39" 
    successors "B34" "B39" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  340  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B40 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B40" 
    successors "B20" "B40" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  174  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r14:0, stack:0, stack:24, stack:36]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction r14|DWORD = AND r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  376  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:36]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:64|DWORD[.] Object[Fusing$$Lambda$39/2096940664@1050092962] r13|QWORD[.] r14|DWORD 
bench.Fusing.fused(Bench.scala:143) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  384  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758] <|@ <|@
      nr   24  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] <|@ <|@
      nr   28  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843] <|@ <|@
      nr  436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5] <|@ <|@
      nr  440  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-29316|0xffffffffffff8d7c] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0, stack:36]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr   56  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   66  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B41" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   86  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rdi|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   96  <|@ instruction rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD <|@ <|@
      nr   98  <|@ instruction rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  130  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  132  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  134  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  148  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  152  <|@ instruction stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  154  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B30" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  192  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  210  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  212  <|@ instruction TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  214  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 4] size: QWORD <|@ <|@
      nr  248  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  250  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  260  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rcx|QWORD = LEA [rbx|QWORD - 2] size: QWORD <|@ <|@
      nr  272  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  284  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  286  <|@ instruction rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  288  <|@ instruction r10|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B30" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  294  <|@ instruction rbx|QWORD = DEC rbx|QWORD size: QWORD <|@ <|@
      nr  296  <|@ instruction CMP (x: r10|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr  298  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  308  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B14" "B29" "B27" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  320  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  330  <|@ instruction rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  332  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B33" 
    successors "B35" "B33" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  338  <|@ instruction r11|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  340  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  342  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  346  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  348  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B36" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  406  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  408  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  412  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3 <|@ <|@
      nr  414  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  416  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  230  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  232  <|@ instruction J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  234  <|@ instruction r10|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  236  <|@ instruction CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  166  <|@ instruction stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  176  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  182  <|@ instruction r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  184  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ st <@st|@reference-map: [r14:0, stack:0, stack:24, stack:36]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  370  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  372  <|@ instruction r14|DWORD = AND r9|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  376  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  378  <|@ st <@st|@reference-map: [r13:0, stack:0, stack:36]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:64|DWORD[.] Object[Fusing$$Lambda$39/2096940664@1050092962] r13|QWORD[.] r14|DWORD 
bench.Fusing.fused(Bench.scala:143) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr  380  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B36 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758] <|@ <|@
      nr   24  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B41" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  446  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing.fused(Bench.scala:143) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843] <|@ <|@
      nr  436  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5] <|@ <|@
      nr  442  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction r11|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr   46  <|@ instruction r10|DWORD = MOVE input: int[-29316|0xffffffffffff8d7c] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-19        // java.lang.invoke.LambdaForm$MH.2093631819.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee458b7510468b14f51000000044895424244585d20f847f020000468b1cf50c000000468b04dd0c0000004181f8ffffff7f0f84a8020000458bc841ffc1418bf1d1ee8bf648ffce488bd648d1e2418bd8483bda0f87090000004585c00f8563020000498b5760498b4f704181f8ffffff000f83b0010000418bf8c1e7028d7f1783e7f84863ff488bc74803c2483bc10f8792010000498947600f188417c00000000f188417000100000f188417400100000f188417800100004489420c48c70201000000c74208addeadde488bc248895c2410488974240844894c2404458be844893424458bf34585ed0f8479000000488b5c2410488d70104a8d14f510000000488d4bf84885c949c7c2000000000f8df8000000488d4bfc4c3bd10f8f13000000c4a17a6f0492c4a17a7f0496498d4a044c8bd1488d4bfe4c3bd10f8f13000000c4a1f96e0492c4a1f97e0496498d4a024c8bd148ffcb4c3bd30f8f08000000428b149242891496488b7424084885f60f8c2c000000488d50104a8d0cf51000000049c7c20000000066669041bb0200000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f87b0000000498957600f1886d8000000448b542424488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde48c1e80389460c44895610488bc2488b6c24304883c438850500000000c5f877c3660f1f840000000000c4a17e6f0492c4a17e7f04964d8d52084c3bd17eebe9eefeffff48895c2410488974240844894c2404448934244c896c241848baaddeaddeaddeadde488bf2418bd0b900000000458bf3458be8e80000000090e982feffff4c8be8448b4c240448beaddeaddeaddeadde458bf14183e6feba02000000b901000000e80000000090488bf0498bc5e927ffffff4c896c241849baaddeaddeaddeadde4d8bda41baed9dffff4589979c0200004d899fa8020000e800000000904c896c241849baaddeaddeaddeadde4d8bda41bae5afffffebd249bb000000000000000041ba7c8dffffebc0e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1102a1f78, value=0x1150b0e60]:0x1150b0e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 34 r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 85 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [r11:0, r13:0, r14:0, stack:36]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 CMP r8|DWORD y: 2147483647 size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 106 block B4 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 112 54 rsi|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 117 56 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 119 58 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 122 60 rdx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 128 62 rbx|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 131 64 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 134 66 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 140 block B6 null  <||@
  Comment 140 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 74 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 143 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41  <||@
  Comment 149 block B8 null  <||@
  Comment 149 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 84 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 153 86 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 157 88 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 164 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 170 block B9 null  <||@
  Comment 170 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 94 rdi|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 176 96 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 179 98 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 182 100 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 185 102 rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 191 104 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 194 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 200 block B11 null  <||@
  Comment 200 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 124 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 204 126 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 212 128 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 220 130 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 228 132 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 236 134 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 240 136 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 247 138 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 254 140 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 254 142 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 257 144 stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 262 146 stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 267 148 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 272 150 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 275 152 stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 279 154 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 282 156 JUMP ~[] destination: B11 -> B14  <||@
  Comment 282 block B14 null  <||@
  Comment 282 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 282 192 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 285 194 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 291 block B16 null  <||@
  Comment 291 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 204 rbx|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 296 206 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 300 208 rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 308 210 rcx|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 312 212 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 315 218 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 322 214 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 328 block B21 null  <||@
  Comment 328 244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 328 246 rcx|QWORD = LEA [rbx|QWORD - 4] size: QWORD  <||@
  Comment 332 248 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 335 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 341 block B23 null  <||@
  Comment 341 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 258 xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 347 260 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 353 262 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 357 264 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 360 266 JUMP ~[] destination: B23 -> B24  <||@
  Comment 360 block B24 null  <||@
  Comment 360 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 360 270 rcx|QWORD = LEA [rbx|QWORD - 2] size: QWORD  <||@
  Comment 364 272 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 367 274 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 373 block B26 null  <||@
  Comment 373 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 282 xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 379 284 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 385 286 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 389 288 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 392 290 JUMP ~[] destination: B26 -> B27  <||@
  Comment 392 block B27 null  <||@
  Comment 392 292 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 294 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 395 296 CMP (x: r10|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 398 298 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 404 block B29 null  <||@
  Comment 404 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 308 rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD  <||@
  Comment 408 310 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 412 314 JUMP ~[] destination: B29 -> B30  <||@
  Comment 412 block B30 null  <||@
  Comment 412 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 198 rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 417 318 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 420 320 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 426 block B32 null  <||@
  Comment 426 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 328 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 430 330 rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 438 332 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 445 334 JUMP ~[] destination: B32 -> B33  <||@
  Comment 445 block B33 loop 1 depth 1 header:396|LoopBegin  <||@
  Comment 445 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 338 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 340 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 458 342 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 462 344 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 465 346 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 468 348 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 470 block B35 null  <||@
  Comment 470 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 356 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 474 358 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 478 360 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 482 362 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 488 block B37 null  <||@
  Comment 488 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 390 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 492 392 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 499 394 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 499 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 499 block B38 null  <||@
  Comment 499 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 499 396 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 504 402 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 507 404 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 507 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 517 406 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 524 408 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 527 410 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 527 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 534 412 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3  <||@
  Comment 538 414 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 541 416 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 545 418 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 548 420 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c  <||@
  Comment 557 12  <||@
  Comment 567 block B19 loop 0 depth 1 header:423|LoopBegin  <||@
  Comment 567 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 230 xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 582 232 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 588 234 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 592 236 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 595 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 602 block B13 null  <||@
  Comment 602 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 160 stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 607 162 stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 612 164 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 617 166 stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 621 168 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 626 174 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 626 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 636 176 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 639 178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 642 180 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 647 182 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 650 184 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 653 186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 653 {Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 658 [r14:0, stack:0, stack:24, stack:36]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 659 188 JUMP ~[] destination: B13 -> B14  <||@
  Comment 664 block B36 null  <||@
  Comment 664 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 366 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 667 368 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 672 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 672 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 682 372 r14|DWORD = AND r9|DWORD y: -2 size: DWORD  <||@
  Comment 689 374 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 694 376 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 699 378 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9]  <||@
  Comment 699 {Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 704 [r13:0, stack:0, stack:36]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                                |2             |3         
     locals:  |stack:64|DWORD[.]  |Object[Fusing$$Lambda$39/2096940664@1050092962]  |r13|QWORD[.]  |r14|DWORD 
  at bench.Fusing.fused(Bench.scala:143) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 705 380 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 708 382 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 711 386 JUMP ~[] destination: B36 -> B38  <||@
  Comment 716 block B1 null  <||@
  Comment 716 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 20 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 721 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758]  <||@
  Comment 721 {Object[d.a@421893758]}  <||@
  Comment 731 24 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 734 26 r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 740 30 JUMP ~[] destination: B1 -> B42  <||@
  Comment 740 block B42 null  <||@
  Comment 740 444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 740 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 747 448 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 754 450 DEOPT info [bci:0]  <||@
  Comment 754 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1102a1f90, value=0x1150b25fe]:0x1150b25fe}  <||@
  Comment 759 [r13:0]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 760 block B41 null  <||@
  Comment 760 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 432 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 765 434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843]  <||@
  Comment 765 {Object[d.a@453417843]}  <||@
  Comment 775 436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 778 438 r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5]  <||@
  Comment 784 442 JUMP ~[] destination: B41 -> B42  <||@
  Comment 786 block B3 null  <||@
  Comment 786 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 44 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 796 46 r10|DWORD = MOVE input: int[-29316|0xffffffffffff8d7c]  <||@
  Comment 802 48 JUMP ~[] destination: B3 -> B42  <||@
  Comment 804 {Stub<ExceptionHandlerStub.exceptionHandler>@0x115458660:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 804 4  <||@
  Comment 810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1102a1f88, value=0x1150b2500]:0x1150b2500}  <||@
  Comment 810 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1327[bench.Fusing.fused()]"
  method "HotSpotCompilation-1327[bench.Fusing.fused()]"
  date 1527270356612
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 115c3b780 448b560849c1e203493bc20f85cf5647ff900f1f80000000000f1f800000000089842400c0feff4883ec3848896c24304c8bee458b7510468b14f51000000044895424244585d20f847f020000468b1cf50c000000468b04dd0c0000004181f8ffffff7f0f84a8020000458bc841ffc1418bf1d1ee8bf648ffce488bd648d1e2418bd8483bda0f87090000004585c00f8563020000498b5760498b4f704181f8ffffff000f83b0010000418bf8c1e7028d7f1783e7f84863ff488bc74803c2483bc10f8792010000498947600f188417c00000000f188417000100000f188417400100000f188417800100004489420c48c70201000000c742086d0100f8488bc248895c2410488974240844894c2404458be844893424458bf34585ed0f8479000000488b5c2410488d70104a8d14f510000000488d4bf84885c949c7c2000000000f8df8000000488d4bfc4c3bd10f8f13000000c4a17a6f0492c4a17a7f0496498d4a044c8bd1488d4bfe4c3bd10f8f13000000c4a1f96e0492c4a1f97e0496498d4a024c8bd148ffcb4c3bd30f8f08000000428b149242891496488b7424084885f60f8c2c000000488d50104a8d0cf51000000049c7c20000000066669041bb0200000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f87b0000000498957600f1886d8000000448b542424488bd648b998c32ec007000000488b89a800000048890ec7460873d805f848c1e80389460c44895610488bc2488b6c24304883c438850553d658f9c5f877c3660f1f840000000000c4a17e6f0492c4a17e7f04964d8d52084c3bd17eebe9eefeffff48895c2410488974240844894c2404448934244c896c241848ba680b00c007000000488bf2418bd0b900000000458bf3458be8e84e77e5ff90e982feffff4c8be8448b4c240448be680b00c007000000458bf14183e6feba02000000b901000000e82077e5ff90488bf0498bc5e927ffffff4c896c241849ba08b80c92070000004d8bda41baed9dffff4589979c0200004d899fa8020000e8876b47ff904c896c241849baa0a70c92070000004d8bda41bae5afffffebd249bb000000000000000041ba7c8dffffebc0e8b7cb81ff90e8516a47ff90  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x1102a1f78, value=0x1150b0e60]:0x1150b0e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@28f956e4 slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 34 r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 85 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [r11:0, r13:0, r14:0, stack:36]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 CMP r8|DWORD y: 2147483647 size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 106 block B4 null  <||@
  Comment 106 50 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 52 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 112 54 rsi|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 117 56 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 119 58 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 122 60 rdx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 128 62 rbx|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 131 64 CMP (x: rbx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 134 66 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 140 block B6 null  <||@
  Comment 140 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 74 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 143 76 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B41  <||@
  Comment 149 block B8 null  <||@
  Comment 149 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 84 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 153 86 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 157 88 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 164 90 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 170 block B9 null  <||@
  Comment 170 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 94 rdi|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 176 96 rdi|DWORD = LEA [rdi|DWORD + 23] size: DWORD  <||@
  Comment 179 98 rdi|DWORD = AND rdi|DWORD y: -8 size: DWORD  <||@
  Comment 182 100 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 185 102 rax|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 191 104 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 194 106 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 200 block B11 null  <||@
  Comment 200 122 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 124 MOV (x: [r15|QWORD + 96], y: rax|QWORD) size: QWORD  <||@
  Comment 204 126 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 212 128 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 220 130 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 228 132 AMD64PREFETCH ~[rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 236 134 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 240 136 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 247 138 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 247 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 254 140 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 254 142 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 257 144 stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 262 146 stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 267 148 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 272 150 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 275 152 stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 279 154 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 282 156 JUMP ~[] destination: B11 -> B14  <||@
  Comment 282 block B14 null  <||@
  Comment 282 190 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 282 192 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 285 194 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B30 falseDestination: B14 -> B16  <||@
  Comment 291 block B16 null  <||@
  Comment 291 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 291 204 rbx|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 296 206 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 300 208 rdx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 308 210 rcx|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 312 212 TEST (x: rcx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 315 218 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 322 214 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 328 block B21 null  <||@
  Comment 328 244 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 328 246 rcx|QWORD = LEA [rbx|QWORD - 4] size: QWORD  <||@
  Comment 332 248 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 335 250 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 341 block B23 null  <||@
  Comment 341 256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 341 258 xmm0|V128_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 347 260 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 353 262 rcx|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 357 264 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 360 266 JUMP ~[] destination: B23 -> B24  <||@
  Comment 360 block B24 null  <||@
  Comment 360 268 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 360 270 rcx|QWORD = LEA [rbx|QWORD - 2] size: QWORD  <||@
  Comment 364 272 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 367 274 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 373 block B26 null  <||@
  Comment 373 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 373 282 xmm0|V64_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 379 284 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 385 286 rcx|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 389 288 r10|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 392 290 JUMP ~[] destination: B26 -> B27  <||@
  Comment 392 block B27 null  <||@
  Comment 392 292 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 392 294 rbx|QWORD = DEC rbx|QWORD size: QWORD  <||@
  Comment 395 296 CMP (x: r10|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 398 298 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B30 falseDestination: B27 -> B29  <||@
  Comment 404 block B29 null  <||@
  Comment 404 306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 404 308 rdx|DWORD = MOV [rdx|QWORD[*] + r10|QWORD * 4] size: DWORD  <||@
  Comment 408 310 MOV (x: [rsi|QWORD[.] + r10|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 412 314 JUMP ~[] destination: B29 -> B30  <||@
  Comment 412 block B30 null  <||@
  Comment 412 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 412 198 rsi|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 417 318 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 420 320 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 426 block B32 null  <||@
  Comment 426 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 426 328 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 430 330 rcx|QWORD[*] = LEA [r14|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 438 332 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 445 334 JUMP ~[] destination: B32 -> B33  <||@
  Comment 445 block B33 loop 1 depth 1 header:396|LoopBegin  <||@
  Comment 445 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 448 338 r11|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 454 340 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[*] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 458 342 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 462 344 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 465 346 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 468 348 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 470 block B35 null  <||@
  Comment 470 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 356 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 474 358 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 478 360 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 482 362 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37  <||@
  Comment 488 block B37 null  <||@
  Comment 488 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 390 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 492 392 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 499 394 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 499 398 JUMP ~[] destination: B37 -> B38  <||@
  Comment 499 block B38 null  <||@
  Comment 499 400 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 499 396 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 504 402 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 507 404 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 507 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 517 406 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 524 408 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 527 410 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 527 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 534 412 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@5238a124 encoding: base: 0 shift: 3  <||@
  Comment 538 414 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 541 416 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 545 418 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 548 420 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@731d165c  <||@
  Comment 557 12  <||@
  Comment 567 block B19 loop 0 depth 1 header:423|LoopBegin  <||@
  Comment 567 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 576 230 xmm0|V256_DWORD = H [rdx|QWORD[*] + r10|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 582 232 J (address: [rsi|QWORD[.] + r10|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 588 234 r10|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 592 236 CMP (x: r10|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 595 238 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 602 block B13 null  <||@
  Comment 602 172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 602 160 stack:48|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 607 162 stack:56|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 612 164 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 617 166 stack:64|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 621 168 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 626 174 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 626 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 636 176 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 639 178 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 642 180 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 647 182 r14|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 650 184 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 653 186 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 653 {Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 658 [r14:0, stack:0, stack:24, stack:36]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 659 188 JUMP ~[] destination: B13 -> B14  <||@
  Comment 664 block B36 null  <||@
  Comment 664 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 664 366 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 667 368 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 672 370 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 672 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 682 372 r14|DWORD = AND r9|DWORD y: -2 size: DWORD  <||@
  Comment 689 374 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 694 376 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 699 378 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9]  <||@
  Comment 699 {Stub<NewArrayStub.newArray>@0x115a93160:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 704 [r13:0, stack:0, stack:36]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                                |2             |3         
     locals:  |stack:64|DWORD[.]  |Object[Fusing$$Lambda$39/2096940664@1050092962]  |r13|QWORD[.]  |r14|DWORD 
  at bench.Fusing.fused(Bench.scala:143) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 705 380 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 708 382 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 711 386 JUMP ~[] destination: B36 -> B38  <||@
  Comment 716 block B1 null  <||@
  Comment 716 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 716 20 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 721 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@421893758]  <||@
  Comment 721 {Object[d.a@421893758]}  <||@
  Comment 731 24 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 734 26 r10|DWORD = MOVE input: int[-25107|0xffffffffffff9ded]  <||@
  Comment 740 30 JUMP ~[] destination: B1 -> B42  <||@
  Comment 740 block B42 null  <||@
  Comment 740 444 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 740 446 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 747 448 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 754 450 DEOPT info [bci:0]  <||@
  Comment 754 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x1102a1f90, value=0x1150b25fe]:0x1150b25fe}  <||@
  Comment 759 [r13:0]at bench.Fusing.fused(Bench.scala:143) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 760 block B41 null  <||@
  Comment 760 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 760 432 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 765 434 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@453417843]  <||@
  Comment 765 {Object[d.a@453417843]}  <||@
  Comment 775 436 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 778 438 r10|DWORD = MOVE input: int[-20507|0xffffffffffffafe5]  <||@
  Comment 784 442 JUMP ~[] destination: B41 -> B42  <||@
  Comment 786 block B3 null  <||@
  Comment 786 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 786 44 r11|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 796 46 r10|DWORD = MOVE input: int[-29316|0xffffffffffff8d7c]  <||@
  Comment 802 48 JUMP ~[] destination: B3 -> B42  <||@
  Comment 804 {Stub<ExceptionHandlerStub.exceptionHandler>@0x115458660:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 804 4  <||@
  Comment 810 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x1102a1f88, value=0x1150b2500]:0x1150b2500}  <||@
  Comment 810 5  <||@
  HexCodeFile>>> <|@
end_nmethod
