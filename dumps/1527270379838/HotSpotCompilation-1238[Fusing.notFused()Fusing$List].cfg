begin_compilation
  name " HotSpotCompilation-1238[bench.Fusing.notFused()]"
  method "HotSpotCompilation-1238[bench.Fusing.notFused()]"
  date 1527270379844
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a933  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/Fusing;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v947 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing.l
nullCheck: false
stamp: n# Lbench/Fusing$List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: a934 
=== Usages ===
?30 v950 v948 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: a934  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v400 a441 a934 i936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a933 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v950 
=== Succesors ===
next: v240 
=== Usages ===
?112 v166 v579 
=== Predecessor ===
a933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v950 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v239 #falseSuccessor: v237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1193856808
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1193856808]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a933 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: i936 
=== Usages ===
v951 v949 
=== Predecessor ===
v237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
i936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i936 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v949 
=== Succesors ===
next: v248 
=== Usages ===
v487 i186 j183 v221 i480 v219 v467 v521 a441 a502 
=== Predecessor ===
a935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v949 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i218 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i936 y: i218  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v219 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v219 #trueSuccessor: v247 #falseSuccessor: v245  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@374064077
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@374064077]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46468
stableDimension: 0
stamp: i32 [-46468] ⇊00000000ffff4a7c ⇈00000000ffff4a7c
stampKind: i32
value: int[-46468|0xffffffffffff4a7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
j201 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 a441 a502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i24 
=== Succesors ===
=== Usages ===
v930 v922 v641 v696 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i936 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i899 j220 i186 i187 a547 i896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i936 
y: i62 
=== Succesors ===
=== Usages ===
i187 i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i936 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$157/1826309314@1ac60a97
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i186 
y: i62 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i186 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/883595734@58ab5af7
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/769900254@36ce36e5
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
j191 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j191 j834 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j188 
y: j190 
=== Succesors ===
=== Usages ===
j220 v761 v763 v779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j190  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/1590401797@fac24fb
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j191 
y: i62 
=== Succesors ===
=== Usages ===
v194 j201 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j191 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/883595734@58ab5af7
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/769900254@36ce36e5
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i936 
=== Succesors ===
=== Usages ===
v194 v202 j834 j831 j821 j827 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j220 
y: j183 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j220 y: j183  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v920 #falseSuccessor: v923  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v921 #falseSuccessor: v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v919 
=== Succesors ===
next: j420 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v919 #next: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j420 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
v956 v957 
=== Predecessor ===
v917 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
j464 v466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
=== Succesors ===
next: j465 
=== Usages ===
j424 v958 v959 a440 v964 v960 v961 v962 v963 
=== Predecessor ===
j420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v429 
=== Usages ===
v430 
=== Predecessor ===
j464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a547 i480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/1590401797@fac24fb
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i936 
y: i416 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i936 y: i416  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i480 
y: i448 
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i480 y: i448  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$109/630556122@1cb7a745
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i509 
y: i418 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i509 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/926254276@7442d58
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1469101244@64caf8db
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i419 
=== Succesors ===
=== Usages ===
j424 j486 v960 v961 v962 v963 v969 v970 v971 v972 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i425 
=== Succesors ===
=== Usages ===
v490 v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i936 y: i425  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a441 a547 a502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 v525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 v522 j760 j778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
j465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid j424 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j423 
y: j464 
=== Succesors ===
=== Usages ===
v430 v466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j423 y: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j465 
y: j424 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j465 y: j424  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j424 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v960 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v960 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v961 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v961 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v962 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v962 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v963 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v963 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: i936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: i936 stateAfter: - lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: j415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: j415 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: v580 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a440 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a440 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j464 
=== Succesors ===
next: v442 
=== Usages ===
a445 
=== Predecessor ===
v439 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j464 #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
a440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v414 i936 i24 
=== Succesors ===
next: v444 
=== Usages ===
a445 
=== Predecessor ===
v432 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v414 i936 i24 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
a441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a445 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v443 
values: a440 a441 
=== Succesors ===
=== Usages ===
v954 a378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: a440 a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v444 
=== Succesors ===
next: v782 
=== Usages ===
a445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v444 #next: v782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v641 
=== Usages ===
j783 j785 
=== Predecessor ===
v443 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j183 
y: j190 
=== Succesors ===
=== Usages ===
v835 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j190  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j183 
y: j830 
=== Succesors ===
=== Usages ===
v832 v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j183 
y: j826 
=== Succesors ===
=== Usages ===
v828 v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j183 
y: j820 
=== Succesors ===
=== Usages ===
v822 v824 v874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v822 j812 j804 j866 j751 v761 j858 j770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j262 
=== Succesors ===
=== Usages ===
v699 v644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j262  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
j783 j748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j803 j857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j811 j865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j873 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v639 #falseSuccessor: v640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a445 
index: - 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a445 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v782 
address: v954 
=== Succesors ===
=== Usages ===
v986 v988 v990 v992 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v782 address: v954  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v782 
address: v951 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v782 address: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j812 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v646 
values: j262 j819 
=== Succesors ===
=== Usages ===
v993 j819 v992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: j262 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v645 
=== Succesors ===
next: v937 
=== Usages ===
v937 v650 v651 j812 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v645 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j812 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v646 
address: v993 
=== Succesors ===
next: v908 
=== Usages ===
v908 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v646 address: v993 #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j812 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: v937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: v937 stateAfter: - lastLocationAccess: - #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j812 
y: j470 
=== Succesors ===
=== Usages ===
j804 j812 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j812 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j819 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v650 
falseSuccessor: v652 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v650 #falseSuccessor: v652  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v646 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v646 #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j804 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v655 
values: j262 j819 
=== Succesors ===
=== Usages ===
v991 j811 j795 v828 v990 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v655 values: j262 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v654 v656 
=== Succesors ===
next: v674 
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v654 v656 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j804 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j804  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v673 #falseSuccessor: v672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j804 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v672 
address: v991 
=== Succesors ===
next: v906 
=== Usages ===
v906 
=== Predecessor ===
v672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v672 address: v991 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j804 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: v938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: v938 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j804 
y: j788 
=== Succesors ===
=== Usages ===
j795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v666 
values: j811 j804 
=== Succesors ===
=== Usages ===
v989 j803 j786 v832 v988 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v666 values: j811 j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v665 v677 
=== Succesors ===
next: v680 
=== Usages ===
j795 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v665 v677 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j795 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v678 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v679 #falseSuccessor: v678  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
v939 
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j795 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v678 
address: v989 
=== Succesors ===
next: v904 
=== Usages ===
v904 
=== Predecessor ===
v678 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v678 address: v989 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j795 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: v939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: v939 stateAfter: - lastLocationAccess: - #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j795 
y: j802 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j795 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v669 
values: j803 j795 
=== Succesors ===
=== Usages ===
v987 v835 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: j803 j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v683 
=== Succesors ===
next: v686 
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v683 #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j786 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j786  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v685 #falseSuccessor: v684  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i940 
=== Usages ===
i940 
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j786 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v684 
address: v987 
=== Succesors ===
next: v902 
=== Usages ===
v902 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v684 address: v987 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j786 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
value: i940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 value: i940 stateAfter: - lastLocationAccess: - #next: v671  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v658 v671 v689 
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v658 v671 v689 #next: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a445 
=== Succesors ===
next: v747 
=== Usages ===
v952 ?30 ?112 
=== Predecessor ===
v659 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a445 #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v595 
=== Usages ===
j748 j750 
=== Predecessor ===
a378 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a378 
index: - 
=== Succesors ===
=== Usages ===
j839 j750 j767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a378 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j262 
=== Succesors ===
=== Usages ===
v617 v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j262  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v593 #falseSuccessor: v594  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v747 
address: v952 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v747 address: v952  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v747 
address: v951 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v747 address: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v597 
values: j262 j760 
=== Succesors ===
=== Usages ===
v983 j760 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v597 values: j262 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v596 
=== Succesors ===
next: i941 
=== Usages ===
i941 v603 v605 j751 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v596 #next: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j748 
index: j751 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: j751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v597 
address: v983 
=== Succesors ===
next: v897 
=== Usages ===
i896 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v597 address: v983 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j750 
index: j751 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j750 index: j751  <|@  <|@
f <@~|@floating>@ <|@
tid i896 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i941 
y: i62 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i941 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i896 stateAfter: - lastLocationAccess: - #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j751 
y: j415 
=== Succesors ===
=== Usages ===
v763 j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j751 y: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j760 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v597 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v597 #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v602 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v602 #next: v932  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$26/141412972@464551379
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$26/141412972;
stampKind: a -
value: Object[Fusing$$Lambda$26/141412972@464551379]
=== Inputs ===
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$109/630556122@1cb7a745
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i186 
y: i373 
=== Succesors ===
=== Usages ===
?30 ?77 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i186 y: i373  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: a933 a7 a378 i374 
=== Succesors ===
=== Usages ===
a502 v258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a933 a7 a378 i374  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v245 
object: j220 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v245 object: j220  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j183 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j201 y: j183  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v928 #falseSuccessor: v931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v929 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v929 #falseSuccessor: v259  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v926 v927 
=== Succesors ===
next: j482 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v926 v927 #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j518 
=== Usages ===
v965 v966 
=== Predecessor ===
v925 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
j518 v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
=== Succesors ===
next: j519 
=== Usages ===
j486 v967 v968 a501 v973 v969 v970 v971 v972 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v965 #next: j519  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v490 
=== Usages ===
v491 
=== Predecessor ===
j518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
j519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v489 #falseSuccessor: v488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j423 
y: j518 
=== Succesors ===
=== Usages ===
v491 v520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j423 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j486 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j519 y: j486  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: j486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: j486 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v969 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v969 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v970 
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v970 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v971 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v971 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v972 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v972 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: i936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: i936 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: j415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: j415 stateAfter: - lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v580 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a501 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a501 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j518 
=== Succesors ===
next: v503 
=== Usages ===
a506 
=== Predecessor ===
v500 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j518 #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
a501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v494 
=== Succesors ===
next: a502 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v494 #next: a502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a502 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v414 i936 i24 
=== Succesors ===
next: v505 
=== Usages ===
a506 
=== Predecessor ===
v493 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v414 i936 i24 #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
a502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a506 <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v504 
values: a501 a502 
=== Succesors ===
=== Usages ===
v955 a382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v504 values: a501 a502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v505 
=== Succesors ===
next: v838 
=== Usages ===
a506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v505 #next: v838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v696 
=== Usages ===
j839 j841 
=== Predecessor ===
v504 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v694 #falseSuccessor: v695  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a506 
index: - 
=== Succesors ===
=== Usages ===
j841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a506 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v838 
address: v955 
=== Succesors ===
=== Usages ===
v994 v996 v998 v1000 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v838 address: v955  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v838 
address: v952 
=== Succesors ===
=== Usages ===
v995 v997 v999 v1001 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v838 address: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v697 #falseSuccessor: v698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j262 j873 
=== Succesors ===
=== Usages ===
v1001 j873 v1000 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j262 j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v700 
=== Succesors ===
next: v942 
=== Usages ===
v942 v704 v705 j866 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v700 #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j866 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v701 
address: v1001 
=== Succesors ===
next: v916 
=== Usages ===
v916 
=== Predecessor ===
v701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v701 address: v1001 #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j866 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: v942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: v942 stateAfter: - lastLocationAccess: - #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j866 
y: j470 
=== Succesors ===
=== Usages ===
j858 j866 v874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j866 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j873 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j873  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v704 #falseSuccessor: v706  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v701 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v701 #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j262 j873 
=== Succesors ===
=== Usages ===
v999 j865 j850 v876 v998 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j262 j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v710 
=== Succesors ===
next: v728 
=== Usages ===
j858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v710 #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j858 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j858  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v726 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v727 #falseSuccessor: v726  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
v943 
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j858 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v726 
address: v999 
=== Succesors ===
next: v914 
=== Usages ===
v914 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v726 address: v999 #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j858 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v943 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v943 stateAfter: - lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j858 
y: j788 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j850 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v720 
values: j865 j858 
=== Succesors ===
=== Usages ===
v997 j857 j842 v878 v996 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v720 values: j865 j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v731 
=== Succesors ===
next: v734 
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v731 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j850 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j850  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
v944 
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j850 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v732 
address: v997 
=== Succesors ===
next: v912 
=== Usages ===
v912 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v732 address: v997 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j850 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: v944 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: v944 stateAfter: - lastLocationAccess: - #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j850 
y: j802 
=== Succesors ===
=== Usages ===
j842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j850 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j842 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v723 
values: j857 j850 
=== Succesors ===
=== Usages ===
v995 v880 v994 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v723 values: j857 j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v737 
=== Succesors ===
next: v740 
=== Usages ===
j842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v737 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j842 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j842  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v739 #falseSuccessor: v738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i945 
=== Usages ===
i945 
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j842 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v738 
address: v995 
=== Succesors ===
next: v910 
=== Usages ===
v910 
=== Predecessor ===
v738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v738 address: v995 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j842 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: i945 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: i945 stateAfter: - lastLocationAccess: - #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v725 v743 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v725 v743 #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a506 
=== Succesors ===
next: v766 
=== Usages ===
a267 ?77 v953 
=== Predecessor ===
v713 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a506 #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v617 
=== Usages ===
j767 j769 
=== Predecessor ===
a382 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a382 
index: - 
=== Succesors ===
=== Usages ===
j769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v766 
address: v953 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v766 address: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v766 
address: v952 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v766 address: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j770 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v619 
values: j262 j778 
=== Succesors ===
=== Usages ===
v985 j778 v984 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v619 values: j262 j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v618 
=== Succesors ===
next: i946 
=== Usages ===
i946 v625 v627 j770 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v618 #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j767 
index: j770 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v619 
address: v985 
=== Succesors ===
next: v900 
=== Usages ===
i899 
=== Predecessor ===
v619 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v619 address: v985 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j769 
index: j770 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j769 index: j770  <|@  <|@
f <@~|@floating>@ <|@
tid i899 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i946 
y: i62 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i946 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: i899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: i899 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j770 
y: j415 
=== Succesors ===
=== Usages ===
v779 j770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j770 y: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j778 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j778  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v779 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v779 #trueSuccessor: v625 #falseSuccessor: v628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v619 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v619 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v622 v624 
=== Succesors ===
next: j535 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v622 v624 #next: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j551 
=== Usages ===
v974 v975 
=== Predecessor ===
v623 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j551  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j535 
index: - 
=== Succesors ===
=== Usages ===
j551 v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j551 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: j552 
=== Usages ===
j582 j557 v979 
=== Predecessor ===
j535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j535 
index: - 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: v543 
=== Usages ===
v540 
=== Predecessor ===
j551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j551 
y: j581 
=== Succesors ===
=== Usages ===
v540 v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j551 y: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j552 
y: j582 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j552 y: j582  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a547  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@600c5fb9
hasIdentity: true
objectId: -1
stamp: a!# Lbench/Fusing$List;
type: HotSpotType<Lbench/Fusing$List;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$27/652525947@1242188746
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$27/652525947;
stampKind: a -
value: Object[Fusing$$Lambda$27/652525947@1242188746]
=== Inputs ===
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: a378 a934 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: a378 a934  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a66 a13 a382 i374 
virtualObjectMappings: ?112 
=== Succesors ===
=== Usages ===
a547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a66 a13 a382 i374 virtualObjectMappings: ?112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a547 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v414 i416 i62 
=== Succesors ===
next: j548 
=== Usages ===
j548 
=== Predecessor ===
v541 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v414 i416 i62 #next: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a547 
=== Succesors ===
next: v558 
=== Usages ===
j557 
=== Predecessor ===
a547 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a547 #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
j548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j582 stateAfter: - lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j551 
index: - 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j551 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v979 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v979 #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j557 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v555 
values: j551 j548 
=== Succesors ===
=== Usages ===
v978 v977 a264 v980 v981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v555 values: j551 j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 
=== Succesors ===
next: a264 
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 #next: a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j557 
=== Succesors ===
next: j569 
=== Usages ===
a271 
=== Predecessor ===
v555 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j557 #next: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v563 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v570 
=== Usages ===
v570 
=== Predecessor ===
a264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: j569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: j569 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v586 stateAfter: - lastLocationAccess: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: a267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: a267 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: a934 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: a934 stateAfter: - lastLocationAccess: - #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a264 
=== Succesors ===
next: v272 
=== Usages ===
v17 
=== Predecessor ===
v579 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a264 #next: v272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
a271 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a271 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a271 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v619  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v701 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v701  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 154
reason: BoundsCheckException
speculation: Object[d.a@347430673]
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v597 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v597  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@347430673
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@347430673]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34331
stableDimension: 0
stamp: i32 [-34331] ⇊00000000ffff79e5 ⇈00000000ffff79e5
stampKind: i32
value: int[-34331|0xffffffffffff79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i398 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-46468 - -31243] ⇊00000000ffff0064 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v394 
values: i402 i407 i412 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v394 values: i402 i407 i412  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v394 
values: a403 a408 a413 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v394 values: a403 a408 a413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v406 v411 
=== Succesors ===
next: v400 
=== Usages ===
i398 a399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v406 v411 #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i398 
speculation: a399 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i398 speculation: a399  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a933 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a933  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Lbench/Fusing;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v947 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
result v1|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing.l
nullCheck: false
stamp: n# Lbench/Fusing$List;
=== Inputs ===
stateBefore: - 
guard: - 
address: v947 
=== Succesors ===
next: a934 
=== Usages ===
?30 v950 v948 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v947 #next: a934  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v400 a441 a934 i936 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v1|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a933 
=== Succesors ===
=== Usages ===
a934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a934 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.$outer
nullCheck: true
stamp: n Lbench/Fusing;
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v950 
=== Succesors ===
next: v240 
=== Usages ===
?112 v166 v579 
=== Predecessor ===
a933 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v950 #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
value: a934 
=== Succesors ===
=== Usages ===
v240 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a934  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
a934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v239 #falseSuccessor: v237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid a403 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@1193856808
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@1193856808]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result int[-38931|0xffffffffffff67ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -38931
stableDimension: 0
stamp: i32 [-38931] ⇊00000000ffff67ed ⇈00000000ffff67ed
stampKind: i32
value: int[-38931|0xffffffffffff67ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed], v3|QWORD[.]] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a935 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a935  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v1|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a933 
=== Succesors ===
=== Usages ===
a935 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a933  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a935 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Fusing$List.a
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v948 
=== Succesors ===
next: i936 
=== Usages ===
v951 v949 
=== Predecessor ===
v237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v948 #next: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
i936 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i936 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v949 
=== Succesors ===
next: v248 
=== Usages ===
v487 i186 j183 v221 i480 v219 v467 v521 a441 a502 
=== Predecessor ===
a935 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v949 #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid i218 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647] ⇊000000007fffffff ⇈000000007fffffff
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i218 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i936 y: i218  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v219 
=== Succesors ===
trueSuccessor: v247 
falseSuccessor: v245 
=== Usages ===
=== Predecessor ===
i936 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v219 #trueSuccessor: v247 #falseSuccessor: v245  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v406 
=== Usages ===
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid a408 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@374064077
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@374064077]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i407 <|@
result int[-46468|0xffffffffffff4a7c] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -46468
stableDimension: 0
stamp: i32 [-46468] ⇊00000000ffff4a7c ⇈00000000ffff4a7c
stampKind: i32
value: int[-46468|0xffffffffffff4a7c]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v247 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46468|0xffffffffffff4a7c], v6|QWORD[.]] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v924 
=== Usages ===
j201 
=== Predecessor ===
v248 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v924  <|@  <|@
f <@~|@floating>@ <|@
tid i24 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 a441 a502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i24 
=== Succesors ===
=== Usages ===
v930 v922 v641 v696 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i936 y: i24  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i899 j220 i186 i187 a547 i896 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i186 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i936 
y: i62 
=== Succesors ===
=== Usages ===
i187 i374 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i936 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid i187 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$157/1826309314@1ac60a97
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
x: i186 
y: i62 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i186 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j188 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/883595734@58ab5af7
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/769900254@36ce36e5
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i187 
=== Succesors ===
=== Usages ===
j191 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i187  <|@  <|@
f <@~|@floating>@ <|@
tid j190 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j191 j834 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j191 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j188 
y: j190 
=== Succesors ===
=== Usages ===
j220 v761 v763 v779 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j188 y: j190  <|@  <|@
f <@~|@floating>@ <|@
tid j220 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/1590401797@fac24fb
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
x: j191 
y: i62 
=== Succesors ===
=== Usages ===
v194 j201 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: j191 y: i62  <|@  <|@
f <@~|@floating>@ <|@
tid j183 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/883595734@58ab5af7
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$18/769900254@36ce36e5
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i936 
=== Succesors ===
=== Usages ===
v194 v202 j834 j831 j821 j827 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i936  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j220 
y: j183 
=== Succesors ===
=== Usages ===
v924 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j220 y: j183  <|@  <|@
f <@*|@fixed>@ <|@
tid v924 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v194 
=== Succesors ===
trueSuccessor: v920 
falseSuccessor: v923 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v194 #trueSuccessor: v920 #falseSuccessor: v923  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = DEC v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHL v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v918 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v918  <|@  <|@
f <@*|@fixed>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v922 
=== Usages ===
=== Predecessor ===
v924 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v922  <|@  <|@
f <@*|@fixed>@ <|@
tid v922 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
v923 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v921 #falseSuccessor: v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v919 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v919  <|@  <|@
f <@*|@fixed>@ <|@
tid v919 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
v921 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v918 v919 
=== Succesors ===
next: j420 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v918 v919 #next: j420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j420 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
v956 v957 
=== Predecessor ===
v917 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
j464 v466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
=== Succesors ===
next: j465 
=== Usages ===
j424 v958 v959 a440 v964 v960 v961 v962 v963 
=== Predecessor ===
j420 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v956 #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j420 
index: - 
=== Succesors ===
=== Usages ===
j465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j420 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v957 
=== Succesors ===
next: v429 
=== Usages ===
v430 
=== Predecessor ===
j464 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v957 #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid i416 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
a547 i480 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i480 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$15/1590401797@fac24fb
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i936 
y: i416 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i936 y: i416  <|@  <|@
f <@~|@floating>@ <|@
tid i448 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i480 
y: i448 
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i480 y: i448  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i419 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i419 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$109/630556122@1cb7a745
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i509 
y: i418 
=== Succesors ===
=== Usages ===
j423 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i509 y: i418  <|@  <|@
f <@~|@floating>@ <|@
tid j423 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$13/926254276@7442d58
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$14/1469101244@64caf8db
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i419 
=== Succesors ===
=== Usages ===
j424 j486 v960 v961 v962 v963 v969 v970 v971 v972 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i419  <|@  <|@
f <@~|@floating>@ <|@
tid i425 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i936 
y: i425 
=== Succesors ===
=== Usages ===
v490 v429 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i936 y: i425  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a441 a547 a502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v472 v525 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j415 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v468 v522 j760 j778 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
j465 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid j424 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j423 
y: j464 
=== Succesors ===
=== Usages ===
v430 v466 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j423 y: j464  <|@  <|@
f <@~|@floating>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j465 
y: j424 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j465 y: j424  <|@  <|@
f <@*|@fixed>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v430 
=== Succesors ===
trueSuccessor: v435 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v430 #trueSuccessor: v435 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v466 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j424 stateAfter: - lastLocationAccess: - #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v18|QWORD + v13|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v960 
=== Succesors ===
next: v456 
=== Usages ===
=== Predecessor ===
v466 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v960 #next: v456  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v18|QWORD + v13|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v456 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v961 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v961 #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v18|QWORD + v13|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v962 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v962 #next: v462  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v18|QWORD + v13|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j464 
=== Succesors ===
=== Usages ===
v462 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v963 
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v963 #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v13|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v958 
value: i936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v462 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v958 value: i936 stateAfter: - lastLocationAccess: - #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v13|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v959 
value: j415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v959 value: j415 stateAfter: - lastLocationAccess: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v13|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v964 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v964 value: v580 stateAfter: - lastLocationAccess: - #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a440 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a440 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j464 
=== Succesors ===
next: v442 
=== Usages ===
a445 
=== Predecessor ===
v439 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j464 #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
a440 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v431 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v431  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
v427 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v431 v433 
=== Succesors ===
next: a441 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v431 v433 #next: a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a441 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v414 i936 i24 
=== Succesors ===
next: v444 
=== Usages ===
a445 
=== Predecessor ===
v432 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v414 i936 i24 #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
a441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a445 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v443 
values: a440 a441 
=== Succesors ===
=== Usages ===
v954 a378 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v443 values: a440 a441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v442 v444 
=== Succesors ===
next: v782 
=== Usages ===
a445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v442 v444 #next: v782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v641 
=== Usages ===
j783 j785 
=== Predecessor ===
v443 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-1 - 2147483646]
=== Inputs ===
x: j183 
y: j190 
=== Succesors ===
=== Usages ===
v835 v880 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j190  <|@  <|@
f <@~|@floating>@ <|@
tid j830 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j831 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j831 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-2 - 2147483645]
=== Inputs ===
x: j183 
y: j830 
=== Succesors ===
=== Usages ===
v832 v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j830  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j827 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-4 - 2147483643]
=== Inputs ===
x: j183 
y: j826 
=== Succesors ===
=== Usages ===
v828 v876 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j826  <|@  <|@
f <@~|@floating>@ <|@
tid j820 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j821 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j821 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64 [-8 - 2147483639]
=== Inputs ===
x: j183 
y: j820 
=== Succesors ===
=== Usages ===
v822 v824 v874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j183 y: j820  <|@  <|@
f <@~|@floating>@ <|@
tid j262 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v822 j812 j804 j866 j751 v761 j858 j770 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j262 
=== Succesors ===
=== Usages ===
v699 v644 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j262  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a935 
=== Succesors ===
=== Usages ===
j783 j748 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a935  <|@  <|@
f <@~|@floating>@ <|@
tid j802 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j803 j857 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j788 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j811 j865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j470 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j873 j819 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v639 
falseSuccessor: v640 
=== Usages ===
=== Predecessor ===
v782 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v639 #falseSuccessor: v640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v12|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v12|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v12|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v658 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v658  <|@  <|@
f <@*|@fixed>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v644 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v644  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a445 
index: - 
=== Succesors ===
=== Usages ===
j785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a445 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j785 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v782 
address: v954 
=== Succesors ===
=== Usages ===
v986 v988 v990 v992 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v782 address: v954  <|@  <|@
f <@~|@floating>@ <|@
tid j783 <|@
result v29|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v782 
address: v951 
=== Succesors ===
=== Usages ===
v987 v989 v991 v993 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v782 address: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v642 
falseSuccessor: v643 
=== Usages ===
=== Predecessor ===
v640 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v642 #falseSuccessor: v643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v654 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v654  <|@  <|@
f <@*|@fixed>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
v642 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v645 
=== Usages ===
=== Predecessor ===
v644 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v645  <|@  <|@
f <@*|@fixed>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v646 
=== Predecessor ===
v643 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j812 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v646 
values: j262 j819 
=== Succesors ===
=== Usages ===
v993 j819 v992 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v646 values: j262 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v645 
=== Succesors ===
next: v937 
=== Usages ===
v937 v650 v651 j812 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v645 #next: v937  <|@  <|@
f <@~|@floating>@ <|@
tid v993 <|@
result [v29|QWORD[*] + v30|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j812 
=== Succesors ===
=== Usages ===
v937 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v937 <|@
result v31|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v646 
address: v993 
=== Succesors ===
next: v908 
=== Usages ===
v908 
=== Predecessor ===
v646 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v646 address: v993 #next: v908  <|@  <|@
f <@~|@floating>@ <|@
tid v992 <|@
result [v28|QWORD[.] + v30|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j812 
=== Succesors ===
=== Usages ===
v908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v992 
value: v937 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v653 
=== Usages ===
=== Predecessor ===
v937 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v992 value: v937 stateAfter: - lastLocationAccess: - #next: v653  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j812 
y: j470 
=== Succesors ===
=== Usages ===
j804 j812 v824 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j812 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j819 
=== Succesors ===
=== Usages ===
v653 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v824 
=== Succesors ===
trueSuccessor: v650 
falseSuccessor: v652 
=== Usages ===
=== Predecessor ===
v908 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v824 #trueSuccessor: v650 #falseSuccessor: v652  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_DWORD = H [v29|QWORD[*] + v30|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v30|QWORD * 4], input: v31|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v646 
=== Succesors ===
next: v656 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v646 #next: v656  <|@  <|@
f <@*|@fixed>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
v650 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j804 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v655 
values: j262 j819 
=== Succesors ===
=== Usages ===
v991 j811 j795 v828 v990 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v655 values: j262 j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v654 v656 
=== Succesors ===
next: v674 
=== Usages ===
j804 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v654 v656 #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j804 
=== Succesors ===
=== Usages ===
v674 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j804  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v828 
=== Succesors ===
trueSuccessor: v673 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v828 #trueSuccessor: v673 #falseSuccessor: v672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v677 
=== Usages ===
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v677  <|@  <|@
f <@*|@fixed>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v673 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v938 
=== Usages ===
v938 
=== Predecessor ===
v674 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v938  <|@  <|@
f <@~|@floating>@ <|@
tid v991 <|@
result [v29|QWORD[*] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j804 
=== Succesors ===
=== Usages ===
v938 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v938 <|@
result v34|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v672 
address: v991 
=== Succesors ===
next: v906 
=== Usages ===
v906 
=== Predecessor ===
v672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v672 address: v991 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v990 <|@
result [v28|QWORD[.] + v33|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j804 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v990 
value: v938 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v665 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v990 value: v938 stateAfter: - lastLocationAccess: - #next: v665  <|@  <|@
f <@~|@floating>@ <|@
tid j811 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j804 
y: j788 
=== Succesors ===
=== Usages ===
j795 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j804 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v666 
=== Predecessor ===
v906 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_DWORD = H [v29|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v33|QWORD * 4], input: v34|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v33|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j795 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v666 
values: j811 j804 
=== Succesors ===
=== Usages ===
v989 j803 j786 v832 v988 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v666 values: j811 j804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v665 v677 
=== Succesors ===
next: v680 
=== Usages ===
j795 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v665 v677 #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid v832 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j795 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v832 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v678 
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v832 #trueSuccessor: v679 #falseSuccessor: v678  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v683  <|@  <|@
f <@*|@fixed>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
v939 
=== Predecessor ===
v680 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v989 <|@
result [v29|QWORD[*] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j795 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v939 <|@
result v37|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v678 
address: v989 
=== Succesors ===
next: v904 
=== Usages ===
v904 
=== Predecessor ===
v678 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v678 address: v989 #next: v904  <|@  <|@
f <@~|@floating>@ <|@
tid v988 <|@
result [v28|QWORD[.] + v36|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j795 
=== Succesors ===
=== Usages ===
v904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v988 
value: v939 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v668 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v988 value: v939 stateAfter: - lastLocationAccess: - #next: v668  <|@  <|@
f <@~|@floating>@ <|@
tid j803 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j795 
y: j802 
=== Succesors ===
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j795 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v669 
=== Predecessor ===
v904 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V64_DWORD = H [v29|QWORD[*] + v36|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v36|QWORD * 4], input: v37|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v36|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j786 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v669 
values: j803 j795 
=== Succesors ===
=== Usages ===
v987 v835 v986 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v669 values: j803 j795  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v668 v683 
=== Succesors ===
next: v686 
=== Usages ===
j786 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v668 v683 #next: v686  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j786 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j786  <|@  <|@
f <@*|@fixed>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v685 
falseSuccessor: v684 
=== Usages ===
=== Predecessor ===
v669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v685 #falseSuccessor: v684  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v689 
=== Usages ===
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v689  <|@  <|@
f <@*|@fixed>@ <|@
tid v689 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v685 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i940 
=== Usages ===
i940 
=== Predecessor ===
v686 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i940  <|@  <|@
f <@~|@floating>@ <|@
tid v987 <|@
result [v29|QWORD[*] + v39|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j783 
index: j786 
=== Succesors ===
=== Usages ===
i940 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j783 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i940 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v684 
address: v987 
=== Succesors ===
next: v902 
=== Usages ===
v902 
=== Predecessor ===
v684 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v684 address: v987 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v986 <|@
result [v28|QWORD[.] + v39|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j785 
index: j786 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j785 index: j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v986 
value: i940 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v671 
=== Usages ===
=== Predecessor ===
i940 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v986 value: i940 stateAfter: - lastLocationAccess: - #next: v671  <|@  <|@
f <@*|@fixed>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
v902 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v29|QWORD[*] + v39|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD[.] + v39|QWORD * 4], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v658 v671 v689 
=== Succesors ===
next: a378 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v658 v671 v689 #next: a378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a378 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a445 
=== Succesors ===
next: v747 
=== Usages ===
v952 ?30 ?112 
=== Predecessor ===
v659 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a445 #next: v747  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v595 
=== Usages ===
j748 j750 
=== Predecessor ===
a378 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v595  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a378 
index: - 
=== Succesors ===
=== Usages ===
j839 j750 j767 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a378 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j262 
=== Succesors ===
=== Usages ===
v617 v595 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j262  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v594 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v593 #falseSuccessor: v594  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v596 
=== Usages ===
=== Predecessor ===
v595 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v596  <|@  <|@
f <@~|@floating>@ <|@
tid j750 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v747 
address: v952 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v747 address: v952  <|@  <|@
f <@~|@floating>@ <|@
tid j748 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v747 
address: v951 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v747 address: v951  <|@  <|@
f <@*|@fixed>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
v594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j751 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v597 
values: j262 j760 
=== Succesors ===
=== Usages ===
v983 j760 v982 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v597 values: j262 j760  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v596 
=== Succesors ===
next: i941 
=== Usages ===
i941 v603 v605 j751 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v596 #next: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v983 <|@
result [v42|QWORD[*] + v43|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j748 
index: j751 
=== Succesors ===
=== Usages ===
i941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j748 index: j751  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i941 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v597 
address: v983 
=== Succesors ===
next: v897 
=== Usages ===
i896 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v597 address: v983 #next: v897  <|@  <|@
f <@~|@floating>@ <|@
tid v982 <|@
result [v41|QWORD[.] + v43|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j750 
index: j751 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j750 index: j751  <|@  <|@
f <@~|@floating>@ <|@
tid i896 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i941 
y: i62 
=== Succesors ===
=== Usages ===
v897 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i941 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v982 
value: i896 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v607 
=== Usages ===
=== Predecessor ===
i941 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v982 value: i896 stateAfter: - lastLocationAccess: - #next: v607  <|@  <|@
f <@~|@floating>@ <|@
tid j760 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j751 
y: j415 
=== Succesors ===
=== Usages ===
v763 j751 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j751 y: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j760 
=== Succesors ===
=== Usages ===
v607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j760  <|@  <|@
f <@*|@fixed>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v763 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v606 
=== Usages ===
=== Predecessor ===
v897 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v763 #trueSuccessor: v603 #falseSuccessor: v606  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = ADD (x: v44|DWORD, ~y: [v42|QWORD[*] + v43|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v43|QWORD * 8], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = INC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v597 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v597 #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v602 
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v602 #next: v932  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result Object[Fusing$$Lambda$26/141412972@464551379] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$26/141412972@464551379
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$26/141412972;
stampKind: a -
value: Object[Fusing$$Lambda$26/141412972@464551379]
=== Inputs ===
=== Succesors ===
=== Usages ===
?30 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i373 <|@
result int[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i32 [-2] ⇊00000000fffffffe ⇈00000000fffffffe
stampKind: i32
value: int[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i374 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$109/630556122@1cb7a745
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i186 
y: i373 
=== Succesors ===
=== Usages ===
?30 ?77 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i186 y: i373  <|@  <|@
tid ?30 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?52 
values: a933 a7 a378 i374 
=== Succesors ===
=== Usages ===
a502 v258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a933 a7 a378 i374  <|@  <|@
f <@~|@floating>@ <|@
tid j201 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [-9223372036854775808 - 9223372036854775806] ⇈fffffffffffffffe
=== Inputs ===
guard: v245 
object: j220 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@GuardedValue|@org.graalvm.compiler.nodes.GuardedValueNode>@ guard: v245 object: j220  <|@  <|@
f <@~|@floating>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j201 
y: j183 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j201 y: j183  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v202 
=== Succesors ===
trueSuccessor: v928 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v202 #trueSuccessor: v928 #falseSuccessor: v931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v7|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v926 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v926  <|@  <|@
f <@*|@fixed>@ <|@
tid v926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v928 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v930 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v930  <|@  <|@
f <@*|@fixed>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v929 
falseSuccessor: v259 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v929 #falseSuccessor: v259  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v927 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v927  <|@  <|@
f <@*|@fixed>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v925 
=== Predecessor ===
v929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v926 v927 
=== Succesors ===
next: j482 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v926 v927 #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j518 
=== Usages ===
v965 v966 
=== Predecessor ===
v925 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
j518 v520 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j518 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
=== Succesors ===
next: j519 
=== Usages ===
j486 v967 v968 a501 v973 v969 v970 v971 v972 
=== Predecessor ===
j482 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v965 #next: j519  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
j519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j519 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
=== Succesors ===
next: v490 
=== Usages ===
v491 
=== Predecessor ===
j518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v966 #next: v490  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
j519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v489 #falseSuccessor: v488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid j486 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j423 
y: j518 
=== Succesors ===
=== Usages ===
v491 v520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j423 y: j518  <|@  <|@
f <@~|@floating>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j519 
y: j486 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j519 y: j486  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v491 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v491 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = ADD (x: v48|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v965 
value: j486 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v511 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v965 value: j486 stateAfter: - lastLocationAccess: - #next: v511  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v18|QWORD + v48|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v969 
=== Succesors ===
next: v513 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v969 #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v18|QWORD + v48|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v970 
=== Succesors ===
next: v515 
=== Usages ===
=== Predecessor ===
v511 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v970 #next: v515  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v18|QWORD + v48|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v971 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v971 #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v18|QWORD + v48|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j423 
index: j518 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j423 index: j518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v972 
=== Succesors ===
next: v521 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v972 #next: v521  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v48|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v521 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v967 
value: i936 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v967 value: i936 stateAfter: - lastLocationAccess: - #next: v522  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v48|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: j415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: j415 stateAfter: - lastLocationAccess: - #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v48|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j518 
index: - 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v973 
value: v580 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v522 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v973 value: v580 stateAfter: - lastLocationAccess: - #next: v500  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: a501 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a501 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j518 
=== Succesors ===
next: v503 
=== Usages ===
a506 
=== Predecessor ===
v500 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j518 #next: v503  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
a501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v492 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v492  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
v488 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v492 v494 
=== Succesors ===
next: a502 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v492 v494 #next: a502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a502 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?30 
arguments: v414 i936 i24 
=== Succesors ===
next: v505 
=== Usages ===
a506 
=== Predecessor ===
v493 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?30 arguments: v414 i936 i24 #next: v505  <|@  <|@
f <@*|@fixed>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
a502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] v23|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a506 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v504 
values: a501 a502 
=== Succesors ===
=== Usages ===
v955 a382 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v504 values: a501 a502  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v503 v505 
=== Succesors ===
next: v838 
=== Usages ===
a506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v503 v505 #next: v838  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v696 
=== Usages ===
j839 j841 
=== Predecessor ===
v504 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v221 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v221 #trueSuccessor: v694 #falseSuccessor: v695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v699 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v699  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v53|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a506 
index: - 
=== Succesors ===
=== Usages ===
j841 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a506 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v838 
address: v955 
=== Succesors ===
=== Usages ===
v994 v996 v998 v1000 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v838 address: v955  <|@  <|@
f <@~|@floating>@ <|@
tid j839 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v838 
address: v952 
=== Succesors ===
=== Usages ===
v995 v997 v999 v1001 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v838 address: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v822 
=== Succesors ===
trueSuccessor: v697 
falseSuccessor: v698 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v822 #trueSuccessor: v697 #falseSuccessor: v698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v53|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v697 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v699 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v701 
=== Predecessor ===
v698 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j866 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v701 
values: j262 j873 
=== Succesors ===
=== Usages ===
v1001 j873 v1000 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v701 values: j262 j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v701 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v700 
=== Succesors ===
next: v942 
=== Usages ===
v942 v704 v705 j866 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v700 #next: v942  <|@  <|@
f <@~|@floating>@ <|@
tid v1001 <|@
result [v55|QWORD[.] + v56|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j866 
=== Succesors ===
=== Usages ===
v942 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v942 <|@
result v57|V256_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32,i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v701 
address: v1001 
=== Succesors ===
next: v916 
=== Usages ===
v916 
=== Predecessor ===
v701 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v701 address: v1001 #next: v916  <|@  <|@
f <@~|@floating>@ <|@
tid v1000 <|@
result [v54|QWORD[.] + v56|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j866 
=== Succesors ===
=== Usages ===
v916 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v1000 
value: v942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v707 
=== Usages ===
=== Predecessor ===
v942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1000 value: v942 stateAfter: - lastLocationAccess: - #next: v707  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j866 
y: j470 
=== Succesors ===
=== Usages ===
j858 j866 v874 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j866 y: j470  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j821 
y: j873 
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j821 y: j873  <|@  <|@
f <@*|@fixed>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v874 
=== Succesors ===
trueSuccessor: v704 
falseSuccessor: v706 
=== Usages ===
=== Predecessor ===
v916 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v874 #trueSuccessor: v704 #falseSuccessor: v706  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_DWORD = H [v55|QWORD[.] + v56|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v56|QWORD * 4], input: v57|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v701 
=== Succesors ===
next: v710 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v701 #next: v710  <|@  <|@
f <@*|@fixed>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j858 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j262 j873 
=== Succesors ===
=== Usages ===
v999 j865 j850 v876 v998 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j262 j873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v710 
=== Succesors ===
next: v728 
=== Usages ===
j858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v710 #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j827 
y: j858 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j827 y: j858  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v727 
falseSuccessor: v726 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v727 #falseSuccessor: v726  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v731 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v731  <|@  <|@
f <@*|@fixed>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v943 
=== Usages ===
v943 
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v943  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result [v55|QWORD[.] + v59|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j858 
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
result v60|V128_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32,i32,i32>
=== Inputs ===
stateBefore: - 
guard: v726 
address: v999 
=== Succesors ===
next: v914 
=== Usages ===
v914 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v726 address: v999 #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v998 <|@
result [v54|QWORD[.] + v59|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j858 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v998 
value: v943 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v998 value: v943 stateAfter: - lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j858 
y: j788 
=== Succesors ===
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j858 y: j788  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
v914 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_DWORD = H [v55|QWORD[.] + v59|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v59|QWORD * 4], input: v60|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j850 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v720 
values: j865 j858 
=== Succesors ===
=== Usages ===
v997 j857 j842 v878 v996 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v720 values: j865 j858  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v719 v731 
=== Succesors ===
next: v734 
=== Usages ===
j850 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v719 v731 #next: v734  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j831 
y: j850 
=== Succesors ===
=== Usages ===
v734 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j831 y: j850  <|@  <|@
f <@*|@fixed>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v733 
falseSuccessor: v732 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v733 #falseSuccessor: v732  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v737 
=== Usages ===
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v737  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v733 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v944 
=== Usages ===
v944 
=== Predecessor ===
v734 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v944  <|@  <|@
f <@~|@floating>@ <|@
tid v997 <|@
result [v55|QWORD[.] + v62|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j850 
=== Succesors ===
=== Usages ===
v944 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v944 <|@
result v63|V64_DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: <i32,i32>
=== Inputs ===
stateBefore: - 
guard: v732 
address: v997 
=== Succesors ===
next: v912 
=== Usages ===
v912 
=== Predecessor ===
v732 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v732 address: v997 #next: v912  <|@  <|@
f <@~|@floating>@ <|@
tid v996 <|@
result [v54|QWORD[.] + v62|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j850 
=== Succesors ===
=== Usages ===
v912 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v996 
value: v944 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v722 
=== Usages ===
=== Predecessor ===
v944 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v996 value: v944 stateAfter: - lastLocationAccess: - #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j850 
y: j802 
=== Succesors ===
=== Usages ===
j842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j850 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v912 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_DWORD = H [v55|QWORD[.] + v62|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v62|QWORD * 4], input: v63|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v62|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j842 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v723 
values: j857 j850 
=== Succesors ===
=== Usages ===
v995 v880 v994 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v723 values: j857 j850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v722 v737 
=== Succesors ===
next: v740 
=== Usages ===
j842 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v722 v737 #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j842 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j842  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v739 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v739 #falseSuccessor: v738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v743 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i945 
=== Usages ===
i945 
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i945  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result [v55|QWORD[.] + v65|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j839 
index: j842 
=== Succesors ===
=== Usages ===
i945 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j839 index: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i945 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v738 
address: v995 
=== Succesors ===
next: v910 
=== Usages ===
v910 
=== Predecessor ===
v738 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v738 address: v995 #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v994 <|@
result [v54|QWORD[.] + v65|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j841 
index: j842 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j841 index: j842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v994 
value: i945 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v725 
=== Usages ===
=== Predecessor ===
i945 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v994 value: i945 stateAfter: - lastLocationAccess: - #next: v725  <|@  <|@
f <@*|@fixed>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v713 
=== Predecessor ===
v910 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v55|QWORD[.] + v65|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + v65|QWORD * 4], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v712 v725 v743 
=== Succesors ===
next: a382 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v712 v725 v743 #next: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a382 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a506 
=== Succesors ===
next: v766 
=== Usages ===
a267 ?77 v953 
=== Predecessor ===
v713 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a506 #next: v766  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v617 
=== Usages ===
j767 j769 
=== Predecessor ===
a382 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v617  <|@  <|@
f <@*|@fixed>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v761 
=== Succesors ===
trueSuccessor: v615 
falseSuccessor: v616 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v761 #trueSuccessor: v615 #falseSuccessor: v616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v622  <|@  <|@
f <@*|@fixed>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [v53|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a382 
index: - 
=== Succesors ===
=== Usages ===
j769 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a382 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j769 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v766 
address: v953 
=== Succesors ===
=== Usages ===
v984 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v766 address: v953  <|@  <|@
f <@~|@floating>@ <|@
tid j767 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v766 
address: v952 
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v766 address: v952  <|@  <|@
f <@*|@fixed>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
v616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v53|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j770 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v619 
values: j262 j778 
=== Succesors ===
=== Usages ===
v985 j778 v984 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v619 values: j262 j778  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v618 
=== Succesors ===
next: i946 
=== Usages ===
i946 v625 v627 j770 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v618 #next: i946  <|@  <|@
f <@~|@floating>@ <|@
tid v985 <|@
result [v68|QWORD[.] + v69|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j767 
index: j770 
=== Succesors ===
=== Usages ===
i946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j767 index: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i946 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: int
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v619 
address: v985 
=== Succesors ===
next: v900 
=== Usages ===
i899 
=== Predecessor ===
v619 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v619 address: v985 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v984 <|@
result [v67|QWORD[.] + v69|QWORD * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times8
stamp: void*
=== Inputs ===
base: j769 
index: j770 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j769 index: j770  <|@  <|@
f <@~|@floating>@ <|@
tid i899 <|@
result v71|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i32
=== Inputs ===
x: i946 
y: i62 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i946 y: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v984 
value: i899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v629 
=== Usages ===
=== Predecessor ===
i946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v984 value: i899 stateAfter: - lastLocationAccess: - #next: v629  <|@  <|@
f <@~|@floating>@ <|@
tid j778 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j770 
y: j415 
=== Succesors ===
=== Usages ===
v779 j770 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j770 y: j415  <|@  <|@
f <@~|@floating>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@58567179
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j191 
y: j778 
=== Succesors ===
=== Usages ===
v629 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j191 y: j778  <|@  <|@
f <@*|@fixed>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v779 
=== Succesors ===
trueSuccessor: v625 
falseSuccessor: v628 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v779 #trueSuccessor: v625 #falseSuccessor: v628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = ADD (x: v70|DWORD, ~y: [v68|QWORD[.] + v69|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v69|QWORD * 8], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = INC v69|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v619 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v619 #next: v624  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v623 
=== Predecessor ===
v625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v622 v624 
=== Succesors ===
next: j535 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v622 v624 #next: j535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j535 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j551 
=== Usages ===
v974 v975 
=== Predecessor ===
v623 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j551  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j535 
index: - 
=== Succesors ===
=== Usages ===
j551 v553 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j551 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
=== Succesors ===
next: j552 
=== Usages ===
j582 j557 v979 
=== Predecessor ===
j535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v974 #next: j552  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j535 
index: - 
=== Succesors ===
=== Usages ===
j552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j535 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v975 
=== Succesors ===
next: v543 
=== Usages ===
v540 
=== Predecessor ===
j551 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v975 #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid j581 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j582 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$16/1700758012@4053db1b
stamp: i64
=== Inputs ===
x: j551 
y: j581 
=== Succesors ===
=== Usages ===
v540 v553 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j551 y: j581  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@359df7ed
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j552 
y: j582 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j552 y: j582  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@40666468 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v541 
falseSuccessor: v542 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v541 #falseSuccessor: v542  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v73|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a547 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a547  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<Fusing.notFused()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 148
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid a66 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@600c5fb9
hasIdentity: true
objectId: -1
stamp: a!# Lbench/Fusing$List;
type: HotSpotType<Lbench/Fusing$List;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?112 ?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a13 <|@
result Object[Fusing$$Lambda$27/652525947@1242188746] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: Fusing$$Lambda$27/652525947@1242188746
stableDimension: 0
stamp: a!# Lbench/Fusing$$Lambda$27/652525947;
stampKind: a -
value: Object[Fusing$$Lambda$27/652525947@1242188746]
=== Inputs ===
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?112 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a66 
values: a378 a934 
=== Succesors ===
=== Usages ===
?77 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a66 values: a378 a934  <|@  <|@
tid ?77 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Fusing$List.map(Function1)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Bench.scala
sourceLine: 126
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: a66 a13 a382 i374 
virtualObjectMappings: ?112 
=== Succesors ===
=== Usages ===
a547 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: a66 a13 a382 i374 virtualObjectMappings: ?112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a547 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@18f00305
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?77 
arguments: v414 i416 i62 
=== Succesors ===
next: j548 
=== Usages ===
j548 
=== Predecessor ===
v541 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?77 arguments: v414 i416 i62 #next: j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j548 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a547 
=== Succesors ===
next: v558 
=== Usages ===
j557 
=== Predecessor ===
a547 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a547 #next: v558  <|@  <|@
f <@*|@fixed>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
j548 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v19|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=v23|QWORD[.],$outer=v2|DWORD[.]} Object[Fusing$$Lambda$27/652525947@1242188746] v53|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 17]
locals: - 
vobject:Fusing$List:0{a=v23|QWORD[.],$outer=v2|DWORD[.]} Lbench/Fusing$List; v23|QWORD[.] v2|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v553 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: j582 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v550 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: j582 stateAfter: - lastLocationAccess: - #next: v550  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v73|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j551 
index: - 
=== Succesors ===
=== Usages ===
v550 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j551 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v979 
=== Succesors ===
next: v556 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v979 #next: v556  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v555 
=== Predecessor ===
v550 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v73|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j557 <|@
result v76|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v555 
values: j551 j548 
=== Succesors ===
=== Usages ===
v978 v977 a264 v980 v981 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v555 values: j551 j548  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v556 v558 
=== Succesors ===
next: a264 
=== Usages ===
j557 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v556 v558 #next: a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j557 
=== Succesors ===
next: j569 
=== Usages ===
a271 
=== Predecessor ===
v555 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j557 #next: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v563 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v78|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j564 
index: - 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j564 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
=== Succesors ===
next: v570 
=== Usages ===
v570 
=== Predecessor ===
a264 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v976 #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v76|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: j569 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v573 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: j569 stateAfter: - lastLocationAccess: - #next: v573  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v76|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v586 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v577 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v586 stateAfter: - lastLocationAccess: - #next: v577  <|@  <|@
f <@~|@floating>@ <|@
tid v980 <|@
result [v76|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a382 
=== Succesors ===
=== Usages ===
v577 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v980 
value: a267 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
v573 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v980 value: a267 stateAfter: - lastLocationAccess: - #next: v579  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v76|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j557 
index: - 
=== Succesors ===
=== Usages ===
v579 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j557 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: a934 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a271 
=== Usages ===
=== Predecessor ===
v577 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: a934 stateAfter: - lastLocationAccess: - #next: a271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a271 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a264 
=== Succesors ===
next: v272 
=== Usages ===
v17 
=== Predecessor ===
v579 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a264 #next: v272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
a271 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a271 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a271 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v76|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [v78|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*]], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v76|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 12], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 16], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v627 
=== Usages ===
=== Predecessor ===
v629 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v627  <|@  <|@
f <@*|@fixed>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v619 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v619  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v705  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v701 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v701  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 154
reason: BoundsCheckException
speculation: Object[d.a@347430673]
stamp: void
=== Inputs ===
stateBefore: ?30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -39451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] v23|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 9] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v605 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v605  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v597 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v606 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v597  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v651 
=== Usages ===
=== Predecessor ===
v653 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v651  <|@  <|@
f <@*|@fixed>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v646 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v652 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@~|@floating>@ <|@
tid a413 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@347430673
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/k/d$a;
stampKind: a -
value: Object[d.a@347430673]
=== Inputs ===
=== Succesors ===
=== Usages ===
a399 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i412 <|@
result int[-34331|0xffffffffffff79e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -34331
stableDimension: 0
stamp: i32 [-34331] ⇊00000000ffff79e5 ⇈00000000ffff79e5
stampKind: i32
value: int[-34331|0xffffffffffff79e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i398 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
v255 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34331|0xffffffffffff79e5], v82|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i398 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-46468 - -31243] ⇊00000000ffff0064 ⇈00000000fffffffd
valueDescription: i32
=== Inputs ===
merge: v394 
values: i402 i407 i412 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v394 values: i402 i407 i412  <|@  <|@
f <@~|@floating>@ <|@
tid a399 <|@
result v84|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/k/d$a;
valueDescription: a -
=== Inputs ===
merge: v394 
values: a403 a408 a413 
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v394 values: a403 a408 a413  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v406 v411 
=== Succesors ===
next: v400 
=== Usages ===
i398 a399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v406 v411 #next: v400  <|@  <|@
f <@*|@fixed>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i398 
speculation: a399 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i398 speculation: a399  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[.] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD[.] = MOV [v1|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD[.], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v1|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = INC v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = DEC v9|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = SHL v10|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOV v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SHL v5|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = LEA [v15|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = AND v16|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = ADD (x: v18|QWORD, y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v20|QWORD, y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = DEC v12|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v12|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = LEA [v12|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA [v12|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v33|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|V128_DWORD = H [v29|QWORD[*] + v33|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v33|QWORD * 4], input: v34|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v33|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v35|QWORD] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v36|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|V64_DWORD = H [v29|QWORD[*] + v36|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v36|QWORD * 4], input: v37|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v36|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v39|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = MOV [v29|QWORD[*] + v39|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD[.] + v39|QWORD * 4], y: v40|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = LEA [v4|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|QWORD] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v43|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = ADD (x: v44|DWORD, ~y: [v42|QWORD[*] + v43|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v41|QWORD[.] + v43|QWORD * 8], y: v45|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = INC v43|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v46|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = AND v7|DWORD y: -2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|QWORD, y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v5|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = ADD (x: v48|QWORD, y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v50|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + v48|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v51|QWORD[.]] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v5|DWORD, y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD[.] = LEA [v53|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v27|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v59|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|V128_DWORD = H [v55|QWORD[.] + v59|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v59|QWORD * 4], input: v60|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v59|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v62|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|V64_DWORD = H [v55|QWORD[.] + v62|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v62|QWORD * 4], input: v63|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v62|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v64|QWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v65|QWORD, y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOV [v55|QWORD[.] + v65|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + v65|QWORD * 4], y: v66|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = LEA [v53|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = LEA [v23|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v72|QWORD] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = ADD (x: v70|DWORD, ~y: [v68|QWORD[.] + v69|QWORD * 8]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v67|QWORD[.] + v69|QWORD * 8], y: v71|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = INC v69|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|QWORD, y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v73|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v74|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v74|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v73|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v73|QWORD] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v76|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v76|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [v78|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*]], y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v76|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = COMPRESSPOINTER (input: v53|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 12], y: v80|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v76|QWORD[*] + 16], y: v2|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v77|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v59|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|V256_DWORD = H [v29|QWORD[*] + v30|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v28|QWORD[.] + v30|QWORD * 4], input: v31|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v30|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v32|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|V256_DWORD = H [v55|QWORD[.] + v56|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v54|QWORD[.] + v56|QWORD * 4], input: v57|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|QWORD, y: v27|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v32|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v33|QWORD] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v87|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v86|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] v23|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v85|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=v23|QWORD[.],$outer=v2|DWORD[.]} Object[Fusing$$Lambda$27/652525947@1242188746] v53|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 17]
locals: - 
vobject:Fusing$List:0{a=v23|QWORD[.],$outer=v2|DWORD[.]} Lbench/Fusing$List; v23|QWORD[.] v2|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD[.]] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-38931|0xffffffffffff67ed], v3|QWORD[.]] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|DWORD, v84|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v83|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v84|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-34331|0xffffffffffff79e5], v82|QWORD[.]] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-46468|0xffffffffffff4a7c], v6|QWORD[.]] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -39451 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: v1|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] v23|QWORD[.] v47|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 9] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-17        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: invokedynamic #-18        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
    17: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0, stack:84]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B5" "B7" 
    successors "B9" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   94  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  140  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  142  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r14|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r10|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  210  <|@ instruction r11|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  242  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B22 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  280  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B25 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  300  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  302  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B33" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B73 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B73" 
    successors "B34" "B73" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  352  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction r9|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B34 falseDestination: B33 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction r9|DWORD = AND rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: r14|QWORD, y: stack:64|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B36 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B43" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  398  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = ADD (x: rdx|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B41 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rbp|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r8|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  514  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B48 falseDestination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  580  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B56" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  604  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B46" "B60" "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B64" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4612248968380809216
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B70 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B70" 
    successors "B65" "B70" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  632  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B66" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B62" "B65" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  650  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  652  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  684  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  694  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  700  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 4598175219545276416
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  616  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction JUMP ~[] destination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  246  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  248  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B19" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  738  <|@ instruction JUMP ~[] destination: B74 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B74" 
    successors "B20" "B74" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  252  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  254  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  258  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B50" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4600427019358961664
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B71 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B71" 
    successors "B51" "B71" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  532  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  534  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B51 falseDestination: B50 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B10" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  190  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r14|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:72, stack:84]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [r14:0, stack:36, stack:84]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:76|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] r14|QWORD[.] stack:72|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  666  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:84]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]} Object[Fusing$$Lambda$27/652525947@1242188746] r13|QWORD[.] stack:72|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 17]
locals: - 
vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]} Lbench/Fusing$List; r14|QWORD[.] stack:28|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17] <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  672  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B44" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction JUMP ~[] destination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B13" 
    xhandlers
    flags 
    probability 4576341768551784256
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  124  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  126  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  128  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B10 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808] <|@ <|@
      nr   24  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr   28  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr  746  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-34331|0xffffffffffff79e5] <|@ <|@
      nr  750  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077] <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE input: int[-46468|0xffffffffffff4a7c] <|@ <|@
      nr   52  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -39451 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: r10|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] r14|QWORD[.] r9|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 9] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-17        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: invokedynamic #-18        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
    17: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [r13:0, r14:0]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr   16  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [r11:0, r13:0, r14:0, stack:84]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction CMP r8|DWORD y: 2147483647 size: DWORD <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B6" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r9|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rsi|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr   62  <|@ instruction rsi|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr   66  <|@ instruction stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   68  <|@ instruction rbx|QWORD = SHL rsi|QWORD size: QWORD <|@ <|@
      nr   70  <|@ instruction rdi|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr   72  <|@ instruction CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" "B75" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B9" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   94  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   96  <|@ instruction rax|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr   98  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  102  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  104  <|@ instruction CMP r8|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B13" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  138  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  140  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  142  <|@ instruction AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  148  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  150  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  160  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction r14|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B11 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = DEC r14|QWORD size: QWORD <|@ <|@
      nr  208  <|@ instruction r10|QWORD = LEA [r14|QWORD - 2] size: QWORD <|@ <|@
      nr  210  <|@ instruction r11|QWORD = LEA [r14|QWORD - 4] size: QWORD <|@ <|@
      nr  212  <|@ instruction r8|QWORD = LEA [r14|QWORD - 8] size: QWORD <|@ <|@
      nr  214  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  216  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B21" "B19" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  232  <|@ instruction rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  236  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B24" "B23" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  268  <|@ instruction CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr  270  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  280  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" "B21" 
    successors "B27" "B26" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  288  <|@ instruction CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  300  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  302  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B24" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  308  <|@ instruction CMP (x: rcx|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  322  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  324  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B15" "B29" "B28" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" "B33" 
    successors "B35" "B33" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  352  <|@ instruction rbx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  354  <|@ instruction rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD <|@ <|@
      nr  356  <|@ instruction MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  358  <|@ instruction r9|QWORD = INC r9|QWORD size: QWORD <|@ <|@
      nr  360  <|@ instruction CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  362  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" 
    successors "B39" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction r9|DWORD = AND rcx|DWORD y: -2 size: DWORD <|@ <|@
      nr  374  <|@ instruction CMP (x: r14|QWORD, y: stack:64|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B39" "B72" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B40" "B44" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  396  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  398  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  400  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" "B42" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rbx|QWORD = ADD (x: rdx|QWORD, y: stack:56|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  408  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606200634081250640
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction rbp|QWORD = MOVE stack:56|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  432  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  434  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  436  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  438  <|@ instruction AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  440  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  442  <|@ instruction MOV [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  444  <|@ instruction MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  446  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ instruction stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B42 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B42" "B44" 
    successors "B61" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  496  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr  498  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B52" "B50" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction r8|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  512  <|@ instruction rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  514  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  520  <|@ instruction rcx|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  516  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B55" "B54" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  548  <|@ instruction CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD <|@ <|@
      nr  550  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  560  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  562  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" 
    successors "B58" "B57" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  568  <|@ instruction CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  580  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  582  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B55" 
    successors "B61" "B60" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  588  <|@ instruction CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4600427019358961664
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ instruction rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD <|@ <|@
      nr  602  <|@ instruction MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B45" "B60" "B58" 
    successors "B66" "B63" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  610  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" 
    xhandlers
    flags 
    probability 4604930618986332160
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  622  <|@ instruction rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  624  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B64" 
    successors "B66" "B64" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4613937818241073152
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  632  <|@ instruction r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction r10|QWORD = INC r10|QWORD size: QWORD <|@ <|@
      nr  638  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  640  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B61" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  648  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  650  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  652  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  654  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  680  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  682  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B67" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  684  <|@ instruction r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>} <|@ <|@
      nr  694  <|@ instruction rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD <|@ <|@
      nr  696  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  698  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed} <|@ <|@
      nr  700  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3 <|@ <|@
      nr  702  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr  704  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr  706  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B30" 
    xhandlers
    flags 
    probability 4602678819172646912
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD <|@ <|@
      nr  224  <|@ instruction JUMP ~[] destination: B15 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4593671619917905920
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" 
    successors "B21" "B19" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  252  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  254  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  256  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  258  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  260  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" 
    successors "B52" "B50" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4602678819172646912
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  532  <|@ instruction xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  534  <|@ instruction J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  536  <|@ instruction rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  538  <|@ instruction CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr  540  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B14" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  176  <|@ instruction stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  188  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  190  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  194  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  196  <|@ instruction r13|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction r14|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:72, stack:84]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4592518698413299072
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  470  <|@ instruction stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  476  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  484  <|@ instruction rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  490  <|@ st <@st|@reference-map: [r14:0, stack:36, stack:84]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: stack:76|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] r14|QWORD[.] stack:72|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9] <|@ <|@
      nr  492  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  656  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  658  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  662  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  666  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:84]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]} Object[Fusing$$Lambda$27/652525947@1242188746] r13|QWORD[.] stack:72|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 17]
locals: - 
vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]} Lbench/Fusing$List; r14|QWORD[.] stack:28|DWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17] <|@ <|@
      nr  668  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  670  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808] <|@ <|@
      nr   24  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed] <|@ <|@
      nr   30  <|@ instruction JUMP ~[] destination: B1 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B75" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   28  <|@ instruction r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  758  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  760  <|@ st <@st|@reference-map: [r13:0]
live-base-pointers: []
bench.Fusing.notFused(Bench.scala:148) [bci: 0]
locals: r13|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  740  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  742  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  744  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr  746  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|DWORD = MOVE input: int[-34331|0xffffffffffff79e5] <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B76" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077] <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE input: int[-46468|0xffffffffffff4a7c] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  724  <|@ instruction r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673] <|@ <|@
      nr  726  <|@ instruction MOV [r15|QWORD + 668] y: -39451 size: DWORD <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD <|@ <|@
      nr  730  <|@ st <@st|@reference-map: [r10:0, r14:0]
live-base-pointers: []
bench.Fusing$List.map(Bench.scala:126) [bci: 15]
locals: r10|DWORD[.] Object[Fusing$$Lambda$26/141412972@464551379] r14|QWORD[.] r9|DWORD 
bench.Fusing.notFused(Bench.scala:148) [bci: 9]
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 9] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // l:()bench.Fusing$List
     4: invokedynamic #-17        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
     9: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    12: invokedynamic #-18        // java.lang.invoke.LambdaForm$MH.1149319664.linkToTargetMethod:(java.lang.Object)java.lang.Object
    17: invokevirtual #6          // bench.Fusing$List.map:(scala.Function1)bench.Fusing$List
    20: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bee458b7510468b14f51000000044895424544585d20f8432040000468b1cf50c000000468b04dd0c0000004181f8ffffff7f0f8460040000458bc841ffc1418bf1d1ee8bf648ffce4889742440488bde48d1e3418bf8483bfb0f87090000004585c00f8516040000498b5760498b4f70418bc0c1e0028d401783e0f84863c04181f8ffffff000f831a030000488be84803ea483be90f870b03000049896f600f188410c00000000f188410000100000f188410400100000f188410800100004489420c48c70201000000c74208addeadde488944243848895c243044894c242c458be844895c24284489742424488bc24c8bf7498bfe48ffcf4d8d56fe4d8d5efc4d8d46f84585ed0f8447020000448b4c2428488d70104a8d14cd100000004d85c048c7c1000000000f8d3f020000493bcb0f8f0e000000c5fa6f048ac5fa7f048e488d4904493bca0f8f10000000c4e1f96e048ac4e1f97e048e488d4902483bcf0f8ffc0100008b148a89148e488b7424404885f60f8c37000000488d50104a8d0ccd1000000049c7c1000000000f1f8400000000000f1f8000000000bb0100000042031cc942891cca49ffc14c3bce7eeb8b4c242c448bc94183e1fe4c3b7424300f87090000004585ed0f85e0020000498b5760498b4f704181fdffffff000f8303020000488bda48035c2438483bd90f87f2010000488b6c243849895f600f188415c00000000f188415000100000f188415400100000f1884158001000044896a0c48c70201000000c74208addeadde44894c24284c894424184c895c24104c8954240848893c244c8bf0488bc24585ed0f84610000004c8b442418488d7010498d56104d85c048c7c1000000000f8d17010000483b4c24100f8f0e000000c5fa6f048ac5fa7f048e488d4904483b4c24080f8f10000000c4e1f96e048ac4e1f97e048e488d4902483b0c240f8f060000008b148a89148e488b7424404885f60f8c2b000000488d5010498d4e1049c7c200000000660f1f44000041bb0100000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f871f010000498957600f1886d8000000448b542454488bd648b9addeaddeaddeadde488b89a800000048890ec74608addeadde48c1e80389460c44895610488bc2488b6c24604883c468850500000000c5f877c3488b742440448b4c2428e90ffeffff488b742440e905feffffc5fe6f048ac5fe7f048e488d4908493bc87eede9a9fdffff0f1f840000000000c5fe6f048ac5fe7f048e488d4908493bc87eede9d1feffff488944243848895c243044894c242c44895c242844897424244c896c244848baaddeaddeaddeadde488bf2418bd0b900000000458be84c8bf7e80000000090e909fdffff44894c24284c894424184c895c24104c8954240848893c244c8bf048baaddeaddeaddeadde488bf2418bd5b900000000e80000000090e92cfeffff4c8be848beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc5e9c4feffff4c896c244849baaddeaddeaddeadde4d8bda41baed67ffff4c8b6c24484589979c0200004d899fa8020000e800000000904c896c244849baaddeaddeaddeadde4d8bda41bae579ffffebcd4c896c244849baaddeaddeaddeadde4d8bda41ba7c4affffebb34c8bf0448b54242449bbaddeaddeaddeadde41c7879c020000e565ffff4d899fa8020000e80000000090e80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10d1a8f78, value=0x118f87e60]:0x118f87e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 34 r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 85 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [r11:0, r13:0, r14:0, stack:84]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 CMP r8|DWORD y: 2147483647 size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 106 block B4 null  <||@
  Comment 106 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 58 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 112 60 rsi|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 117 62 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 119 64 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 122 66 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 127 68 rbx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 133 70 rdi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 136 72 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 139 74 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 145 block B6 null  <||@
  Comment 145 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 82 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 148 84 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75  <||@
  Comment 154 block B8 null  <||@
  Comment 154 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 92 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 158 94 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 162 96 rax|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 168 98 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 171 100 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 174 102 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 177 104 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 184 106 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 190 block B9 null  <||@
  Comment 190 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 110 rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 196 112 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 199 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 205 block B11 null  <||@
  Comment 205 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 134 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 209 136 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 217 138 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 225 140 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 233 142 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 241 144 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 245 146 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 252 148 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 252 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 259 150 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 259 152 stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 264 154 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 269 156 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 274 158 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 277 160 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 282 162 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 287 164 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 290 166 r14|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 293 168 JUMP ~[] destination: B11 -> B14  <||@
  Comment 293 block B14 null  <||@
  Comment 293 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 293 206 rdi|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 299 208 r10|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 303 210 r11|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 307 212 r8|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 311 214 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 314 216 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 320 block B16 null  <||@
  Comment 320 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 228 r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 325 230 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 329 232 rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 337 234 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 340 240 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 347 236 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 353 block B21 null  <||@
  Comment 353 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 353 268 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 356 270 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 362 block B23 null  <||@
  Comment 362 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 278 xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 367 280 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 372 282 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 376 284 JUMP ~[] destination: B23 -> B24  <||@
  Comment 376 block B24 null  <||@
  Comment 376 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 288 CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 379 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 385 block B26 null  <||@
  Comment 385 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 298 xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 391 300 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 397 302 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 401 304 JUMP ~[] destination: B26 -> B27  <||@
  Comment 401 block B27 null  <||@
  Comment 401 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 401 308 CMP (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 404 310 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 410 block B29 null  <||@
  Comment 410 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 320 rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 413 322 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 416 324 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 421 326 JUMP ~[] destination: B29 -> B30  <||@
  Comment 421 block B30 null  <||@
  Comment 421 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 330 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 424 332 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 430 block B32 null  <||@
  Comment 430 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 342 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 434 344 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 442 346 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 449 348 JUMP ~[] destination: B32 -> B33  <||@
  Comment 449 block B33 loop 1 depth 1 header:597|LoopBegin  <||@
  Comment 449 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 352 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 469 354 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD  <||@
  Comment 473 356 MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rbx|DWORD) size: DWORD  <||@
  Comment 477 358 r9|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 480 360 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 483 362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 485 block B35 null  <||@
  Comment 485 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 336 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 489 372 r9|DWORD = AND rcx|DWORD y: -2 size: DWORD  <||@
  Comment 496 374 CMP (x: r14|QWORD, y: stack:64|QWORD) size: QWORD  <||@
  Comment 501 376 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37  <||@
  Comment 507 block B37 null  <||@
  Comment 507 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 384 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 510 386 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72  <||@
  Comment 516 block B39 null  <||@
  Comment 516 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 394 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 520 396 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 524 398 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 531 400 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 537 block B40 null  <||@
  Comment 537 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 404 rbx|QWORD = ADD (x: rdx|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 545 406 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 548 408 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 554 block B42 null  <||@
  Comment 554 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 428 rbp|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 559 430 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 563 432 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 571 434 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 579 436 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 587 438 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 595 440 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 599 442 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 606 444 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 606 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 613 446 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 613 448 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 618 450 stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 623 452 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 628 454 stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 633 456 stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 637 458 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 640 460 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 643 462 JUMP ~[] destination: B42 -> B45  <||@
  Comment 643 block B45 null  <||@
  Comment 643 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 643 496 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 646 498 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47  <||@
  Comment 652 block B47 null  <||@
  Comment 652 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 508 r8|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 657 510 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 661 512 rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 665 514 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 668 520 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 675 516 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50  <||@
  Comment 681 block B52 null  <||@
  Comment 681 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 548 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 686 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 692 block B54 null  <||@
  Comment 692 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 558 xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 697 560 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 702 562 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 706 564 JUMP ~[] destination: B54 -> B55  <||@
  Comment 706 block B55 null  <||@
  Comment 706 566 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 706 568 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 711 570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 717 block B57 null  <||@
  Comment 717 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 578 xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 723 580 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 729 582 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 733 584 JUMP ~[] destination: B57 -> B58  <||@
  Comment 733 block B58 null  <||@
  Comment 733 586 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 733 588 CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD  <||@
  Comment 737 590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 743 block B60 null  <||@
  Comment 743 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 600 rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 746 602 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 749 606 JUMP ~[] destination: B60 -> B61  <||@
  Comment 749 block B61 null  <||@
  Comment 749 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 502 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 754 610 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 757 612 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63  <||@
  Comment 763 block B63 null  <||@
  Comment 763 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 620 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 767 622 rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 771 624 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 778 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 778 block B64 loop 3 depth 1 header:619|LoopBegin  <||@
  Comment 778 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 630 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 790 632 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 794 634 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 798 636 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 801 638 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 804 640 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 806 block B66 null  <||@
  Comment 806 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 648 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 810 650 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 814 652 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 818 654 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 824 block B68 null  <||@
  Comment 824 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 678 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 828 680 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 835 682 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 835 686 JUMP ~[] destination: B68 -> B69  <||@
  Comment 835 block B69 null  <||@
  Comment 835 688 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 835 684 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 840 690 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 843 692 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 843 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 853 694 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 860 696 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 863 698 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 863 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 870 700 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3  <||@
  Comment 874 702 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 877 704 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 881 706 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 884 708 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37  <||@
  Comment 893 12  <||@
  Comment 903 block B15 null  <||@
  Comment 903 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 220 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 908 222 r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 913 224 JUMP ~[] destination: B15 -> B30  <||@
  Comment 918 block B28 null  <||@
  Comment 918 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 918 314 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 923 316 JUMP ~[] destination: B28 -> B30  <||@
  Comment 928 block B19 loop 0 depth 1 header:646|LoopBegin  <||@
  Comment 928 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 928 252 xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 933 254 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 938 256 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 942 258 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 945 260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 952 block B50 loop 2 depth 1 header:701|LoopBegin  <||@
  Comment 952 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 960 532 xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 965 534 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 970 536 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 974 538 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 977 540 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50  <||@
  Comment 984 block B13 null  <||@
  Comment 984 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 172 stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 989 174 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 994 176 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 999 178 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1004 180 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1009 182 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 188 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1014 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1024 190 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 192 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1030 194 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1035 196 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1038 198 r14|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1041 200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1041 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1046 [stack:36, stack:40, stack:72, stack:84]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1047 202 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1052 block B44 null  <||@
  Comment 1052 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 466 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1057 468 stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1062 470 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1067 472 stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1072 474 stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1076 476 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1079 482 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1079 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1089 484 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1092 486 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1095 488 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1100 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9]  <||@
  Comment 1100 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1105 [r14:0, stack:36, stack:84]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                              |2             |3              
     locals:  |stack:76|DWORD[.]  |Object[Fusing$$Lambda$26/141412972@464551379]  |r14|QWORD[.]  |stack:72|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1106 492 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1111 block B67 null  <||@
  Comment 1111 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 658 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 660 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1114 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1124 662 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1129 664 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1134 666 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17]  <||@
  Comment 1134 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1139 [r13:0, r14:0, stack:84]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                                                               |1                                               |2             |3              
     locals:  |vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]}  |Object[Fusing$$Lambda$27/652525947@1242188746]  |r13|QWORD[.]  |stack:72|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 17, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1140 668 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1143 670 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 674 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1151 block B1 null  <||@
  Comment 1151 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 20 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808]  <||@
  Comment 1156 {Object[d.a@1193856808]}  <||@
  Comment 1166 24 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 26 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 1175 30 JUMP ~[] destination: B1 -> B76  <||@
  Comment 1175 block B76 null  <||@
  Comment 1175 754 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1175 28 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1180 756 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1187 758 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1194 760 DEOPT info [bci:0]  <||@
  Comment 1194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10d1a8f90, value=0x118f895fe]:0x118f895fe}  <||@
  Comment 1199 [r13:0]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 1200 block B75 null  <||@
  Comment 1200 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 742 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 744 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673]  <||@
  Comment 1205 {Object[d.a@347430673]}  <||@
  Comment 1215 746 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 748 r10|DWORD = MOVE input: int[-34331|0xffffffffffff79e5]  <||@
  Comment 1224 752 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1226 block B3 null  <||@
  Comment 1226 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 44 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1231 46 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077]  <||@
  Comment 1231 {Object[d.a@374064077]}  <||@
  Comment 1241 48 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 50 r10|DWORD = MOVE input: int[-46468|0xffffffffffff4a7c]  <||@
  Comment 1250 54 JUMP ~[] destination: B3 -> B76  <||@
  Comment 1252 block B72 null  <||@
  Comment 1252 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 720 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 722 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1260 724 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673]  <||@
  Comment 1260 {Object[d.a@347430673]}  <||@
  Comment 1270 726 MOV [r15|QWORD + 668] y: -39451 size: DWORD  <||@
  Comment 1281 728 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1288 730 DEOPT info [bci:15, 9]  <||@
  Comment 1288 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10d1a8f90, value=0x118f895fe]:0x118f895fe}  <||@
  Comment 1293 [r10:0, r14:0]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0             |1                                              |2             |3        
     locals:  |r10|DWORD[.]  |Object[Fusing$$Lambda$26/141412972@464551379]  |r14|QWORD[.]  |r9|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1294 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11932c8e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1294 4  <||@
  Comment 1300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10d1a8f88, value=0x118f89500]:0x118f89500}  <||@
  Comment 1300 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1238[bench.Fusing.notFused()]"
  method "HotSpotCompilation-1238[bench.Fusing.notFused()]"
  date 1527270380448
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 119aff8c0 448b560849c1e203493bc20f858f8548ff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c24604c8bee458b7510468b14f51000000044895424544585d20f8432040000468b1cf50c000000468b04dd0c0000004181f8ffffff7f0f8460040000458bc841ffc1418bf1d1ee8bf648ffce4889742440488bde48d1e3418bf8483bfb0f87090000004585c00f8516040000498b5760498b4f70418bc0c1e0028d401783e0f84863c04181f8ffffff000f831a030000488be84803ea483be90f870b03000049896f600f188410c00000000f188410000100000f188410400100000f188410800100004489420c48c70201000000c742086d0100f8488944243848895c243044894c242c458be844895c24284489742424488bc24c8bf7498bfe48ffcf4d8d56fe4d8d5efc4d8d46f84585ed0f8447020000448b4c2428488d70104a8d14cd100000004d85c048c7c1000000000f8d3f020000493bcb0f8f0e000000c5fa6f048ac5fa7f048e488d4904493bca0f8f10000000c4e1f96e048ac4e1f97e048e488d4902483bcf0f8ffc0100008b148a89148e488b7424404885f60f8c37000000488d50104a8d0ccd1000000049c7c1000000000f1f8400000000000f1f8000000000bb0100000042031cc942891cca49ffc14c3bce7eeb8b4c242c448bc94183e1fe4c3b7424300f87090000004585ed0f85e0020000498b5760498b4f704181fdffffff000f8303020000488bda48035c2438483bd90f87f2010000488b6c243849895f600f188415c00000000f188415000100000f188415400100000f1884158001000044896a0c48c70201000000c742086d0100f844894c24284c894424184c895c24104c8954240848893c244c8bf0488bc24585ed0f84610000004c8b442418488d7010498d56104d85c048c7c1000000000f8d17010000483b4c24100f8f0e000000c5fa6f048ac5fa7f048e488d4904483b4c24080f8f10000000c4e1f96e048ac4e1f97e048e488d4902483b0c240f8f060000008b148a89148e488b7424404885f60f8c2b000000488d5010498d4e1049c7c200000000660f1f44000041bb0100000046031cd146891cd249ffc24c3bd67eea498b7760488d5618493b57700f871f010000498957600f1886d8000000448b542454488bd648b9b8ca2bc007000000488b89a800000048890ec74608577905f848c1e80389460c44895610488bc2488b6c24604883c4688505c37399f3c5f877c3488b742440448b4c2428e90ffeffff488b742440e905feffffc5fe6f048ac5fe7f048e488d4908493bc87eede9a9fdffff0f1f840000000000c5fe6f048ac5fe7f048e488d4908493bc87eede9d1feffff488944243848895c243044894c242c44895c242844897424244c896c244848ba680b00c007000000488bf2418bd0b900000000458be84c8bf7e88a1db1ff90e909fdffff44894c24284c894424184c895c24104c8954240848893c244c8bf048ba680b00c007000000488bf2418bd5b900000000e84f1db1ff90e92cfeffff4c8be848be680b00c007000000ba02000000b901000000e82d1db1ff90488bf0498bc5e9c4feffff4c896c244849baa8658caf070000004d8bda41baed67ffff4c8b6c24484589979c0200004d899fa8020000e88f9848ff904c896c244849ba88648caf070000004d8bda41bae579ffffebcd4c896c244849ba18658caf070000004d8bda41ba7c4affffebb34c8bf0448b54242449bb88648caf0700000041c7879c020000e565ffff4d899fa8020000e8319848ff90e80dcb82ff90e8279748ff90f4f4f4f4f4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x10d1a8f78, value=0x118f87e60]:0x118f87e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@36e336ca slotKind: QWORD  <||@
  Comment 48 6 r13|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 51 8 r14|DWORD[.] = MOV [r13|QWORD[.] + 16] size: DWORD  <||@
  Comment 55 10 r10|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD state [bci:0]  <||@
  Comment 55 [r13:0, r14:0]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 55 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 12 stack:28|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 68 14 TEST (x: r10|DWORD[.], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 71 16 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2  <||@
  Comment 77 block B2 null  <||@
  Comment 77 32 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 77 34 r11|DWORD[.] = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 85 36 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 85 [r11:0, r13:0, r14:0, stack:84]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 85 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 93 38 CMP r8|DWORD y: 2147483647 size: DWORD  <||@
  Comment 100 40 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4  <||@
  Comment 106 block B4 null  <||@
  Comment 106 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 58 r9|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 112 60 rsi|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 117 62 rsi|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 119 64 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 122 66 stack:48|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 127 68 rbx|QWORD = SHL rsi|QWORD size: QWORD  <||@
  Comment 133 70 rdi|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 136 72 CMP (x: rdi|QWORD, y: rbx|QWORD) size: QWORD  <||@
  Comment 139 74 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B4 -> B8 falseDestination: B4 -> B6  <||@
  Comment 145 block B6 null  <||@
  Comment 145 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 145 82 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 148 84 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B8 falseDestination: B6 -> B75  <||@
  Comment 154 block B8 null  <||@
  Comment 154 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 92 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 158 94 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 162 96 rax|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 168 98 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 171 100 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 174 102 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 177 104 CMP r8|DWORD y: 16777215 size: DWORD  <||@
  Comment 184 106 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B8 -> B9 falseDestination: B8 -> B13  <||@
  Comment 190 block B9 null  <||@
  Comment 190 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 190 110 rbp|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 196 112 CMP (x: rbp|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 199 114 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B13 falseDestination: B9 -> B11  <||@
  Comment 205 block B11 null  <||@
  Comment 205 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 205 134 MOV (x: [r15|QWORD + 96], y: rbp|QWORD) size: QWORD  <||@
  Comment 209 136 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 217 138 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 225 140 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 233 142 AMD64PREFETCH ~[rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 241 144 MOV (x: [rdx|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 245 146 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 252 148 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 252 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 259 150 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 259 152 stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 264 154 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 269 156 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 274 158 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 277 160 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 282 162 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 287 164 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 290 166 r14|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 293 168 JUMP ~[] destination: B11 -> B14  <||@
  Comment 293 block B14 null  <||@
  Comment 293 204 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 293 206 rdi|QWORD = DEC r14|QWORD size: QWORD  <||@
  Comment 299 208 r10|QWORD = LEA [r14|QWORD - 2] size: QWORD  <||@
  Comment 303 210 r11|QWORD = LEA [r14|QWORD - 4] size: QWORD  <||@
  Comment 307 212 r8|QWORD = LEA [r14|QWORD - 8] size: QWORD  <||@
  Comment 311 214 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 314 216 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16  <||@
  Comment 320 block B16 null  <||@
  Comment 320 226 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 228 r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 325 230 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 329 232 rdx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 337 234 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 340 240 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 347 236 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B16 -> B21 falseDestination: B16 -> B19  <||@
  Comment 353 block B21 null  <||@
  Comment 353 266 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 353 268 CMP (x: rcx|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 356 270 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B21 -> B24 falseDestination: B21 -> B23  <||@
  Comment 362 block B23 null  <||@
  Comment 362 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 362 278 xmm0|V128_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 367 280 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 372 282 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 376 284 JUMP ~[] destination: B23 -> B24  <||@
  Comment 376 block B24 null  <||@
  Comment 376 286 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 376 288 CMP (x: rcx|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 379 290 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B24 -> B27 falseDestination: B24 -> B26  <||@
  Comment 385 block B26 null  <||@
  Comment 385 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 385 298 xmm0|V64_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 391 300 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 397 302 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 401 304 JUMP ~[] destination: B26 -> B27  <||@
  Comment 401 block B27 null  <||@
  Comment 401 306 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 401 308 CMP (x: rcx|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 404 310 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B27 -> B28 falseDestination: B27 -> B29  <||@
  Comment 410 block B29 null  <||@
  Comment 410 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 410 320 rdx|DWORD = MOV [rdx|QWORD[*] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 413 322 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 416 324 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 421 326 JUMP ~[] destination: B29 -> B30  <||@
  Comment 421 block B30 null  <||@
  Comment 421 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 421 330 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 424 332 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B30 -> B35 falseDestination: B30 -> B32  <||@
  Comment 430 block B32 null  <||@
  Comment 430 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 430 342 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 434 344 rcx|QWORD[*] = LEA [r9|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 442 346 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 449 348 JUMP ~[] destination: B32 -> B33  <||@
  Comment 449 block B33 loop 1 depth 1 header:597|LoopBegin  <||@
  Comment 449 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 464 352 rbx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 469 354 rbx|DWORD = ADD (x: rbx|DWORD, ~y: [rcx|QWORD[*] + r9|QWORD * 8]) size: DWORD  <||@
  Comment 473 356 MOV (x: [rdx|QWORD[.] + r9|QWORD * 8], y: rbx|DWORD) size: DWORD  <||@
  Comment 477 358 r9|QWORD = INC r9|QWORD size: QWORD  <||@
  Comment 480 360 CMP (x: r9|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 483 362 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B33 -> B35 falseDestination: B33 -> B33  <||@
  Comment 485 block B35 null  <||@
  Comment 485 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 485 336 rcx|DWORD = MOVE stack:68|DWORD moveKind: DWORD  <||@
  Comment 489 372 r9|DWORD = AND rcx|DWORD y: -2 size: DWORD  <||@
  Comment 496 374 CMP (x: r14|QWORD, y: stack:64|QWORD) size: QWORD  <||@
  Comment 501 376 BRANCH trueDestinationProbability: 0.5 condition: |>| trueDestination: B35 -> B39 falseDestination: B35 -> B37  <||@
  Comment 507 block B37 null  <||@
  Comment 507 382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 507 384 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 510 386 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B37 -> B39 falseDestination: B37 -> B72  <||@
  Comment 516 block B39 null  <||@
  Comment 516 392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 516 394 rdx|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 520 396 rcx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 524 398 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 531 400 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B39 -> B40 falseDestination: B39 -> B44  <||@
  Comment 537 block B40 null  <||@
  Comment 537 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 537 404 rbx|QWORD = ADD (x: rdx|QWORD, y: stack:56|QWORD) size: QWORD  <||@
  Comment 545 406 CMP (x: rbx|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 548 408 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B40 -> B44 falseDestination: B40 -> B42  <||@
  Comment 554 block B42 null  <||@
  Comment 554 426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 554 428 rbp|QWORD = MOVE stack:56|QWORD moveKind: QWORD  <||@
  Comment 559 430 MOV (x: [r15|QWORD + 96], y: rbx|QWORD) size: QWORD  <||@
  Comment 563 432 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 192] instr: 0  <||@
  Comment 571 434 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 579 436 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 587 438 AMD64PREFETCH ~[rbp|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 595 440 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 599 442 MOV [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 606 444 MOV [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 606 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 613 446 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 613 448 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 618 450 stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 623 452 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 628 454 stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 633 456 stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 637 458 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 640 460 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 643 462 JUMP ~[] destination: B42 -> B45  <||@
  Comment 643 block B45 null  <||@
  Comment 643 494 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 643 496 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 646 498 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B45 -> B61 falseDestination: B45 -> B47  <||@
  Comment 652 block B47 null  <||@
  Comment 652 506 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 652 508 r8|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 657 510 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 661 512 rdx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 665 514 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 668 520 rcx|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 675 516 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B47 -> B52 falseDestination: B47 -> B50  <||@
  Comment 681 block B52 null  <||@
  Comment 681 546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 681 548 CMP (x: rcx|QWORD, y: stack:96|QWORD) size: QWORD  <||@
  Comment 686 550 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 692 block B54 null  <||@
  Comment 692 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 692 558 xmm0|V128_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 697 560 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V128_DWORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 702 562 rcx|QWORD = LEA [rcx|QWORD + 4] size: QWORD  <||@
  Comment 706 564 JUMP ~[] destination: B54 -> B55  <||@
  Comment 706 block B55 null  <||@
  Comment 706 566 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 706 568 CMP (x: rcx|QWORD, y: stack:104|QWORD) size: QWORD  <||@
  Comment 711 570 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 717 block B57 null  <||@
  Comment 717 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 717 578 xmm0|V64_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 723 580 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V64_DWORD) nZ: XMM oh: VMOVQ  <||@
  Comment 729 582 rcx|QWORD = LEA [rcx|QWORD + 2] size: QWORD  <||@
  Comment 733 584 JUMP ~[] destination: B57 -> B58  <||@
  Comment 733 block B58 null  <||@
  Comment 733 586 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 733 588 CMP (x: rcx|QWORD, y: stack:112|QWORD) size: QWORD  <||@
  Comment 737 590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B58 -> B61 falseDestination: B58 -> B60  <||@
  Comment 743 block B60 null  <||@
  Comment 743 598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 743 600 rdx|DWORD = MOV [rdx|QWORD[.] + rcx|QWORD * 4] size: DWORD  <||@
  Comment 746 602 MOV (x: [rsi|QWORD[.] + rcx|QWORD * 4], y: rdx|DWORD) size: DWORD  <||@
  Comment 749 606 JUMP ~[] destination: B60 -> B61  <||@
  Comment 749 block B61 null  <||@
  Comment 749 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 749 502 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 754 610 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 757 612 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B61 -> B66 falseDestination: B61 -> B63  <||@
  Comment 763 block B63 null  <||@
  Comment 763 618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 763 620 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 767 622 rcx|QWORD[.] = LEA [r14|QWORD[.] + 16] size: QWORD  <||@
  Comment 771 624 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 778 626 JUMP ~[] destination: B63 -> B64  <||@
  Comment 778 block B64 loop 3 depth 1 header:619|LoopBegin  <||@
  Comment 778 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 784 630 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 790 632 r11|DWORD = ADD (x: r11|DWORD, ~y: [rcx|QWORD[.] + r10|QWORD * 8]) size: DWORD  <||@
  Comment 794 634 MOV (x: [rdx|QWORD[.] + r10|QWORD * 8], y: r11|DWORD) size: DWORD  <||@
  Comment 798 636 r10|QWORD = INC r10|QWORD size: QWORD  <||@
  Comment 801 638 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 804 640 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B66 falseDestination: B64 -> B64  <||@
  Comment 806 block B66 null  <||@
  Comment 806 646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 648 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 810 650 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 814 652 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 818 654 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B66 -> B67 falseDestination: B66 -> B68  <||@
  Comment 824 block B68 null  <||@
  Comment 824 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 824 678 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 828 680 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 835 682 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 835 686 JUMP ~[] destination: B68 -> B69  <||@
  Comment 835 block B69 null  <||@
  Comment 835 688 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 835 684 r10|DWORD[.] = MOVE stack:28|DWORD[.] moveKind: DWORD  <||@
  Comment 840 690 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 843 692 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lbench/Fusing$List;, resolved>}  <||@
  Comment 843 {meta{HotSpotType<Lbench/Fusing$List;, resolved>}}  <||@
  Comment 853 694 rcx|QWORD = MOV [rcx|QWORD + 168] size: QWORD  <||@
  Comment 860 696 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 863 698 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}  <||@
  Comment 863 {meta{HotSpotType<Lbench/Fusing$List;, resolved>;compressed}}  <||@
  Comment 870 700 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@7f801431 encoding: base: 0 shift: 3  <||@
  Comment 874 702 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 877 704 MOV (x: [rsi|QWORD[*] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 881 706 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 884 708 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@6a1beb37  <||@
  Comment 893 12  <||@
  Comment 903 block B15 null  <||@
  Comment 903 218 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 903 220 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 908 222 r9|DWORD[.] = MOVE stack:72|DWORD[.] moveKind: DWORD  <||@
  Comment 913 224 JUMP ~[] destination: B15 -> B30  <||@
  Comment 918 block B28 null  <||@
  Comment 918 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 918 314 rsi|QWORD = MOVE stack:48|QWORD moveKind: QWORD  <||@
  Comment 923 316 JUMP ~[] destination: B28 -> B30  <||@
  Comment 928 block B19 loop 0 depth 1 header:646|LoopBegin  <||@
  Comment 928 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 928 252 xmm0|V256_DWORD = H [rdx|QWORD[*] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 933 254 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 938 256 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 942 258 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 945 260 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B19 -> B21 falseDestination: B19 -> B19  <||@
  Comment 952 block B50 loop 2 depth 1 header:701|LoopBegin  <||@
  Comment 952 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 960 532 xmm0|V256_DWORD = H [rdx|QWORD[.] + rcx|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 965 534 J (address: [rsi|QWORD[.] + rcx|QWORD * 4], input: xmm0|V256_DWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 970 536 rcx|QWORD = LEA [rcx|QWORD + 8] size: QWORD  <||@
  Comment 974 538 CMP (x: rcx|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 977 540 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B50 -> B52 falseDestination: B50 -> B50  <||@
  Comment 984 block B13 null  <||@
  Comment 984 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 984 172 stack:56|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 989 174 stack:64|QWORD = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 994 176 stack:68|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 999 178 stack:72|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1004 180 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 1009 182 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1014 188 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1014 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1024 190 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1027 192 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1030 194 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1035 196 r13|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1038 198 r14|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1041 200 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 1041 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1046 [stack:36, stack:40, stack:72, stack:84]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1047 202 JUMP ~[] destination: B13 -> B14  <||@
  Comment 1052 block B44 null  <||@
  Comment 1052 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1052 466 stack:72|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1057 468 stack:88|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 1062 470 stack:96|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1067 472 stack:104|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1072 474 stack:112|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1076 476 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1079 482 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1079 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1089 484 rsi|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 1092 486 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1095 488 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1100 490 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 9]  <||@
  Comment 1100 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1105 [r14:0, stack:36, stack:84]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                  |1                                              |2             |3              
     locals:  |stack:76|DWORD[.]  |Object[Fusing$$Lambda$26/141412972@464551379]  |r14|QWORD[.]  |stack:72|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1106 492 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1111 block B67 null  <||@
  Comment 1111 656 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1111 658 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1114 660 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 1114 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 1124 662 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 1129 664 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1134 666 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:15, 17]  <||@
  Comment 1134 {Stub<NewArrayStub.newArray>@0x119611a60:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1139 [r13:0, r14:0, stack:84]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0                                                               |1                                               |2             |3              
     locals:  |vobject:Fusing$List:0{a=r14|QWORD[.],$outer=stack:28|DWORD[.]}  |Object[Fusing$$Lambda$27/652525947@1242188746]  |r13|QWORD[.]  |stack:72|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 17, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1140 668 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1143 670 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1146 674 JUMP ~[] destination: B67 -> B69  <||@
  Comment 1151 block B1 null  <||@
  Comment 1151 18 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1151 20 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1156 22 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@1193856808]  <||@
  Comment 1156 {Object[d.a@1193856808]}  <||@
  Comment 1166 24 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 26 r10|DWORD = MOVE input: int[-38931|0xffffffffffff67ed]  <||@
  Comment 1175 30 JUMP ~[] destination: B1 -> B76  <||@
  Comment 1175 block B76 null  <||@
  Comment 1175 754 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1175 28 r13|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1180 756 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1187 758 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1194 760 DEOPT info [bci:0]  <||@
  Comment 1194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10d1a8f90, value=0x118f895fe]:0x118f895fe}  <||@
  Comment 1199 [r13:0]at bench.Fusing.notFused(Bench.scala:148) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |r13|QWORD[.]   <||@
  Comment 1200 block B75 null  <||@
  Comment 1200 740 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1200 742 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1205 744 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673]  <||@
  Comment 1205 {Object[d.a@347430673]}  <||@
  Comment 1215 746 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1218 748 r10|DWORD = MOVE input: int[-34331|0xffffffffffff79e5]  <||@
  Comment 1224 752 JUMP ~[] destination: B75 -> B76  <||@
  Comment 1226 block B3 null  <||@
  Comment 1226 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1226 44 stack:40|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 1231 46 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@374064077]  <||@
  Comment 1231 {Object[d.a@374064077]}  <||@
  Comment 1241 48 r11|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1244 50 r10|DWORD = MOVE input: int[-46468|0xffffffffffff4a7c]  <||@
  Comment 1250 54 JUMP ~[] destination: B3 -> B76  <||@
  Comment 1252 block B72 null  <||@
  Comment 1252 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 720 r14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 722 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 1260 724 r11|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@347430673]  <||@
  Comment 1260 {Object[d.a@347430673]}  <||@
  Comment 1270 726 MOV [r15|QWORD + 668] y: -39451 size: DWORD  <||@
  Comment 1281 728 MOV (x: [r15|QWORD + 680], y: r11|QWORD[.]) size: QWORD  <||@
  Comment 1288 730 DEOPT info [bci:15, 9]  <||@
  Comment 1288 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x10d1a8f90, value=0x118f895fe]:0x118f895fe}  <||@
  Comment 1293 [r10:0, r14:0]at bench.Fusing$List.map(Bench.scala:126) [bci: 15, duringCall: false, rethrow: false]
              |0             |1                                              |2             |3        
     locals:  |r10|DWORD[.]  |Object[Fusing$$Lambda$26/141412972@464551379]  |r14|QWORD[.]  |r9|DWORD 
  at bench.Fusing.notFused(Bench.scala:148) [bci: 9, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1294 {Stub<ExceptionHandlerStub.exceptionHandler>@0x11932c8e0:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1294 4  <||@
  Comment 1300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x10d1a8f88, value=0x118f89500]:0x118f89500}  <||@
  Comment 1300 5  <||@
  HexCodeFile>>> <|@
end_nmethod
